{
	"id": "96bfa29ec16c59b325ed6e035cebf57a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/OracleManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/**\n * @title OracleManager\n * @notice Manages aggregator references (Chainlink) for normal tokens,\n *         plus specialized logic for Uniswap V3 vault tokens.\n */\n\n/* ---------------------------------------------------------------------\n * 1) Chainlink aggregator interface for testnet\n * --------------------------------------------------------------------- */\nimport \"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n/* ---------------------------------------------------------------------\n * 2) OpenZeppelin v4.8.3\n * --------------------------------------------------------------------- */\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\";\n\n/* ---------------------------------------------------------------------\n * 3) Uniswap v3-periphery (0.8) for LiquidityAmounts\n * --------------------------------------------------------------------- */\nimport \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\";\n\n/* ---------------------------------------------------------------------\n * Local TickMathLocal for 0.8.x\n * ---------------------------------------------------------------------\n */\nlibrary TickMathLocal {\n    int24 internal constant MIN_TICK = -887272;\n    int24 internal constant MAX_TICK =  887272;\n\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        require(tick >= MIN_TICK && tick <= MAX_TICK, \"Tick out of range\");\n\n        uint256 absTick = (tick < 0) \n            ? uint256(uint24(uint24(-tick))) \n            : uint256(uint24(uint24(tick)));\n\n        uint256 ratio = 0x100000000000000000000000000000000; // 1 << 128\n\n        if (absTick & 0x1     != 0) ratio = (ratio * 0xfffcb933bd6fad37aa2d162d1a594001) >> 128;\n        if (absTick & 0x2     != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4     != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8     != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10    != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20    != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40    != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80    != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100   != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200   != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400   != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800   != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000  != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000  != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000  != 0) ratio = (ratio * 0x70d869a156d2a1f6a7a2e3fadacb4c9b) >> 128;\n        if (absTick & 0x8000  != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) {\n            ratio = type(uint256).max / ratio;\n        }\n\n        uint256 shifted = ratio >> 32;\n        require(shifted <= type(uint160).max, \"Price overflow\");\n        sqrtPriceX96 = uint160(shifted);\n    }\n}\n\n/* ---------------------------------------------------------------------\n * Minimal Interfaces for Vault & NFPM & Pool\n * --------------------------------------------------------------------- */\ninterface IVaultToken {\n    function totalSupply() external view returns (uint256);\n    function vaultTokenId() external view returns (uint256);\n    function positionManager() external view returns (address);\n    function v3Pool() external view returns (address);\n}\n\ninterface INonfungiblePositionManager {\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n}\n\ninterface IUniswapV3Pool {\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n}\n\n/* ---------------------------------------------------------------------\n * OracleManager Implementation\n * --------------------------------------------------------------------- */\ncontract OracleManager is Ownable {\n    struct OracleData {\n        address primaryAggregator;\n        address fallbackAggregator;\n        bool useFallbackIfError;\n        uint8 decimalsOverride;\n        bool isVaultToken;\n    }\n\n    struct VaultUnderlyingFeeds {\n        address token0Aggregator;\n        address token1Aggregator;\n        uint8 token0Decimals;\n        uint8 token1Decimals;\n        bool exists;\n    }\n\n    mapping(address => OracleData) public oracleConfigs;\n    mapping(address => VaultUnderlyingFeeds) public vaultFeeds;\n\n    event OracleConfigUpdated(\n        address indexed token,\n        address primaryAggregator,\n        address fallbackAggregator,\n        bool useFallbackIfError,\n        uint8 decimalsOverride,\n        bool isVaultToken\n    );\n\n    event VaultUnderlyingFeedsUpdated(\n        address indexed vaultToken,\n        address token0Aggregator,\n        address token1Aggregator,\n        uint8 token0Decimals,\n        uint8 token1Decimals\n    );\n\n    constructor(address initialOwner) {\n        require(initialOwner != address(0), \"OracleManager: invalid owner\");\n        _transferOwnership(initialOwner);\n    }\n\n    function setOracleConfig(\n        address token,\n        address primaryAggregator,\n        address fallbackAggregator,\n        bool useFallbackIfErr,\n        uint8 decimalsOvr,\n        bool isVaultToken\n    ) external onlyOwner {\n        require(token != address(0), \"OracleManager: invalid token\");\n        if (!isVaultToken) {\n            require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\");\n        }\n\n        oracleConfigs[token] = OracleData({\n            primaryAggregator: primaryAggregator,\n            fallbackAggregator: fallbackAggregator,\n            useFallbackIfError: useFallbackIfErr,\n            decimalsOverride: decimalsOvr,\n            isVaultToken: isVaultToken\n        });\n\n        emit OracleConfigUpdated(\n            token,\n            primaryAggregator,\n            fallbackAggregator,\n            useFallbackIfErr,\n            decimalsOvr,\n            isVaultToken\n        );\n    }\n\n    function setVaultUnderlyingFeeds(\n        address vaultToken,\n        address token0Agg,\n        address token1Agg,\n        uint8 token0Dec,\n        uint8 token1Dec\n    ) external onlyOwner {\n        require(vaultToken != address(0), \"OracleManager: invalid vaultToken\");\n\n        vaultFeeds[vaultToken] = VaultUnderlyingFeeds({\n            token0Aggregator: token0Agg,\n            token1Aggregator: token1Agg,\n            token0Decimals: token0Dec,\n            token1Decimals: token1Dec,\n            exists: true\n        });\n\n        emit VaultUnderlyingFeedsUpdated(\n            vaultToken,\n            token0Agg,\n            token1Agg,\n            token0Dec,\n            token1Dec\n        );\n    }\n\n    function getPrice(address token) external view returns (uint256 price, uint8 decimals) {\n        OracleData memory cfg = oracleConfigs[token];\n        require(cfg.primaryAggregator != address(0) || cfg.isVaultToken, \"OracleManager: no aggregator/vault logic\");\n\n        if (!cfg.isVaultToken) {\n            (price, decimals) = _getPriceFromConfig(cfg);\n        } else {\n            VaultUnderlyingFeeds memory vf = vaultFeeds[token];\n            require(vf.exists, \"OracleManager: vault feeds not set\");\n            (price, decimals) = _computeVaultTokenPrice(token, vf);\n        }\n    }\n\n    // ---------------------------------------------------------------------\n    // Internal\n    // ---------------------------------------------------------------------\n\n    function _getPriceFromConfig(OracleData memory cfg)\n        internal\n        view\n        returns (uint256 price, uint8 decimals)\n    {\n        (bool okPrimary, uint256 p, uint8 d) = _tryGetChainlinkPrice(cfg.primaryAggregator, cfg.decimalsOverride);\n        if (!okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0)) {\n            (bool okFallback, uint256 pFallback, uint8 dFallback) =\n                _tryGetChainlinkPrice(cfg.fallbackAggregator, cfg.decimalsOverride);\n            require(okFallback, \"OracleManager: fallback aggregator fail\");\n            return (pFallback, dFallback);\n        }\n        require(okPrimary, \"OracleManager: primary aggregator fail\");\n        return (p, d);\n    }\n\n    struct AggregatorPair {\n        address agg0;\n        address agg1;\n        uint8 dec0;\n        uint8 dec1;\n    }\n\n    struct PositionResult {\n        address token0;\n        address token1;\n        int24 tickLower;\n        int24 tickUpper;\n        uint128 liquidity;\n        uint128 owed0;\n        uint128 owed1;\n    }\n\n    function _computeVaultTokenPrice(address vaultToken, VaultUnderlyingFeeds memory vf)\n        internal\n        view\n        returns (uint256 price, uint8 decimals)\n    {\n        (uint256 totalShares, uint256 tokenId, address posMgr) = _fetchVaultInfo(vaultToken);\n\n        PositionResult memory pos = _fetchPositionData(posMgr, tokenId);\n\n        (uint160 sqrtPriceX96, int24 tick) = _getPoolSqrtAndTick(IVaultToken(vaultToken).v3Pool());\n        (uint256 amtActive0, uint256 amtActive1) = _computeLiquidityAmounts(\n            sqrtPriceX96,\n            pos.tickLower,\n            pos.tickUpper,\n            pos.liquidity\n        );\n\n        uint256 amt0 = amtActive0 + pos.owed0;\n        uint256 amt1 = amtActive1 + pos.owed1;\n\n        AggregatorPair memory ap = AggregatorPair({\n            agg0: vf.token0Aggregator,\n            agg1: vf.token1Aggregator,\n            dec0: vf.token0Decimals,\n            dec1: vf.token1Decimals\n        });\n\n        uint256 totalValue = _convertVaultTokensToValue(amt0, amt1, ap);\n\n        price = totalValue / (totalShares == 0 ? 1 : totalShares);\n        decimals = 8;\n    }\n\n    function _fetchVaultInfo(address vaultToken)\n        internal\n        view\n        returns (uint256 totalShares, uint256 tokenId, address posMgr)\n    {\n        IVaultToken v = IVaultToken(vaultToken);\n        totalShares = v.totalSupply();\n        require(totalShares > 0, \"OracleManager: vault totalSupply=0\");\n        tokenId = v.vaultTokenId();\n        require(tokenId != 0, \"OracleManager: no NFT in vault\");\n        posMgr = v.positionManager();\n        require(posMgr != address(0), \"OracleManager: invalid positionMgr\");\n    }\n\n    function _fetchPositionData(address posMgr, uint256 tokenId)\n        internal\n        view\n        returns (PositionResult memory pos)\n    {\n        (bool success, bytes memory data) = posMgr.staticcall(\n            abi.encodeWithSelector(INonfungiblePositionManager.positions.selector, tokenId)\n        );\n        require(success, _getRevertMsg(data));\n\n        (\n            ,\n            ,\n            pos.token0,\n            pos.token1,\n            ,\n            pos.tickLower,\n            pos.tickUpper,\n            pos.liquidity,\n            ,\n            ,\n            pos.owed0,\n            pos.owed1\n        ) = abi.decode(\n            data,\n            (uint96, address, address, address, uint24, int24, int24, uint128, uint256, uint256, uint128, uint128)\n        );\n    }\n\n    function _getPoolSqrtAndTick(address poolAddr) internal view returns (uint160 sqrtPriceX96, int24 tick) {\n        require(poolAddr != address(0), \"OracleManager: invalid pool\");\n        (bool success, bytes memory data) = poolAddr.staticcall(\n            abi.encodeWithSelector(IUniswapV3Pool.slot0.selector)\n        );\n        require(success, _getRevertMsg(data));\n        (sqrtPriceX96, tick, , , , , ) = abi.decode(data, (uint160, int24, uint16, uint16, uint16, uint8, bool));\n    }\n\n    function _computeLiquidityAmounts(\n        uint160 sqrtPriceX96,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 liquidity\n    ) internal pure returns (uint256 amt0, uint256 amt1) {\n        if (liquidity == 0) {\n            return (0, 0);\n        }\n        uint160 sqrtLower = TickMathLocal.getSqrtRatioAtTick(tickLower);\n        uint160 sqrtUpper = TickMathLocal.getSqrtRatioAtTick(tickUpper);\n\n        (amt0, amt1) = LiquidityAmounts.getAmountsForLiquidity(\n            sqrtPriceX96,\n            sqrtLower,\n            sqrtUpper,\n            liquidity\n        );\n    }\n\n    function _convertVaultTokensToValue(\n        uint256 amt0,\n        uint256 amt1,\n        AggregatorPair memory ap\n    ) internal view returns (uint256) {\n        uint256 val0 = _convertToAggregatorValue(amt0, ap.agg0, ap.dec0);\n        uint256 val1 = _convertToAggregatorValue(amt1, ap.agg1, ap.dec1);\n        return val0 + val1;\n    }\n\n    function _convertToAggregatorValue(\n        uint256 amt,\n        address aggregatorAddr,\n        uint8 decimalsOvr\n    ) internal view returns (uint256) {\n        if (amt == 0 || aggregatorAddr == address(0)) {\n            return 0;\n        }\n        (bool ok, uint256 p, uint8 d) = _tryGetChainlinkPrice(aggregatorAddr, decimalsOvr);\n        require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\");\n        return (amt * p) / (10 ** d);\n    }\n\n    function _tryGetChainlinkPrice(address aggregator, uint8 decimalsOvr)\n        internal\n        view\n        returns (bool success, uint256 price, uint8 decimals)\n    {\n        if (aggregator == address(0)) {\n            return (false, 0, 0);\n        }\n        bytes memory payload = abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector);\n        (bool callSuccess, bytes memory returnData) = aggregator.staticcall(payload);\n        if (!callSuccess || returnData.length < 160) {\n            return (false, 0, 0);\n        }\n        ( , int256 answer, , , ) = abi.decode(returnData, (uint80, int256, uint256, uint256, uint80));\n        if (answer <= 0) {\n            return (false, 0, 0);\n        }\n\n        uint8 aggDecimals = decimalsOvr;\n        if (aggDecimals == 0) {\n            (bool decSuccess, bytes memory decData) = aggregator.staticcall(\n                abi.encodeWithSelector(AggregatorV3Interface.decimals.selector)\n            );\n            if (!decSuccess || decData.length < 32) {\n                return (false, 0, 0);\n            }\n            aggDecimals = abi.decode(decData, (uint8));\n        }\n        return (true, uint256(answer), aggDecimals);\n    }\n\n    function _getRevertMsg(bytes memory _returnData) private pure returns (string memory) {\n        if (_returnData.length < 68) return \"OracleManager: call reverted w/o msg\";\n        assembly {\n            _returnData := add(_returnData, 0x04)\n        }\n        return abi.decode(_returnData, (string));\n    }\n}\n"
			},
			"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport '@uniswap/v3-core/contracts/libraries/FullMath.sol';\nimport '@uniswap/v3-core/contracts/libraries/FixedPoint96.sol';\n\n/// @title Liquidity amount functions\n/// @notice Provides functions for computing liquidity amounts from token amounts and prices\nlibrary LiquidityAmounts {\n    /// @notice Downcasts uint256 to uint128\n    /// @param x The uint258 to be downcasted\n    /// @return y The passed value, downcasted to uint128\n    function toUint128(uint256 x) private pure returns (uint128 y) {\n        require((y = uint128(x)) == x);\n    }\n\n    /// @notice Computes the amount of liquidity received for a given amount of token0 and price range\n    /// @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param amount0 The amount0 being sent in\n    /// @return liquidity The amount of returned liquidity\n    function getLiquidityForAmount0(\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint256 amount0\n    ) internal pure returns (uint128 liquidity) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n        uint256 intermediate = FullMath.mulDiv(sqrtRatioAX96, sqrtRatioBX96, FixedPoint96.Q96);\n        unchecked {\n            return toUint128(FullMath.mulDiv(amount0, intermediate, sqrtRatioBX96 - sqrtRatioAX96));\n        }\n    }\n\n    /// @notice Computes the amount of liquidity received for a given amount of token1 and price range\n    /// @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param amount1 The amount1 being sent in\n    /// @return liquidity The amount of returned liquidity\n    function getLiquidityForAmount1(\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint256 amount1\n    ) internal pure returns (uint128 liquidity) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n        unchecked {\n            return toUint128(FullMath.mulDiv(amount1, FixedPoint96.Q96, sqrtRatioBX96 - sqrtRatioAX96));\n        }\n    }\n\n    /// @notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\n    /// pool prices and the prices at the tick boundaries\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param amount0 The amount of token0 being sent in\n    /// @param amount1 The amount of token1 being sent in\n    /// @return liquidity The maximum amount of liquidity received\n    function getLiquidityForAmounts(\n        uint160 sqrtRatioX96,\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint256 amount0,\n        uint256 amount1\n    ) internal pure returns (uint128 liquidity) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\n            liquidity = getLiquidityForAmount0(sqrtRatioAX96, sqrtRatioBX96, amount0);\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\n            uint128 liquidity0 = getLiquidityForAmount0(sqrtRatioX96, sqrtRatioBX96, amount0);\n            uint128 liquidity1 = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioX96, amount1);\n\n            liquidity = liquidity0 < liquidity1 ? liquidity0 : liquidity1;\n        } else {\n            liquidity = getLiquidityForAmount1(sqrtRatioAX96, sqrtRatioBX96, amount1);\n        }\n    }\n\n    /// @notice Computes the amount of token0 for a given amount of liquidity and a price range\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param liquidity The liquidity being valued\n    /// @return amount0 The amount of token0\n    function getAmount0ForLiquidity(\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount0) {\n        unchecked {\n            if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n            return\n                FullMath.mulDiv(\n                    uint256(liquidity) << FixedPoint96.RESOLUTION,\n                    sqrtRatioBX96 - sqrtRatioAX96,\n                    sqrtRatioBX96\n                ) / sqrtRatioAX96;\n        }\n    }\n\n    /// @notice Computes the amount of token1 for a given amount of liquidity and a price range\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param liquidity The liquidity being valued\n    /// @return amount1 The amount of token1\n    function getAmount1ForLiquidity(\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount1) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        unchecked {\n            return FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96);\n        }\n    }\n\n    /// @notice Computes the token0 and token1 value for a given amount of liquidity, the current\n    /// pool prices and the prices at the tick boundaries\n    /// @param sqrtRatioX96 A sqrt price representing the current pool prices\n    /// @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n    /// @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n    /// @param liquidity The liquidity being valued\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function getAmountsForLiquidity(\n        uint160 sqrtRatioX96,\n        uint160 sqrtRatioAX96,\n        uint160 sqrtRatioBX96,\n        uint128 liquidity\n    ) internal pure returns (uint256 amount0, uint256 amount1) {\n        if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96);\n\n        if (sqrtRatioX96 <= sqrtRatioAX96) {\n            amount0 = getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\n        } else if (sqrtRatioX96 < sqrtRatioBX96) {\n            amount0 = getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity);\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity);\n        } else {\n            amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.4.0;\n\n/// @title FixedPoint96\n/// @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n/// @dev Used in SqrtPriceMath.sol\nlibrary FixedPoint96 {\n    uint8 internal constant RESOLUTION = 96;\n    uint256 internal constant Q96 = 0x1000000000000000000000000;\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = a * b\n            // Compute the product mod 2**256 and mod 2**256 - 1\n            // then use the Chinese Remainder Theorem to reconstruct\n            // the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2**256 + prod0\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(a, b, not(0))\n                prod0 := mul(a, b)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division\n            if (prod1 == 0) {\n                require(denominator > 0);\n                assembly {\n                    result := div(prod0, denominator)\n                }\n                return result;\n            }\n\n            // Make sure the result is less than 2**256.\n            // Also prevents denominator == 0\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0]\n            // Compute remainder using mulmod\n            uint256 remainder;\n            assembly {\n                remainder := mulmod(a, b, denominator)\n            }\n            // Subtract 256 bit number from 512 bit number\n            assembly {\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator\n            // Compute largest power of two divisor of denominator.\n            // Always >= 1.\n            uint256 twos = (0 - denominator) & denominator;\n            // Divide denominator by power of two\n            assembly {\n                denominator := div(denominator, twos)\n            }\n\n            // Divide [prod1 prod0] by the factors of two\n            assembly {\n                prod0 := div(prod0, twos)\n            }\n            // Shift in bits from prod1 into prod0. For this we need\n            // to flip `twos` such that it is 2**256 / twos.\n            // If twos is zero, then it becomes one\n            assembly {\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2**256\n            // Now that denominator is an odd number, it has an inverse\n            // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n            // Compute the inverse by starting with a seed that is correct\n            // correct for four bits. That is, denominator * inv = 1 mod 2**4\n            uint256 inv = (3 * denominator) ^ 2;\n            // Now use Newton-Raphson iteration to improve the precision.\n            // Thanks to Hensel's lifting lemma, this also works in modular\n            // arithmetic, doubling the correct bits in each step.\n            inv *= 2 - denominator * inv; // inverse mod 2**8\n            inv *= 2 - denominator * inv; // inverse mod 2**16\n            inv *= 2 - denominator * inv; // inverse mod 2**32\n            inv *= 2 - denominator * inv; // inverse mod 2**64\n            inv *= 2 - denominator * inv; // inverse mod 2**128\n            inv *= 2 - denominator * inv; // inverse mod 2**256\n\n            // Because the division is now exact we can divide by multiplying\n            // with the modular inverse of denominator. This will give us the\n            // correct result modulo 2**256. Since the precoditions guarantee\n            // that the outcome is less than 2**256, this is the final result.\n            // We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inv;\n            return result;\n        }\n    }\n\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            result = mulDiv(a, b, denominator);\n            if (mulmod(a, b, denominator) > 0) {\n                require(result < type(uint256).max);\n                result++;\n            }\n        }\n    }\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "shanghai"
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol": {
				"FixedPoint96": {
					"abi": [],
					"devdoc": {
						"details": "Used in SqrtPriceMath.sol",
						"kind": "dev",
						"methods": {},
						"title": "FixedPoint96",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":245:379  library FixedPoint96 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206a050e84301ac50ede8c81009d9079dd61703ec2afda843250123d6028ccac8464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206a050e84301ac50ede8c81009d9079dd61703ec2afda843250123d6028ccac8464736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x50E84301AC50EDE8C8100 SWAP14 SWAP1 PUSH26 0xDD61703EC2AFDA843250123D6028CCAC8464736F6C634300081C STOP CALLER ",
							"sourceMap": "245:134:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;245:134:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206a050e84301ac50ede8c81009d9079dd61703ec2afda843250123d6028ccac8464736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x50E84301AC50EDE8C8100 SWAP14 SWAP1 PUSH26 0xDD61703EC2AFDA843250123D6028CCAC8464736F6C634300081C STOP CALLER ",
							"sourceMap": "245:134:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 245,
									"end": 379,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206a050e84301ac50ede8c81009d9079dd61703ec2afda843250123d6028ccac8464736f6c634300081c0033",
									".code": [
										{
											"begin": 245,
											"end": 379,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 245,
											"end": 379,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 245,
											"end": 379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 379,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Used in SqrtPriceMath.sol\",\"kind\":\"dev\",\"methods\":{},\"title\":\"FixedPoint96\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":\"FixedPoint96\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":354:5517  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":354:5517  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a5563d926a45e8c32b24a5df34859a44a973155a08fc2e490f072813fe3da0b164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a5563d926a45e8c32b24a5df34859a44a973155a08fc2e490f072813fe3da0b164736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 JUMP RETURNDATASIZE SWAP3 PUSH11 0x45E8C32B24A5DF34859A44 0xA9 PUSH20 0x155A08FC2E490F072813FE3DA0B164736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "354:5163:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;354:5163:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a5563d926a45e8c32b24a5df34859a44a973155a08fc2e490f072813fe3da0b164736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 JUMP RETURNDATASIZE SWAP3 PUSH11 0x45E8C32B24A5DF34859A44 0xA9 PUSH20 0x155A08FC2E490F072813FE3DA0B164736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "354:5163:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 354,
									"end": 5517,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5563d926a45e8c32b24a5df34859a44a973155a08fc2e490f072813fe3da0b164736f6c634300081c0033",
									".code": [
										{
											"begin": 354,
											"end": 5517,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 354,
											"end": 5517,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"Contracts/OracleManager.sol": {
				"INonfungiblePositionManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"positions(uint256)": "99fbab88"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/OracleManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"Contracts/OracleManager.sol\":{\"keccak256\":\"0x48e00f69322cf60115f1edb855b6e73b368d66e8ccf39586ec71da6b7bcc1af0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15a1f2657985f342035eeefa95d6aabe4e65a94a0e96edfbbfe1b3757807fa03\",\"dweb:/ipfs/QmYTyotgvyB2cfPvixL9Y2LPQKfFy8ap3o2h4KExfs7Y4x\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV3Pool": {
					"abi": [
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"slot0()": "3850c7bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/OracleManager.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"Contracts/OracleManager.sol\":{\"keccak256\":\"0x48e00f69322cf60115f1edb855b6e73b368d66e8ccf39586ec71da6b7bcc1af0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15a1f2657985f342035eeefa95d6aabe4e65a94a0e96edfbbfe1b3757807fa03\",\"dweb:/ipfs/QmYTyotgvyB2cfPvixL9Y2LPQKfFy8ap3o2h4KExfs7Y4x\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IVaultToken": {
					"abi": [
						{
							"inputs": [],
							"name": "positionManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "v3Pool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vaultTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"positionManager()": "791b98bc",
							"totalSupply()": "18160ddd",
							"v3Pool()": "3a924d5b",
							"vaultTokenId()": "f657a7fe"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"positionManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"v3Pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/OracleManager.sol\":\"IVaultToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"Contracts/OracleManager.sol\":{\"keccak256\":\"0x48e00f69322cf60115f1edb855b6e73b368d66e8ccf39586ec71da6b7bcc1af0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15a1f2657985f342035eeefa95d6aabe4e65a94a0e96edfbbfe1b3757807fa03\",\"dweb:/ipfs/QmYTyotgvyB2cfPvixL9Y2LPQKfFy8ap3o2h4KExfs7Y4x\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OracleManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "primaryAggregator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "fallbackAggregator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "useFallbackIfError",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "decimalsOverride",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isVaultToken",
									"type": "bool"
								}
							],
							"name": "OracleConfigUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "vaultToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token0Aggregator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "token1Aggregator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "token0Decimals",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "token1Decimals",
									"type": "uint8"
								}
							],
							"name": "VaultUnderlyingFeedsUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "oracleConfigs",
							"outputs": [
								{
									"internalType": "address",
									"name": "primaryAggregator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "fallbackAggregator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useFallbackIfError",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "decimalsOverride",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "isVaultToken",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "primaryAggregator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "fallbackAggregator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "useFallbackIfErr",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "decimalsOvr",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "isVaultToken",
									"type": "bool"
								}
							],
							"name": "setOracleConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "vaultToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0Agg",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1Agg",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "token0Dec",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "token1Dec",
									"type": "uint8"
								}
							],
							"name": "setVaultUnderlyingFeeds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vaultFeeds",
							"outputs": [
								{
									"internalType": "address",
									"name": "token0Aggregator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1Aggregator",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "token0Decimals",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "token1Decimals",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/OracleManager.sol\":5596:16074  contract OracleManager is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/OracleManager.sol\":6584:6744  constructor(address initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_10\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"Contracts/OracleManager.sol\":6636:6662  initialOwner != address(0) */\n  dup2\n  and\n    /* \"Contracts/OracleManager.sol\":6628:6695  require(initialOwner != address(0), \"OracleManager: invalid owner\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"Contracts/OracleManager.sol\":6628:6695  require(initialOwner != address(0), \"OracleManager: invalid owner\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x1c\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:619   */\n  0x4f7261636c654d616e616765723a20696e76616c6964206f776e657200000000\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:620   */\n  mstore\n    /* \"#utility.yul\":637:655   */\n  0x64\n  add\n    /* \"Contracts/OracleManager.sol\":6628:6695  require(initialOwner != address(0), \"OracleManager: invalid owner\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"Contracts/OracleManager.sol\":6705:6737  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"Contracts/OracleManager.sol\":6724:6736  initialOwner */\n  dup2\n    /* \"Contracts/OracleManager.sol\":6705:6723  _transferOwnership */\n  tag_10\n    /* \"Contracts/OracleManager.sol\":6705:6737  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n    /* \"Contracts/OracleManager.sol\":6584:6744  constructor(address initialOwner) {... */\n  pop\n    /* \"Contracts/OracleManager.sol\":5596:16074  contract OracleManager is Ownable {... */\n  jump(tag_19)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2525:2531  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_21:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_22:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:661   */\ntag_19:\n    /* \"Contracts/OracleManager.sol\":5596:16074  contract OracleManager is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/OracleManager.sol\":5596:16074  contract OracleManager is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x9b05fc75\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2ac1ec5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_11:\n      dup1\n      0x067a4b06\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x41976e09\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7f4a3102\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Contracts/OracleManager.sol\":6020:6071  mapping(address => OracleData) public oracleConfigs */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap2\n      dup2\n      and\n      swap1\n      0xff\n      shl(0xa0, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0xa8, 0x01)\n      dup2\n      div\n      dup3\n      and\n      swap2\n      shl(0xb0, 0x01)\n      swap1\n      swap2\n      div\n      and\n      dup6\n      jump\n    tag_12:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":663:695   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":645:696   */\n      dup2\n      mstore\n        /* \"#utility.yul\":732:764   */\n      swap6\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":712:730   */\n      dup7\n      add\n        /* \"#utility.yul\":705:765   */\n      mstore\n        /* \"#utility.yul\":808:822   */\n      swap2\n      iszero\n        /* \"#utility.yul\":801:823   */\n      iszero\n        /* \"#utility.yul\":781:799   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":774:824   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":872:876   */\n      0xff\n        /* \"#utility.yul\":860:877   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":855:857   */\n      0x60\n        /* \"#utility.yul\":840:858   */\n      dup4\n      add\n        /* \"#utility.yul\":833:878   */\n      mstore\n        /* \"#utility.yul\":922:936   */\n      iszero\n        /* \"#utility.yul\":915:937   */\n      iszero\n        /* \"#utility.yul\":909:912   */\n      0x80\n        /* \"#utility.yul\":894:913   */\n      dup3\n      add\n        /* \"#utility.yul\":887:938   */\n      mstore\n        /* \"#utility.yul\":632:635   */\n      0xa0\n        /* \"#utility.yul\":617:636   */\n      add\n        /* \"Contracts/OracleManager.sol\":6020:6071  mapping(address => OracleData) public oracleConfigs */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Contracts/OracleManager.sol\":8412:8999  function getPrice(address token) external view returns (uint256 price, uint8 decimals) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_19:\n      tag_20\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1119:1144   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1192:1196   */\n      0xff\n        /* \"#utility.yul\":1180:1197   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1175:1177   */\n      0x20\n        /* \"#utility.yul\":1160:1178   */\n      dup4\n      add\n        /* \"#utility.yul\":1153:1198   */\n      mstore\n        /* \"#utility.yul\":1092:1110   */\n      add\n        /* \"Contracts/OracleManager.sol\":8412:8999  function getPrice(address token) external view returns (uint256 price, uint8 decimals) {... */\n      tag_16\n        /* \"#utility.yul\":949:1204   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"Contracts/OracleManager.sol\":6077:6135  mapping(address => VaultUnderlyingFeeds) public vaultFeeds */\n    tag_6:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_26:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap2\n      dup2\n      and\n      swap1\n      0xff\n      shl(0xa0, 0x01)\n      dup3\n      div\n      dup2\n      and\n      swap2\n      shl(0xa8, 0x01)\n      dup2\n      div\n      dup3\n      and\n      swap2\n      shl(0xb0, 0x01)\n      swap1\n      swap2\n      div\n      and\n      dup6\n      jump\n    tag_25:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1472:1504   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":1454:1505   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1541:1573   */\n      swap6\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":1536:1538   */\n      0x20\n        /* \"#utility.yul\":1521:1539   */\n      dup7\n      add\n        /* \"#utility.yul\":1514:1574   */\n      mstore\n        /* \"#utility.yul\":1622:1626   */\n      0xff\n        /* \"#utility.yul\":1610:1627   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":1590:1608   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":1583:1628   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":1664:1681   */\n      and\n        /* \"#utility.yul\":1659:1661   */\n      0x60\n        /* \"#utility.yul\":1644:1662   */\n      dup4\n      add\n        /* \"#utility.yul\":1637:1682   */\n      mstore\n        /* \"#utility.yul\":1726:1740   */\n      iszero\n        /* \"#utility.yul\":1719:1741   */\n      iszero\n        /* \"#utility.yul\":1713:1716   */\n      0x80\n        /* \"#utility.yul\":1698:1717   */\n      dup3\n      add\n        /* \"#utility.yul\":1691:1742   */\n      mstore\n        /* \"#utility.yul\":1441:1444   */\n      0xa0\n        /* \"#utility.yul\":1426:1445   */\n      add\n        /* \"Contracts/OracleManager.sol\":6077:6135  mapping(address => VaultUnderlyingFeeds) public vaultFeeds */\n      tag_16\n        /* \"#utility.yul\":1209:1748   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_7:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1899:1950   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1887:1889   */\n      0x20\n        /* \"#utility.yul\":1872:1890   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_16\n        /* \"#utility.yul\":1753:1956   */\n      jump\n        /* \"Contracts/OracleManager.sol\":7706:8406  function setVaultUnderlyingFeeds(... */\n    tag_8:\n      tag_23\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"Contracts/OracleManager.sol\":6750:7700  function setOracleConfig(... */\n    tag_9:\n      tag_23\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_10:\n      tag_23\n      tag_43\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"Contracts/OracleManager.sol\":8412:8999  function getPrice(address token) external view returns (uint256 price, uint8 decimals) {... */\n    tag_20:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":8533:8553  oracleConfigs[token] */\n      dup1\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":8468:8481  uint256 price */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8533:8553  oracleConfigs[token] */\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":8533:8546  oracleConfigs */\n      0x01\n        /* \"Contracts/OracleManager.sol\":8533:8553  oracleConfigs[token] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"Contracts/OracleManager.sol\":8509:8553  OracleData memory cfg = oracleConfigs[token] */\n      dup2\n      mload\n      0xa0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      swap5\n      add\n      sload\n      swap6\n      dup7\n      and\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0xff\n      shl(0xa0, 0x01)\n      dup7\n      div\n      dup2\n      and\n      iszero\n      iszero\n      swap2\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      shl(0xa8, 0x01)\n      dup6\n      div\n      dup2\n      and\n      0x60\n      dup5\n      add\n      mstore\n      shl(0xb0, 0x01)\n      swap1\n      swap5\n      div\n      swap1\n      swap4\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      mstore\n        /* \"Contracts/OracleManager.sol\":8468:8481  uint256 price */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"Contracts/OracleManager.sol\":8509:8553  OracleData memory cfg = oracleConfigs[token] */\n      swap1\n        /* \"Contracts/OracleManager.sol\":8571:8606  cfg.primaryAggregator != address(0) */\n      iszero\n      iszero\n      dup1\n        /* \"Contracts/OracleManager.sol\":8571:8626  cfg.primaryAggregator != address(0) || cfg.isVaultToken */\n      tag_46\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":8610:8613  cfg */\n      dup1\n        /* \"Contracts/OracleManager.sol\":8610:8626  cfg.isVaultToken */\n      0x80\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":8571:8626  cfg.primaryAggregator != address(0) || cfg.isVaultToken */\n    tag_46:\n        /* \"Contracts/OracleManager.sol\":8563:8671  require(cfg.primaryAggregator != address(0) || cfg.isVaultToken, \"OracleManager: no aggregator/vault logic\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4159:4161   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":8563:8671  require(cfg.primaryAggregator != address(0) || cfg.isVaultToken, \"OracleManager: no aggregator/vault logic\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4141:4162   */\n      mstore\n        /* \"#utility.yul\":4198:4200   */\n      0x28\n        /* \"#utility.yul\":4178:4196   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4171:4201   */\n      mstore\n        /* \"#utility.yul\":4237:4271   */\n      0x4f7261636c654d616e616765723a206e6f2061676772656761746f722f766175\n        /* \"#utility.yul\":4217:4235   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4210:4272   */\n      mstore\n      shl(0xc0, 0x6c74206c6f676963)\n        /* \"#utility.yul\":4288:4306   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4281:4319   */\n      mstore\n        /* \"#utility.yul\":4336:4355   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":8563:8671  require(cfg.primaryAggregator != address(0) || cfg.isVaultToken, \"OracleManager: no aggregator/vault logic\") */\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_47:\n        /* \"Contracts/OracleManager.sol\":8687:8690  cfg */\n      dup1\n        /* \"Contracts/OracleManager.sol\":8687:8703  cfg.isVaultToken */\n      0x80\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":8682:8993  if (!cfg.isVaultToken) {... */\n      tag_50\n      jumpi\n        /* \"Contracts/OracleManager.sol\":8739:8763  _getPriceFromConfig(cfg) */\n      tag_51\n        /* \"Contracts/OracleManager.sol\":8759:8762  cfg */\n      dup2\n        /* \"Contracts/OracleManager.sol\":8739:8758  _getPriceFromConfig */\n      tag_52\n        /* \"Contracts/OracleManager.sol\":8739:8763  _getPriceFromConfig(cfg) */\n      jump\t// in\n    tag_51:\n        /* \"Contracts/OracleManager.sol\":8719:8763  (price, decimals) = _getPriceFromConfig(cfg) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":8682:8993  if (!cfg.isVaultToken) {... */\n      jump(tag_53)\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":8827:8844  vaultFeeds[token] */\n      dup1\n      dup6\n      and\n        /* \"Contracts/OracleManager.sol\":8794:8824  VaultUnderlyingFeeds memory vf */\n      0x00\n        /* \"Contracts/OracleManager.sol\":8827:8844  vaultFeeds[token] */\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":8827:8837  vaultFeeds */\n      0x02\n        /* \"Contracts/OracleManager.sol\":8827:8844  vaultFeeds[token] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Contracts/OracleManager.sol\":8794:8844  VaultUnderlyingFeeds memory vf = vaultFeeds[token] */\n      dup3\n      mload\n      0xa0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup6\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap4\n      dup5\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0xff\n      shl(0xa0, 0x01)\n      dup5\n      div\n      dup2\n      and\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      shl(0xa8, 0x01)\n      dup4\n      div\n      dup3\n      and\n      0x60\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x01)\n      swap1\n      swap3\n      div\n      and\n      iszero\n      iszero\n      0x80\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"Contracts/OracleManager.sol\":8858:8914  require(vf.exists, \"OracleManager: vault feeds not set\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4568:4570   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":8858:8914  require(vf.exists, \"OracleManager: vault feeds not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4550:4571   */\n      mstore\n        /* \"#utility.yul\":4607:4609   */\n      0x22\n        /* \"#utility.yul\":4587:4605   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4580:4610   */\n      mstore\n        /* \"#utility.yul\":4646:4680   */\n      0x4f7261636c654d616e616765723a207661756c74206665656473206e6f742073\n        /* \"#utility.yul\":4626:4644   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4619:4681   */\n      mstore\n      shl(0xf2, 0x195d)\n        /* \"#utility.yul\":4697:4715   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4690:4722   */\n      mstore\n        /* \"#utility.yul\":4739:4758   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":8858:8914  require(vf.exists, \"OracleManager: vault feeds not set\") */\n      tag_48\n        /* \"#utility.yul\":4366:4764   */\n      jump\n        /* \"Contracts/OracleManager.sol\":8858:8914  require(vf.exists, \"OracleManager: vault feeds not set\") */\n    tag_54:\n        /* \"Contracts/OracleManager.sol\":8948:8982  _computeVaultTokenPrice(token, vf) */\n      tag_57\n        /* \"Contracts/OracleManager.sol\":8972:8977  token */\n      dup6\n        /* \"Contracts/OracleManager.sol\":8979:8981  vf */\n      dup3\n        /* \"Contracts/OracleManager.sol\":8948:8971  _computeVaultTokenPrice */\n      tag_58\n        /* \"Contracts/OracleManager.sol\":8948:8982  _computeVaultTokenPrice(token, vf) */\n      jump\t// in\n    tag_57:\n        /* \"Contracts/OracleManager.sol\":8928:8982  (price, decimals) = _computeVaultTokenPrice(token, vf) */\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":8682:8993  if (!cfg.isVaultToken) {... */\n    tag_53:\n        /* \"Contracts/OracleManager.sol\":8499:8999  {... */\n      pop\n        /* \"Contracts/OracleManager.sol\":8412:8999  function getPrice(address token) external view returns (uint256 price, uint8 decimals) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_60:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_63\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_63:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":7706:8406  function setVaultUnderlyingFeeds(... */\n    tag_37:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_67\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":7914:7938  vaultToken != address(0) */\n      dup6\n      and\n        /* \"Contracts/OracleManager.sol\":7906:7976  require(vaultToken != address(0), \"OracleManager: invalid vaultToken\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4971:4973   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":7906:7976  require(vaultToken != address(0), \"OracleManager: invalid vaultToken\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4953:4974   */\n      mstore\n        /* \"#utility.yul\":5010:5012   */\n      0x21\n        /* \"#utility.yul\":4990:5008   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4983:5013   */\n      mstore\n        /* \"#utility.yul\":5049:5083   */\n      0x4f7261636c654d616e616765723a20696e76616c6964207661756c74546f6b65\n        /* \"#utility.yul\":5029:5047   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5022:5084   */\n      mstore\n      shl(0xf9, 0x37)\n        /* \"#utility.yul\":5100:5118   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5093:5124   */\n      mstore\n        /* \"#utility.yul\":5141:5160   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":7906:7976  require(vaultToken != address(0), \"OracleManager: invalid vaultToken\") */\n      tag_48\n        /* \"#utility.yul\":4769:5166   */\n      jump\n        /* \"Contracts/OracleManager.sol\":7906:7976  require(vaultToken != address(0), \"OracleManager: invalid vaultToken\") */\n    tag_69:\n        /* \"Contracts/OracleManager.sol\":8012:8230  VaultUnderlyingFeeds({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup8\n      and\n      dup3\n      mstore\n      dup6\n      dup2\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n      0xff\n      dup1\n      dup9\n      and\n      dup6\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n      dup8\n      dup3\n      and\n      0x60\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":8215:8219  true */\n      0x01\n        /* \"Contracts/OracleManager.sol\":8012:8230  VaultUnderlyingFeeds({... */\n      0x80\n      dup9\n      add\n      dup2\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":7987:8009  vaultFeeds[vaultToken] */\n      dup15\n      dup9\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":7987:7997  vaultFeeds */\n      0x02\n        /* \"Contracts/OracleManager.sol\":7987:8009  vaultFeeds[vaultToken] */\n      swap1\n      swap8\n      mstore\n      swap6\n      dup11\n      swap1\n      keccak256\n        /* \"Contracts/OracleManager.sol\":7987:8230  vaultFeeds[vaultToken] = VaultUnderlyingFeeds({... */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup10\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      dup10\n      sstore\n      swap6\n      mload\n      swap8\n      add\n      dup1\n      sload\n      swap3\n      mload\n      swap2\n      mload\n      swap6\n      mload\n      iszero\n      iszero\n      shl(0xb0, 0x01)\n      mul\n      not(shl(0xb0, 0xff))\n      swap7\n      dup6\n      and\n      shl(0xa8, 0x01)\n      mul\n      swap7\n      swap1\n      swap7\n      and\n      not(shl(0xa8, 0xffff))\n      swap3\n      swap1\n      swap5\n      and\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap8\n      swap1\n      swap7\n      and\n      swap7\n      swap1\n      swap7\n      or\n      or\n      swap5\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      or\n      swap1\n      sstore\n        /* \"Contracts/OracleManager.sol\":8246:8399  VaultUnderlyingFeedsUpdated(... */\n      swap1\n      mload\n      0x2fb5936f285b062770ba9aa206ca7282ebb8f84ad2eda1c664b3059e9c62c1ba\n      swap1\n      tag_72\n      swap1\n        /* \"Contracts/OracleManager.sol\":8065:8074  token0Agg */\n      dup8\n      swap1\n        /* \"Contracts/OracleManager.sol\":8106:8115  token1Agg */\n      dup8\n      swap1\n        /* \"Contracts/OracleManager.sol\":8145:8154  token0Dec */\n      dup8\n      swap1\n        /* \"Contracts/OracleManager.sol\":8184:8193  token1Dec */\n      dup8\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5412:5444   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":5394:5445   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5481:5513   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":5476:5478   */\n      0x20\n        /* \"#utility.yul\":5461:5479   */\n      dup4\n      add\n        /* \"#utility.yul\":5454:5514   */\n      mstore\n        /* \"#utility.yul\":5562:5566   */\n      0xff\n        /* \"#utility.yul\":5550:5567   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5545:5547   */\n      0x40\n        /* \"#utility.yul\":5530:5548   */\n      dup4\n      add\n        /* \"#utility.yul\":5523:5568   */\n      mstore\n        /* \"#utility.yul\":5604:5621   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5599:5601   */\n      0x60\n        /* \"#utility.yul\":5584:5602   */\n      dup3\n      add\n        /* \"#utility.yul\":5577:5622   */\n      mstore\n        /* \"#utility.yul\":5381:5384   */\n      0x80\n        /* \"#utility.yul\":5366:5385   */\n      add\n      swap1\n        /* \"#utility.yul\":5171:5628   */\n      jump\n        /* \"Contracts/OracleManager.sol\":8246:8399  VaultUnderlyingFeedsUpdated(... */\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contracts/OracleManager.sol\":7706:8406  function setVaultUnderlyingFeeds(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":6750:7700  function setOracleConfig(... */\n    tag_41:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_75\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":6997:7016  token != address(0) */\n      dup7\n      and\n        /* \"Contracts/OracleManager.sol\":6989:7049  require(token != address(0), \"OracleManager: invalid token\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5835:5837   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":6989:7049  require(token != address(0), \"OracleManager: invalid token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5817:5838   */\n      mstore\n        /* \"#utility.yul\":5874:5876   */\n      0x1c\n        /* \"#utility.yul\":5854:5872   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5847:5877   */\n      mstore\n        /* \"#utility.yul\":5913:5943   */\n      0x4f7261636c654d616e616765723a20696e76616c696420746f6b656e00000000\n        /* \"#utility.yul\":5893:5911   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5886:5944   */\n      mstore\n        /* \"#utility.yul\":5961:5979   */\n      0x64\n      add\n        /* \"Contracts/OracleManager.sol\":6989:7049  require(token != address(0), \"OracleManager: invalid token\") */\n      tag_48\n        /* \"#utility.yul\":5633:5985   */\n      jump\n        /* \"Contracts/OracleManager.sol\":6989:7049  require(token != address(0), \"OracleManager: invalid token\") */\n    tag_77:\n        /* \"Contracts/OracleManager.sol\":7064:7076  isVaultToken */\n      dup1\n        /* \"Contracts/OracleManager.sol\":7059:7195  if (!isVaultToken) {... */\n      tag_81\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":7100:7131  primaryAggregator != address(0) */\n      dup6\n      and\n        /* \"Contracts/OracleManager.sol\":7092:7184  require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6192:6194   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":7092:7184  require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6174:6195   */\n      mstore\n        /* \"#utility.yul\":6231:6233   */\n      0x30\n        /* \"#utility.yul\":6211:6229   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6204:6234   */\n      mstore\n        /* \"#utility.yul\":6270:6304   */\n      0x4f7261636c654d616e616765723a2061676772656761746f7220726571756972\n        /* \"#utility.yul\":6250:6268   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6243:6305   */\n      mstore\n      shl(0x82, 0x195908199bdc881b9bdb8b5d985d5b1d)\n        /* \"#utility.yul\":6321:6339   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6314:6360   */\n      mstore\n        /* \"#utility.yul\":6377:6396   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":7092:7184  require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\") */\n      tag_48\n        /* \"#utility.yul\":5990:6402   */\n      jump\n        /* \"Contracts/OracleManager.sol\":7092:7184  require(primaryAggregator != address(0), \"OracleManager: aggregator required for non-vault\") */\n    tag_81:\n        /* \"Contracts/OracleManager.sol\":7228:7485  OracleData({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup9\n      and\n      dup3\n      mstore\n      dup7\n      dup2\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n      dup8\n      iszero\n      iszero\n      dup5\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n      0xff\n      dup1\n      dup10\n      and\n      0x60\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n      dup9\n      iszero\n      iszero\n      0x80\n      dup9\n      add\n      swap1\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":7205:7225  oracleConfigs[token] */\n      dup15\n      dup8\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Contracts/OracleManager.sol\":7205:7218  oracleConfigs */\n      0x01\n        /* \"Contracts/OracleManager.sol\":7205:7225  oracleConfigs[token] */\n      swap7\n      dup8\n      swap1\n      mstore\n      dup11\n      swap1\n      keccak256\n        /* \"Contracts/OracleManager.sol\":7205:7485  oracleConfigs[token] = OracleData({... */\n      swap9\n      mload\n      dup10\n      sload\n      swap1\n      dup10\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      or\n      dup10\n      sstore\n      swap6\n      mload\n      swap8\n      swap1\n      swap5\n      add\n      dup1\n      sload\n      swap4\n      mload\n      swap2\n      mload\n      swap5\n      mload\n      iszero\n      iszero\n      shl(0xb0, 0x01)\n      mul\n      not(shl(0xb0, 0xff))\n      swap6\n      swap1\n      swap4\n      and\n      shl(0xa8, 0x01)\n      mul\n      swap5\n      swap1\n      swap5\n      and\n      not(shl(0xa8, 0xffff))\n      swap2\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap8\n      swap1\n      swap7\n      and\n      swap7\n      swap1\n      swap7\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap5\n      swap1\n      swap5\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      sstore\n        /* \"Contracts/OracleManager.sol\":7501:7693  OracleConfigUpdated(... */\n      swap1\n      mload\n      0x5be58a9eef853f8ae7393174434d0be93daad7445510f6ce6e914b2f297885b8\n      swap1\n      tag_84\n      swap1\n        /* \"Contracts/OracleManager.sol\":7272:7289  primaryAggregator */\n      dup9\n      swap1\n        /* \"Contracts/OracleManager.sol\":7323:7341  fallbackAggregator */\n      dup9\n      swap1\n        /* \"Contracts/OracleManager.sol\":7375:7391  useFallbackIfErr */\n      dup9\n      swap1\n        /* \"Contracts/OracleManager.sol\":7423:7434  decimalsOvr */\n      dup9\n      swap1\n        /* \"Contracts/OracleManager.sol\":7462:7474  isVaultToken */\n      dup9\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":663:695   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":645:696   */\n      dup2\n      mstore\n        /* \"#utility.yul\":732:764   */\n      swap4\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":727:729   */\n      0x20\n        /* \"#utility.yul\":712:730   */\n      dup5\n      add\n        /* \"#utility.yul\":705:765   */\n      mstore\n        /* \"#utility.yul\":808:822   */\n      swap1\n      iszero\n        /* \"#utility.yul\":801:823   */\n      iszero\n        /* \"#utility.yul\":796:798   */\n      0x40\n        /* \"#utility.yul\":781:799   */\n      dup4\n      add\n        /* \"#utility.yul\":774:824   */\n      mstore\n        /* \"#utility.yul\":872:876   */\n      0xff\n        /* \"#utility.yul\":860:877   */\n      and\n        /* \"#utility.yul\":855:857   */\n      0x60\n        /* \"#utility.yul\":840:858   */\n      dup3\n      add\n        /* \"#utility.yul\":833:878   */\n      mstore\n        /* \"#utility.yul\":922:936   */\n      swap1\n      iszero\n        /* \"#utility.yul\":915:937   */\n      iszero\n        /* \"#utility.yul\":909:912   */\n      0x80\n        /* \"#utility.yul\":894:913   */\n      dup3\n      add\n        /* \"#utility.yul\":887:938   */\n      mstore\n        /* \"#utility.yul\":632:635   */\n      0xa0\n        /* \"#utility.yul\":617:636   */\n      add\n      swap1\n        /* \"#utility.yul\":402:944   */\n      jump\n        /* \"Contracts/OracleManager.sol\":7501:7693  OracleConfigUpdated(... */\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Contracts/OracleManager.sol\":6750:7700  function setOracleConfig(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_86\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_61\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      dup2\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6609:6611   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6591:6612   */\n      mstore\n        /* \"#utility.yul\":6648:6650   */\n      0x26\n        /* \"#utility.yul\":6628:6646   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6621:6651   */\n      mstore\n        /* \"#utility.yul\":6687:6721   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6667:6685   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6660:6722   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6738:6756   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6731:6767   */\n      mstore\n        /* \"#utility.yul\":6784:6803   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_48\n        /* \"#utility.yul\":6407:6809   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_91\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_91:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":9176:9899  function _getPriceFromConfig(OracleData memory cfg)... */\n    tag_52:\n        /* \"Contracts/OracleManager.sol\":9275:9288  uint256 price */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9290:9304  uint8 decimals */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9321:9335  bool okPrimary */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9337:9346  uint256 p */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9348:9355  uint8 d */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9359:9425  _tryGetChainlinkPrice(cfg.primaryAggregator, cfg.decimalsOverride) */\n      tag_93\n        /* \"Contracts/OracleManager.sol\":9381:9384  cfg */\n      dup7\n        /* \"Contracts/OracleManager.sol\":9381:9402  cfg.primaryAggregator */\n      0x00\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":9404:9407  cfg */\n      dup8\n        /* \"Contracts/OracleManager.sol\":9404:9424  cfg.decimalsOverride */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":9359:9380  _tryGetChainlinkPrice */\n      tag_94\n        /* \"Contracts/OracleManager.sol\":9359:9425  _tryGetChainlinkPrice(cfg.primaryAggregator, cfg.decimalsOverride) */\n      jump\t// in\n    tag_93:\n        /* \"Contracts/OracleManager.sol\":9320:9425  (bool okPrimary, uint256 p, uint8 d) = _tryGetChainlinkPrice(cfg.primaryAggregator, cfg.decimalsOverride) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":9440:9449  okPrimary */\n      dup3\n        /* \"Contracts/OracleManager.sol\":9439:9449  !okPrimary */\n      iszero\n        /* \"Contracts/OracleManager.sol\":9439:9475  !okPrimary && cfg.useFallbackIfError */\n      dup1\n      iszero\n      tag_95\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":9453:9456  cfg */\n      dup6\n        /* \"Contracts/OracleManager.sol\":9453:9475  cfg.useFallbackIfError */\n      0x40\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":9439:9475  !okPrimary && cfg.useFallbackIfError */\n    tag_95:\n        /* \"Contracts/OracleManager.sol\":9439:9515  !okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0) */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":9479:9501  cfg.fallbackAggregator */\n      0x20\n      dup7\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":9479:9515  cfg.fallbackAggregator != address(0) */\n      and\n      iszero\n      iszero\n        /* \"Contracts/OracleManager.sol\":9439:9515  !okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0) */\n    tag_96:\n        /* \"Contracts/OracleManager.sol\":9435:9800  if (!okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0)) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"Contracts/OracleManager.sol\":9532:9547  bool okFallback */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9549:9566  uint256 pFallback */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9568:9583  uint8 dFallback */\n      0x00\n        /* \"Contracts/OracleManager.sol\":9603:9670  _tryGetChainlinkPrice(cfg.fallbackAggregator, cfg.decimalsOverride) */\n      tag_98\n        /* \"Contracts/OracleManager.sol\":9625:9628  cfg */\n      dup10\n        /* \"Contracts/OracleManager.sol\":9625:9647  cfg.fallbackAggregator */\n      0x20\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":9649:9652  cfg */\n      dup11\n        /* \"Contracts/OracleManager.sol\":9649:9669  cfg.decimalsOverride */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":9603:9624  _tryGetChainlinkPrice */\n      tag_94\n        /* \"Contracts/OracleManager.sol\":9603:9670  _tryGetChainlinkPrice(cfg.fallbackAggregator, cfg.decimalsOverride) */\n      jump\t// in\n    tag_98:\n        /* \"Contracts/OracleManager.sol\":9531:9670  (bool okFallback, uint256 pFallback, uint8 dFallback) =... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":9692:9702  okFallback */\n      dup3\n        /* \"Contracts/OracleManager.sol\":9684:9746  require(okFallback, \"OracleManager: fallback aggregator fail\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7016:7018   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":9684:9746  require(okFallback, \"OracleManager: fallback aggregator fail\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6998:7019   */\n      mstore\n        /* \"#utility.yul\":7055:7057   */\n      0x27\n        /* \"#utility.yul\":7035:7053   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7028:7058   */\n      mstore\n        /* \"#utility.yul\":7094:7128   */\n      0x4f7261636c654d616e616765723a2066616c6c6261636b206167677265676174\n        /* \"#utility.yul\":7074:7092   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7067:7129   */\n      mstore\n      shl(0xca, 0x1bdc8819985a5b)\n        /* \"#utility.yul\":7145:7163   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7138:7175   */\n      mstore\n        /* \"#utility.yul\":7192:7211   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":9684:9746  require(okFallback, \"OracleManager: fallback aggregator fail\") */\n      tag_48\n        /* \"#utility.yul\":6814:7217   */\n      jump\n        /* \"Contracts/OracleManager.sol\":9684:9746  require(okFallback, \"OracleManager: fallback aggregator fail\") */\n    tag_99:\n        /* \"Contracts/OracleManager.sol\":9768:9777  pFallback */\n      swap1\n      swap9\n        /* \"Contracts/OracleManager.sol\":9779:9788  dFallback */\n      swap1\n      swap8\n      pop\n        /* \"Contracts/OracleManager.sol\":9176:9899  function _getPriceFromConfig(OracleData memory cfg)... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":9435:9800  if (!okPrimary && cfg.useFallbackIfError && cfg.fallbackAggregator != address(0)) {... */\n    tag_97:\n        /* \"Contracts/OracleManager.sol\":9817:9826  okPrimary */\n      dup3\n        /* \"Contracts/OracleManager.sol\":9809:9869  require(okPrimary, \"OracleManager: primary aggregator fail\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7424:7426   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":9809:9869  require(okPrimary, \"OracleManager: primary aggregator fail\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7406:7427   */\n      mstore\n        /* \"#utility.yul\":7463:7465   */\n      0x26\n        /* \"#utility.yul\":7443:7461   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7436:7466   */\n      mstore\n        /* \"#utility.yul\":7502:7536   */\n      0x4f7261636c654d616e616765723a207072696d6172792061676772656761746f\n        /* \"#utility.yul\":7482:7500   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7475:7537   */\n      mstore\n      shl(0xd2, 0x1c8819985a5b)\n        /* \"#utility.yul\":7553:7571   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7546:7582   */\n      mstore\n        /* \"#utility.yul\":7599:7618   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":9809:9869  require(okPrimary, \"OracleManager: primary aggregator fail\") */\n      tag_48\n        /* \"#utility.yul\":7222:7624   */\n      jump\n        /* \"Contracts/OracleManager.sol\":9809:9869  require(okPrimary, \"OracleManager: primary aggregator fail\") */\n    tag_102:\n        /* \"Contracts/OracleManager.sol\":9887:9888  p */\n      swap1\n      swap6\n        /* \"Contracts/OracleManager.sol\":9890:9891  d */\n      swap1\n      swap5\n      pop\n        /* \"Contracts/OracleManager.sol\":9176:9899  function _getPriceFromConfig(OracleData memory cfg)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":10230:11342  function _computeVaultTokenPrice(address vaultToken, VaultUnderlyingFeeds memory vf)... */\n    tag_58:\n        /* \"Contracts/OracleManager.sol\":10362:10375  uint256 price */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10377:10391  uint8 decimals */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10408:10427  uint256 totalShares */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10429:10444  uint256 tokenId */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10446:10460  address posMgr */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10464:10491  _fetchVaultInfo(vaultToken) */\n      tag_106\n        /* \"Contracts/OracleManager.sol\":10480:10490  vaultToken */\n      dup8\n        /* \"Contracts/OracleManager.sol\":10464:10479  _fetchVaultInfo */\n      tag_107\n        /* \"Contracts/OracleManager.sol\":10464:10491  _fetchVaultInfo(vaultToken) */\n      jump\t// in\n    tag_106:\n        /* \"Contracts/OracleManager.sol\":10407:10491  (uint256 totalShares, uint256 tokenId, address posMgr) = _fetchVaultInfo(vaultToken) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":10502:10527  PositionResult memory pos */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10530:10565  _fetchPositionData(posMgr, tokenId) */\n      tag_108\n        /* \"Contracts/OracleManager.sol\":10549:10555  posMgr */\n      dup3\n        /* \"Contracts/OracleManager.sol\":10557:10564  tokenId */\n      dup5\n        /* \"Contracts/OracleManager.sol\":10530:10548  _fetchPositionData */\n      tag_109\n        /* \"Contracts/OracleManager.sol\":10530:10565  _fetchPositionData(posMgr, tokenId) */\n      jump\t// in\n    tag_108:\n        /* \"Contracts/OracleManager.sol\":10502:10565  PositionResult memory pos = _fetchPositionData(posMgr, tokenId) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":10577:10597  uint160 sqrtPriceX96 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10599:10609  int24 tick */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10613:10666  _getPoolSqrtAndTick(IVaultToken(vaultToken).v3Pool()) */\n      tag_110\n        /* \"Contracts/OracleManager.sol\":10645:10655  vaultToken */\n      dup11\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":10633:10663  IVaultToken(vaultToken).v3Pool */\n      and\n      0x3a924d5b\n        /* \"Contracts/OracleManager.sol\":10633:10665  IVaultToken(vaultToken).v3Pool() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"Contracts/OracleManager.sol\":10613:10632  _getPoolSqrtAndTick */\n      tag_115\n        /* \"Contracts/OracleManager.sol\":10613:10666  _getPoolSqrtAndTick(IVaultToken(vaultToken).v3Pool()) */\n      jump\t// in\n    tag_110:\n        /* \"Contracts/OracleManager.sol\":10576:10666  (uint160 sqrtPriceX96, int24 tick) = _getPoolSqrtAndTick(IVaultToken(vaultToken).v3Pool()) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":10677:10695  uint256 amtActive0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10697:10715  uint256 amtActive1 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10719:10860  _computeLiquidityAmounts(... */\n      tag_116\n        /* \"Contracts/OracleManager.sol\":10757:10769  sqrtPriceX96 */\n      dup5\n        /* \"Contracts/OracleManager.sol\":10783:10786  pos */\n      dup7\n        /* \"Contracts/OracleManager.sol\":10783:10796  pos.tickLower */\n      0x40\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":10810:10813  pos */\n      dup8\n        /* \"Contracts/OracleManager.sol\":10810:10823  pos.tickUpper */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":10837:10840  pos */\n      dup9\n        /* \"Contracts/OracleManager.sol\":10837:10850  pos.liquidity */\n      0x80\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":10719:10743  _computeLiquidityAmounts */\n      tag_117\n        /* \"Contracts/OracleManager.sol\":10719:10860  _computeLiquidityAmounts(... */\n      jump\t// in\n    tag_116:\n        /* \"Contracts/OracleManager.sol\":10676:10860  (uint256 amtActive0, uint256 amtActive1) = _computeLiquidityAmounts(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":10871:10883  uint256 amt0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10899:10902  pos */\n      dup6\n        /* \"Contracts/OracleManager.sol\":10899:10908  pos.owed0 */\n      0xa0\n      add\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":10886:10908  amtActive0 + pos.owed0 */\n      and\n        /* \"Contracts/OracleManager.sol\":10886:10896  amtActive0 */\n      dup4\n        /* \"Contracts/OracleManager.sol\":10886:10908  amtActive0 + pos.owed0 */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"Contracts/OracleManager.sol\":10871:10908  uint256 amt0 = amtActive0 + pos.owed0 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":10918:10930  uint256 amt1 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10946:10949  pos */\n      dup7\n        /* \"Contracts/OracleManager.sol\":10946:10955  pos.owed1 */\n      0xc0\n      add\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":10933:10955  amtActive1 + pos.owed1 */\n      and\n        /* \"Contracts/OracleManager.sol\":10933:10943  amtActive1 */\n      dup4\n        /* \"Contracts/OracleManager.sol\":10933:10955  amtActive1 + pos.owed1 */\n      tag_120\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_120:\n        /* \"Contracts/OracleManager.sol\":10918:10955  uint256 amt1 = amtActive1 + pos.owed1 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":10966:10990  AggregatorPair memory ap */\n      0x00\n        /* \"Contracts/OracleManager.sol\":10993:11171  AggregatorPair({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Contracts/OracleManager.sol\":11028:11030  vf */\n      dup16\n        /* \"Contracts/OracleManager.sol\":11028:11047  vf.token0Aggregator */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":10993:11171  AggregatorPair({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/OracleManager.sol\":11067:11069  vf */\n      dup16\n        /* \"Contracts/OracleManager.sol\":11067:11086  vf.token1Aggregator */\n      0x20\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":10993:11171  AggregatorPair({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/OracleManager.sol\":11106:11108  vf */\n      dup16\n        /* \"Contracts/OracleManager.sol\":11106:11123  vf.token0Decimals */\n      0x40\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":10993:11171  AggregatorPair({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Contracts/OracleManager.sol\":11143:11145  vf */\n      dup16\n        /* \"Contracts/OracleManager.sol\":11143:11160  vf.token1Decimals */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":10993:11171  AggregatorPair({... */\n      0xff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Contracts/OracleManager.sol\":10966:11171  AggregatorPair memory ap = AggregatorPair({... */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":11182:11200  uint256 totalValue */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11203:11245  _convertVaultTokensToValue(amt0, amt1, ap) */\n      tag_121\n        /* \"Contracts/OracleManager.sol\":11230:11234  amt0 */\n      dup5\n        /* \"Contracts/OracleManager.sol\":11236:11240  amt1 */\n      dup5\n        /* \"Contracts/OracleManager.sol\":11242:11244  ap */\n      dup5\n        /* \"Contracts/OracleManager.sol\":11203:11229  _convertVaultTokensToValue */\n      tag_122\n        /* \"Contracts/OracleManager.sol\":11203:11245  _convertVaultTokensToValue(amt0, amt1, ap) */\n      jump\t// in\n    tag_121:\n        /* \"Contracts/OracleManager.sol\":11182:11245  uint256 totalValue = _convertVaultTokensToValue(amt0, amt1, ap) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":11278:11294  totalShares == 0 */\n      dup12\n      iszero\n        /* \"Contracts/OracleManager.sol\":11278:11312  totalShares == 0 ? 1 : totalShares */\n      tag_123\n      jumpi\n        /* \"Contracts/OracleManager.sol\":11301:11312  totalShares */\n      dup12\n        /* \"Contracts/OracleManager.sol\":11278:11312  totalShares == 0 ? 1 : totalShares */\n      jump(tag_124)\n    tag_123:\n        /* \"Contracts/OracleManager.sol\":11297:11298  1 */\n      0x01\n        /* \"Contracts/OracleManager.sol\":11278:11312  totalShares == 0 ? 1 : totalShares */\n    tag_124:\n        /* \"Contracts/OracleManager.sol\":11264:11313  totalValue / (totalShares == 0 ? 1 : totalShares) */\n      tag_125\n      swap1\n        /* \"Contracts/OracleManager.sol\":11264:11274  totalValue */\n      dup3\n        /* \"Contracts/OracleManager.sol\":11264:11313  totalValue / (totalShares == 0 ? 1 : totalShares) */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"Contracts/OracleManager.sol\":11256:11313  price = totalValue / (totalShares == 0 ? 1 : totalShares) */\n      swap14\n      pop\n        /* \"Contracts/OracleManager.sol\":11334:11335  8 */\n      0x08\n        /* \"Contracts/OracleManager.sol\":11323:11335  decimals = 8 */\n      swap13\n      pop\n        /* \"Contracts/OracleManager.sol\":10397:11342  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":10230:11342  function _computeVaultTokenPrice(address vaultToken, VaultUnderlyingFeeds memory vf)... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_61:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8703:8705   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8685:8706   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8722:8740   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8715:8745   */\n      mstore\n        /* \"#utility.yul\":8781:8815   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8761:8779   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8754:8816   */\n      mstore\n        /* \"#utility.yul\":8833:8851   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_48\n        /* \"#utility.yul\":8501:8857   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2525:2531  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":14570:15760  function _tryGetChainlinkPrice(address aggregator, uint8 decimalsOvr)... */\n    tag_94:\n        /* \"Contracts/OracleManager.sol\":14687:14699  bool success */\n      0x00\n      dup1\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":14750:14774  aggregator == address(0) */\n      dup6\n      and\n        /* \"Contracts/OracleManager.sol\":14746:14821  if (aggregator == address(0)) {... */\n      tag_136\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":14798:14803  false */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n      dup1\n        /* \"Contracts/OracleManager.sol\":14790:14810  return (false, 0, 0) */\n      jump(tag_135)\n        /* \"Contracts/OracleManager.sol\":14746:14821  if (aggregator == address(0)) {... */\n    tag_136:\n        /* \"Contracts/OracleManager.sol\":14853:14923  abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector) */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe2, 0x3fabe5a3)\n      or\n      swap1\n      mstore\n        /* \"Contracts/OracleManager.sol\":14979:15009  aggregator.staticcall(payload) */\n      swap1\n      mload\n        /* \"Contracts/OracleManager.sol\":14830:14850  bytes memory payload */\n      0x00\n      swap1\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":14979:15000  aggregator.staticcall */\n      dup10\n      and\n      swap1\n        /* \"Contracts/OracleManager.sol\":14979:15009  aggregator.staticcall(payload) */\n      tag_137\n      swap1\n        /* \"Contracts/OracleManager.sol\":14853:14923  abi.encodeWithSelector(AggregatorV3Interface.latestRoundData.selector) */\n      dup6\n      swap1\n        /* \"Contracts/OracleManager.sol\":14979:15009  aggregator.staticcall(payload) */\n      tag_138\n      jump\t// in\n    tag_137:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_141\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_140)\n    tag_141:\n      0x60\n      swap2\n      pop\n    tag_140:\n      pop\n        /* \"Contracts/OracleManager.sol\":14933:15009  (bool callSuccess, bytes memory returnData) = aggregator.staticcall(payload) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":15024:15035  callSuccess */\n      dup2\n        /* \"Contracts/OracleManager.sol\":15023:15035  !callSuccess */\n      iszero\n        /* \"Contracts/OracleManager.sol\":15023:15062  !callSuccess || returnData.length < 160 */\n      dup1\n      tag_142\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":15059:15062  160 */\n      0xa0\n        /* \"Contracts/OracleManager.sol\":15039:15049  returnData */\n      dup2\n        /* \"Contracts/OracleManager.sol\":15039:15056  returnData.length */\n      mload\n        /* \"Contracts/OracleManager.sol\":15039:15062  returnData.length < 160 */\n      lt\n        /* \"Contracts/OracleManager.sol\":15023:15062  !callSuccess || returnData.length < 160 */\n    tag_142:\n        /* \"Contracts/OracleManager.sol\":15019:15109  if (!callSuccess || returnData.length < 160) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"Contracts/OracleManager.sol\":15086:15091  false */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15093:15094  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15096:15097  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15078:15098  return (false, 0, 0) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_135)\n        /* \"Contracts/OracleManager.sol\":15019:15109  if (!callSuccess || returnData.length < 160) {... */\n    tag_143:\n        /* \"Contracts/OracleManager.sol\":15122:15135  int256 answer */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15156:15166  returnData */\n      dup2\n        /* \"Contracts/OracleManager.sol\":15145:15211  abi.decode(returnData, (uint80, int256, uint256, uint256, uint80)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"Contracts/OracleManager.sol\":15118:15211  ( , int256 answer, , , ) = abi.decode(returnData, (uint80, int256, uint256, uint256, uint80)) */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":15235:15236  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15225:15231  answer */\n      dup2\n        /* \"Contracts/OracleManager.sol\":15225:15236  answer <= 0 */\n      sgt\n        /* \"Contracts/OracleManager.sol\":15221:15283  if (answer <= 0) {... */\n      tag_146\n      jumpi\n        /* \"Contracts/OracleManager.sol\":15260:15265  false */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15267:15268  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15270:15271  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15252:15272  return (false, 0, 0) */\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_135)\n        /* \"Contracts/OracleManager.sol\":15221:15283  if (answer <= 0) {... */\n    tag_146:\n        /* \"Contracts/OracleManager.sol\":15313:15324  decimalsOvr */\n      dup8\n        /* \"Contracts/OracleManager.sol\":15338:15354  aggDecimals == 0 */\n      0xff\n      dup2\n      and\n        /* \"Contracts/OracleManager.sol\":15293:15310  uint8 aggDecimals */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15338:15354  aggDecimals == 0 */\n      sub\n        /* \"Contracts/OracleManager.sol\":15334:15701  if (aggDecimals == 0) {... */\n      tag_147\n      jumpi\n        /* \"Contracts/OracleManager.sol\":15451:15514  abi.encodeWithSelector(AggregatorV3Interface.decimals.selector) */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x313ce567)\n      or\n      swap1\n      mstore\n        /* \"Contracts/OracleManager.sol\":15412:15528  aggregator.staticcall(... */\n      swap1\n      mload\n        /* \"Contracts/OracleManager.sol\":15371:15386  bool decSuccess */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":15412:15433  aggregator.staticcall */\n      dup15\n      and\n      swap2\n        /* \"Contracts/OracleManager.sol\":15412:15528  aggregator.staticcall(... */\n      tag_148\n      swap2\n      tag_138\n      jump\t// in\n    tag_148:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_151\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_150)\n    tag_151:\n      0x60\n      swap2\n      pop\n    tag_150:\n      pop\n        /* \"Contracts/OracleManager.sol\":15370:15528  (bool decSuccess, bytes memory decData) = aggregator.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":15547:15557  decSuccess */\n      dup2\n        /* \"Contracts/OracleManager.sol\":15546:15557  !decSuccess */\n      iszero\n        /* \"Contracts/OracleManager.sol\":15546:15580  !decSuccess || decData.length < 32 */\n      dup1\n      tag_152\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":15578:15580  32 */\n      0x20\n        /* \"Contracts/OracleManager.sol\":15561:15568  decData */\n      dup2\n        /* \"Contracts/OracleManager.sol\":15561:15575  decData.length */\n      mload\n        /* \"Contracts/OracleManager.sol\":15561:15580  decData.length < 32 */\n      lt\n        /* \"Contracts/OracleManager.sol\":15546:15580  !decSuccess || decData.length < 32 */\n    tag_152:\n        /* \"Contracts/OracleManager.sol\":15542:15635  if (!decSuccess || decData.length < 32) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"Contracts/OracleManager.sol\":15608:15613  false */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15615:15616  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15618:15619  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":15600:15620  return (false, 0, 0) */\n      swap10\n      pop\n      swap10\n      pop\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_135)\n        /* \"Contracts/OracleManager.sol\":15542:15635  if (!decSuccess || decData.length < 32) {... */\n    tag_153:\n        /* \"Contracts/OracleManager.sol\":15673:15680  decData */\n      dup1\n        /* \"Contracts/OracleManager.sol\":15662:15690  abi.decode(decData, (uint8)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"Contracts/OracleManager.sol\":15648:15690  aggDecimals = abi.decode(decData, (uint8)) */\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":15356:15701  {... */\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":15334:15701  if (aggDecimals == 0) {... */\n    tag_147:\n        /* \"Contracts/OracleManager.sol\":15718:15722  true */\n      0x01\n      swap8\n      pop\n        /* \"Contracts/OracleManager.sol\":15732:15738  answer */\n      swap1\n      swap6\n      pop\n        /* \"Contracts/OracleManager.sol\":15741:15752  aggDecimals */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":14570:15760  function _tryGetChainlinkPrice(address aggregator, uint8 decimalsOvr)... */\n    tag_135:\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":11348:11881  function _fetchVaultInfo(address vaultToken)... */\n    tag_107:\n        /* \"Contracts/OracleManager.sol\":11440:11459  uint256 totalShares */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11461:11476  uint256 tokenId */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11478:11492  address posMgr */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11508:11521  IVaultToken v */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11536:11546  vaultToken */\n      dup5\n        /* \"Contracts/OracleManager.sol\":11508:11547  IVaultToken v = IVaultToken(vaultToken) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":11571:11572  v */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":11571:11584  v.totalSupply */\n      and\n      0x18160ddd\n        /* \"Contracts/OracleManager.sol\":11571:11586  v.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"Contracts/OracleManager.sol\":11557:11586  totalShares = v.totalSupply() */\n      swap4\n      pop\n        /* \"Contracts/OracleManager.sol\":11618:11619  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11604:11615  totalShares */\n      dup5\n        /* \"Contracts/OracleManager.sol\":11604:11619  totalShares > 0 */\n      gt\n        /* \"Contracts/OracleManager.sol\":11596:11658  require(totalShares > 0, \"OracleManager: vault totalSupply=0\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10858:10860   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":11596:11658  require(totalShares > 0, \"OracleManager: vault totalSupply=0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10840:10861   */\n      mstore\n        /* \"#utility.yul\":10897:10899   */\n      0x22\n        /* \"#utility.yul\":10877:10895   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10870:10900   */\n      mstore\n        /* \"#utility.yul\":10936:10970   */\n      0x4f7261636c654d616e616765723a207661756c7420746f74616c537570706c79\n        /* \"#utility.yul\":10916:10934   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10909:10971   */\n      mstore\n      shl(0xf4, 0x03d3)\n        /* \"#utility.yul\":10987:11005   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10980:11012   */\n      mstore\n        /* \"#utility.yul\":11029:11048   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":11596:11658  require(totalShares > 0, \"OracleManager: vault totalSupply=0\") */\n      tag_48\n        /* \"#utility.yul\":10656:11054   */\n      jump\n        /* \"Contracts/OracleManager.sol\":11596:11658  require(totalShares > 0, \"OracleManager: vault totalSupply=0\") */\n    tag_161:\n        /* \"Contracts/OracleManager.sol\":11678:11679  v */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":11678:11692  v.vaultTokenId */\n      and\n      0xf657a7fe\n        /* \"Contracts/OracleManager.sol\":11678:11694  v.vaultTokenId() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_166:\n        /* \"Contracts/OracleManager.sol\":11668:11694  tokenId = v.vaultTokenId() */\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":11712:11719  tokenId */\n      dup3\n        /* \"Contracts/OracleManager.sol\":11723:11724  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":11712:11724  tokenId != 0 */\n      sub\n        /* \"Contracts/OracleManager.sol\":11704:11759  require(tokenId != 0, \"OracleManager: no NFT in vault\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11261:11263   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":11704:11759  require(tokenId != 0, \"OracleManager: no NFT in vault\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11243:11264   */\n      mstore\n        /* \"#utility.yul\":11300:11302   */\n      0x1e\n        /* \"#utility.yul\":11280:11298   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11273:11303   */\n      mstore\n        /* \"#utility.yul\":11339:11371   */\n      0x4f7261636c654d616e616765723a206e6f204e465420696e207661756c740000\n        /* \"#utility.yul\":11319:11337   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11312:11372   */\n      mstore\n        /* \"#utility.yul\":11389:11407   */\n      0x64\n      add\n        /* \"Contracts/OracleManager.sol\":11704:11759  require(tokenId != 0, \"OracleManager: no NFT in vault\") */\n      tag_48\n        /* \"#utility.yul\":11059:11413   */\n      jump\n        /* \"Contracts/OracleManager.sol\":11704:11759  require(tokenId != 0, \"OracleManager: no NFT in vault\") */\n    tag_167:\n        /* \"Contracts/OracleManager.sol\":11778:11779  v */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":11778:11795  v.positionManager */\n      and\n      0x791b98bc\n        /* \"Contracts/OracleManager.sol\":11778:11797  v.positionManager() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_172\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_172:\n        /* \"Contracts/OracleManager.sol\":11769:11797  posMgr = v.positionManager() */\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":11815:11835  posMgr != address(0) */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":11807:11874  require(posMgr != address(0), \"OracleManager: invalid positionMgr\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11620:11622   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":11807:11874  require(posMgr != address(0), \"OracleManager: invalid positionMgr\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11602:11623   */\n      mstore\n        /* \"#utility.yul\":11659:11661   */\n      0x22\n        /* \"#utility.yul\":11639:11657   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11632:11662   */\n      mstore\n        /* \"#utility.yul\":11698:11732   */\n      0x4f7261636c654d616e616765723a20696e76616c696420706f736974696f6e4d\n        /* \"#utility.yul\":11678:11696   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11671:11733   */\n      mstore\n      shl(0xf1, 0x33b9)\n        /* \"#utility.yul\":11749:11767   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11742:11774   */\n      mstore\n        /* \"#utility.yul\":11791:11810   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":11807:11874  require(posMgr != address(0), \"OracleManager: invalid positionMgr\") */\n      tag_48\n        /* \"#utility.yul\":11418:11816   */\n      jump\n        /* \"Contracts/OracleManager.sol\":11807:11874  require(posMgr != address(0), \"OracleManager: invalid positionMgr\") */\n    tag_173:\n        /* \"Contracts/OracleManager.sol\":11498:11881  {... */\n      pop\n        /* \"Contracts/OracleManager.sol\":11348:11881  function _fetchVaultInfo(address vaultToken)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":11887:12669  function _fetchPositionData(address posMgr, uint256 tokenId)... */\n    tag_109:\n      0x40\n      dup1\n      mload\n      0xe0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xa0\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0xc0\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"Contracts/OracleManager.sol\":12037:12049  bool success */\n      0x00\n        /* \"Contracts/OracleManager.sol\":12051:12068  bytes memory data */\n      0x00\n        /* \"Contracts/OracleManager.sol\":12072:12078  posMgr */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":12072:12089  posMgr.staticcall */\n      and\n        /* \"Contracts/OracleManager.sol\":12126:12172  INonfungiblePositionManager.positions.selector */\n      shl(0xe0, 0x99fbab88)\n        /* \"Contracts/OracleManager.sol\":12174:12181  tokenId */\n      dup6\n        /* \"Contracts/OracleManager.sol\":12103:12182  abi.encodeWithSelector(INonfungiblePositionManager.positions.selector, tokenId) */\n      add(0x24, mload(0x40))\n      tag_179\n      swap2\n        /* \"#utility.yul\":11967:11992   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11955:11957   */\n      0x20\n        /* \"#utility.yul\":11940:11958   */\n      add\n      swap1\n        /* \"#utility.yul\":11821:11998   */\n      jump\n        /* \"Contracts/OracleManager.sol\":12103:12182  abi.encodeWithSelector(INonfungiblePositionManager.positions.selector, tokenId) */\n    tag_179:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      not(sub(shl(0xe0, 0x01), 0x01))\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"Contracts/OracleManager.sol\":12072:12192  posMgr.staticcall(... */\n      swap1\n      mload\n      tag_181\n      swap2\n        /* \"Contracts/OracleManager.sol\":12103:12182  abi.encodeWithSelector(INonfungiblePositionManager.positions.selector, tokenId) */\n      swap1\n        /* \"Contracts/OracleManager.sol\":12072:12192  posMgr.staticcall(... */\n      tag_138\n      jump\t// in\n    tag_181:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_184\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_183)\n    tag_184:\n      0x60\n      swap2\n      pop\n    tag_183:\n      pop\n        /* \"Contracts/OracleManager.sol\":12036:12192  (bool success, bytes memory data) = posMgr.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":12210:12217  success */\n      dup2\n        /* \"Contracts/OracleManager.sol\":12219:12238  _getRevertMsg(data) */\n      tag_185\n        /* \"Contracts/OracleManager.sol\":12233:12237  data */\n      dup3\n        /* \"Contracts/OracleManager.sol\":12219:12232  _getRevertMsg */\n      tag_186\n        /* \"Contracts/OracleManager.sol\":12219:12238  _getRevertMsg(data) */\n      jump\t// in\n    tag_185:\n        /* \"Contracts/OracleManager.sol\":12202:12239  require(success, _getRevertMsg(data)) */\n      swap1\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_187:\n      pop\n        /* \"Contracts/OracleManager.sol\":12532:12536  data */\n      dup1\n        /* \"Contracts/OracleManager.sol\":12508:12662  abi.decode(... */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"Contracts/OracleManager.sol\":12250:12662  (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      swap10\n      swap11\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      swap8\n      swap9\n      swap10\n      pop\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      pop\n      swap1\n      swap2\n      swap3\n      pop\n      swap1\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":12292:12295  pos */\n      dup10\n        /* \"Contracts/OracleManager.sol\":12292:12302  pos.token0 */\n      0x00\n      add\n        /* \"Contracts/OracleManager.sol\":12316:12319  pos */\n      dup11\n        /* \"Contracts/OracleManager.sol\":12316:12326  pos.token1 */\n      0x20\n      add\n        /* \"Contracts/OracleManager.sol\":12354:12357  pos */\n      dup12\n        /* \"Contracts/OracleManager.sol\":12354:12367  pos.tickLower */\n      0x40\n      add\n        /* \"Contracts/OracleManager.sol\":12381:12384  pos */\n      dup13\n        /* \"Contracts/OracleManager.sol\":12381:12394  pos.tickUpper */\n      0x60\n      add\n        /* \"Contracts/OracleManager.sol\":12408:12411  pos */\n      dup14\n        /* \"Contracts/OracleManager.sol\":12408:12421  pos.liquidity */\n      0x80\n      add\n        /* \"Contracts/OracleManager.sol\":12463:12466  pos */\n      dup15\n        /* \"Contracts/OracleManager.sol\":12463:12472  pos.owed0 */\n      0xa0\n      add\n        /* \"Contracts/OracleManager.sol\":12486:12489  pos */\n      dup16\n        /* \"Contracts/OracleManager.sol\":12486:12495  pos.owed1 */\n      0xc0\n      add\n        /* \"Contracts/OracleManager.sol\":12250:12662  (... */\n      dup8\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      dup8\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      dup8\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      sub(shl(0x80, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      dup8\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      dup8\n      0x02\n      signextend\n      0x02\n      signextend\n      dup2\n      mstore\n      pop\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":12026:12669  {... */\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":11887:12669  function _fetchPositionData(address posMgr, uint256 tokenId)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":12675:13161  function _getPoolSqrtAndTick(address poolAddr) internal view returns (uint160 sqrtPriceX96, int24 tick) {... */\n    tag_115:\n        /* \"Contracts/OracleManager.sol\":12745:12765  uint160 sqrtPriceX96 */\n      0x00\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":12797:12819  poolAddr != address(0) */\n      dup4\n      and\n        /* \"Contracts/OracleManager.sol\":12789:12851  require(poolAddr != address(0), \"OracleManager: invalid pool\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14636:14638   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":12789:12851  require(poolAddr != address(0), \"OracleManager: invalid pool\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14618:14639   */\n      mstore\n        /* \"#utility.yul\":14675:14677   */\n      0x1b\n        /* \"#utility.yul\":14655:14673   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14648:14678   */\n      mstore\n        /* \"#utility.yul\":14714:14743   */\n      0x4f7261636c654d616e616765723a20696e76616c696420706f6f6c0000000000\n        /* \"#utility.yul\":14694:14712   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14687:14744   */\n      mstore\n        /* \"#utility.yul\":14761:14779   */\n      0x64\n      add\n        /* \"Contracts/OracleManager.sol\":12789:12851  require(poolAddr != address(0), \"OracleManager: invalid pool\") */\n      tag_48\n        /* \"#utility.yul\":14434:14785   */\n      jump\n        /* \"Contracts/OracleManager.sol\":12789:12851  require(poolAddr != address(0), \"OracleManager: invalid pool\") */\n    tag_193:\n        /* \"Contracts/OracleManager.sol\":12930:12983  abi.encodeWithSelector(IUniswapV3Pool.slot0.selector) */\n      0x40\n      dup1\n      mload\n      0x04\n      dup2\n      mstore\n      0x24\n      dup2\n      add\n      dup3\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x3850c7bd)\n      or\n      swap1\n      mstore\n        /* \"Contracts/OracleManager.sol\":12897:12993  poolAddr.staticcall(... */\n      swap1\n      mload\n        /* \"Contracts/OracleManager.sol\":12862:12874  bool success */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":12897:12916  poolAddr.staticcall */\n      dup8\n      and\n      swap2\n        /* \"Contracts/OracleManager.sol\":12897:12993  poolAddr.staticcall(... */\n      tag_196\n      swap2\n      tag_138\n      jump\t// in\n    tag_196:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      staticcall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_199\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_198)\n    tag_199:\n      0x60\n      swap2\n      pop\n    tag_198:\n      pop\n        /* \"Contracts/OracleManager.sol\":12861:12993  (bool success, bytes memory data) = poolAddr.staticcall(... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":13011:13018  success */\n      dup2\n        /* \"Contracts/OracleManager.sol\":13020:13039  _getRevertMsg(data) */\n      tag_200\n        /* \"Contracts/OracleManager.sol\":13034:13038  data */\n      dup3\n        /* \"Contracts/OracleManager.sol\":13020:13033  _getRevertMsg */\n      tag_186\n        /* \"Contracts/OracleManager.sol\":13020:13039  _getRevertMsg(data) */\n      jump\t// in\n    tag_200:\n        /* \"Contracts/OracleManager.sol\":13003:13040  require(success, _getRevertMsg(data)) */\n      swap1\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_201:\n      pop\n        /* \"Contracts/OracleManager.sol\":13094:13098  data */\n      dup1\n        /* \"Contracts/OracleManager.sol\":13083:13154  abi.decode(data, (uint160, int24, uint16, uint16, uint16, uint8, bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      pop\n        /* \"Contracts/OracleManager.sol\":13050:13154  (sqrtPriceX96, tick, , , , , ) = abi.decode(data, (uint160, int24, uint16, uint16, uint16, uint8, bool)) */\n      swap5\n      swap11\n      swap4\n      swap10\n      pop\n        /* \"Contracts/OracleManager.sol\":12675:13161  function _getPoolSqrtAndTick(address poolAddr) internal view returns (uint160 sqrtPriceX96, int24 tick) {... */\n      swap3\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":13167:13755  function _computeLiquidityAmounts(... */\n    tag_117:\n        /* \"Contracts/OracleManager.sol\":13337:13349  uint256 amt0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13351:13363  uint256 amt1 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13379:13388  liquidity */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":13379:13393  liquidity == 0 */\n      and\n        /* \"Contracts/OracleManager.sol\":13392:13393  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13379:13393  liquidity == 0 */\n      sub\n        /* \"Contracts/OracleManager.sol\":13375:13433  if (liquidity == 0) {... */\n      tag_206\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":13417:13418  0 */\n      0x00\n      swap1\n      pop\n      dup1\n        /* \"Contracts/OracleManager.sol\":13409:13422  return (0, 0) */\n      jump(tag_205)\n        /* \"Contracts/OracleManager.sol\":13375:13433  if (liquidity == 0) {... */\n    tag_206:\n        /* \"Contracts/OracleManager.sol\":13442:13459  uint160 sqrtLower */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13462:13505  TickMathLocal.getSqrtRatioAtTick(tickLower) */\n      tag_207\n        /* \"Contracts/OracleManager.sol\":13495:13504  tickLower */\n      dup7\n        /* \"Contracts/OracleManager.sol\":13462:13494  TickMathLocal.getSqrtRatioAtTick */\n      tag_208\n        /* \"Contracts/OracleManager.sol\":13462:13505  TickMathLocal.getSqrtRatioAtTick(tickLower) */\n      jump\t// in\n    tag_207:\n        /* \"Contracts/OracleManager.sol\":13442:13505  uint160 sqrtLower = TickMathLocal.getSqrtRatioAtTick(tickLower) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":13515:13532  uint160 sqrtUpper */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13535:13578  TickMathLocal.getSqrtRatioAtTick(tickUpper) */\n      tag_209\n        /* \"Contracts/OracleManager.sol\":13568:13577  tickUpper */\n      dup7\n        /* \"Contracts/OracleManager.sol\":13535:13567  TickMathLocal.getSqrtRatioAtTick */\n      tag_208\n        /* \"Contracts/OracleManager.sol\":13535:13578  TickMathLocal.getSqrtRatioAtTick(tickUpper) */\n      jump\t// in\n    tag_209:\n        /* \"Contracts/OracleManager.sol\":13515:13578  uint160 sqrtUpper = TickMathLocal.getSqrtRatioAtTick(tickUpper) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":13604:13748  LiquidityAmounts.getAmountsForLiquidity(... */\n      tag_210\n        /* \"Contracts/OracleManager.sol\":13657:13669  sqrtPriceX96 */\n      dup9\n        /* \"Contracts/OracleManager.sol\":13683:13692  sqrtLower */\n      dup4\n        /* \"Contracts/OracleManager.sol\":13706:13715  sqrtUpper */\n      dup4\n        /* \"Contracts/OracleManager.sol\":13729:13738  liquidity */\n      dup9\n        /* \"Contracts/OracleManager.sol\":13604:13643  LiquidityAmounts.getAmountsForLiquidity */\n      tag_211\n        /* \"Contracts/OracleManager.sol\":13604:13748  LiquidityAmounts.getAmountsForLiquidity(... */\n      jump\t// in\n    tag_210:\n        /* \"Contracts/OracleManager.sol\":13589:13748  (amt0, amt1) = LiquidityAmounts.getAmountsForLiquidity(... */\n      swap1\n      swap5\n      pop\n      swap3\n      pop\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":13167:13755  function _computeLiquidityAmounts(... */\n    tag_205:\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":13761:14096  function _convertVaultTokensToValue(... */\n    tag_122:\n        /* \"Contracts/OracleManager.sol\":13904:13911  uint256 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13923:13935  uint256 val0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":13938:13987  _convertToAggregatorValue(amt0, ap.agg0, ap.dec0) */\n      tag_213\n        /* \"Contracts/OracleManager.sol\":13964:13968  amt0 */\n      dup6\n        /* \"Contracts/OracleManager.sol\":13970:13972  ap */\n      dup5\n        /* \"Contracts/OracleManager.sol\":13970:13977  ap.agg0 */\n      0x00\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":13979:13981  ap */\n      dup6\n        /* \"Contracts/OracleManager.sol\":13979:13986  ap.dec0 */\n      0x40\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":13938:13963  _convertToAggregatorValue */\n      tag_214\n        /* \"Contracts/OracleManager.sol\":13938:13987  _convertToAggregatorValue(amt0, ap.agg0, ap.dec0) */\n      jump\t// in\n    tag_213:\n        /* \"Contracts/OracleManager.sol\":13923:13987  uint256 val0 = _convertToAggregatorValue(amt0, ap.agg0, ap.dec0) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":13997:14009  uint256 val1 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":14012:14061  _convertToAggregatorValue(amt1, ap.agg1, ap.dec1) */\n      tag_215\n        /* \"Contracts/OracleManager.sol\":14038:14042  amt1 */\n      dup6\n        /* \"Contracts/OracleManager.sol\":14044:14046  ap */\n      dup6\n        /* \"Contracts/OracleManager.sol\":14044:14051  ap.agg1 */\n      0x20\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":14053:14055  ap */\n      dup7\n        /* \"Contracts/OracleManager.sol\":14053:14060  ap.dec1 */\n      0x60\n      add\n      mload\n        /* \"Contracts/OracleManager.sol\":14012:14037  _convertToAggregatorValue */\n      tag_214\n        /* \"Contracts/OracleManager.sol\":14012:14061  _convertToAggregatorValue(amt1, ap.agg1, ap.dec1) */\n      jump\t// in\n    tag_215:\n        /* \"Contracts/OracleManager.sol\":13997:14061  uint256 val1 = _convertToAggregatorValue(amt1, ap.agg1, ap.dec1) */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":14078:14089  val0 + val1 */\n      tag_216\n        /* \"Contracts/OracleManager.sol\":13997:14061  uint256 val1 = _convertToAggregatorValue(amt1, ap.agg1, ap.dec1) */\n      dup2\n        /* \"Contracts/OracleManager.sol\":14078:14082  val0 */\n      dup4\n        /* \"Contracts/OracleManager.sol\":14078:14089  val0 + val1 */\n      tag_119\n      jump\t// in\n    tag_216:\n        /* \"Contracts/OracleManager.sol\":14071:14089  return val0 + val1 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Contracts/OracleManager.sol\":13761:14096  function _convertVaultTokensToValue(... */\n    tag_212:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":15766:16072  function _getRevertMsg(bytes memory _returnData) private pure returns (string memory) {... */\n    tag_186:\n        /* \"Contracts/OracleManager.sol\":15837:15850  string memory */\n      0x60\n        /* \"Contracts/OracleManager.sol\":15887:15889  68 */\n      0x44\n        /* \"Contracts/OracleManager.sol\":15866:15877  _returnData */\n      dup3\n        /* \"Contracts/OracleManager.sol\":15866:15884  _returnData.length */\n      mload\n        /* \"Contracts/OracleManager.sol\":15866:15889  _returnData.length < 68 */\n      lt\n        /* \"Contracts/OracleManager.sol\":15862:15936  if (_returnData.length < 68) return \"OracleManager: call reverted w/o msg\" */\n      iszero\n      tag_219\n      jumpi\n        /* \"Contracts/OracleManager.sol\":15891:15936  return \"OracleManager: call reverted w/o msg\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_3e1e6533146503ddcd57727c5002d69321677d0539df318ad90f03963b3c334f\n      0x24\n      swap2\n      codecopy\n      swap3\n        /* \"Contracts/OracleManager.sol\":15766:16072  function _getRevertMsg(bytes memory _returnData) private pure returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":15862:15936  if (_returnData.length < 68) return \"OracleManager: call reverted w/o msg\" */\n    tag_219:\n        /* \"Contracts/OracleManager.sol\":16001:16005  0x04 */\n      0x04\n        /* \"Contracts/OracleManager.sol\":15988:15999  _returnData */\n      dup3\n        /* \"Contracts/OracleManager.sol\":15984:16006  add(_returnData, 0x04) */\n      add\n        /* \"Contracts/OracleManager.sol\":15969:16006  _returnData := add(_returnData, 0x04) */\n      swap2\n      pop\n        /* \"Contracts/OracleManager.sol\":16043:16054  _returnData */\n      dup2\n        /* \"Contracts/OracleManager.sol\":16032:16065  abi.decode(_returnData, (string)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"Contracts/OracleManager.sol\":16025:16065  return abi.decode(_returnData, (string)) */\n      swap3\n        /* \"Contracts/OracleManager.sol\":15766:16072  function _getRevertMsg(bytes memory _returnData) private pure returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":1548:4073  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_208:\n        /* \"Contracts/OracleManager.sol\":1611:1631  uint160 sqrtPriceX96 */\n      0x00\n      not(0x0d89e7)\n        /* \"Contracts/OracleManager.sol\":1651:1667  tick >= MIN_TICK */\n      0x02\n      dup4\n      swap1\n      signextend\n      slt\n      dup1\n      iszero\n      swap1\n        /* \"Contracts/OracleManager.sol\":1651:1687  tick >= MIN_TICK && tick <= MAX_TICK */\n      tag_223\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":1535:1541  887272 */\n      0x0d89e8\n        /* \"Contracts/OracleManager.sol\":1671:1687  tick <= MAX_TICK */\n      0x02\n      dup4\n      swap1\n      signextend\n      sgt\n      iszero\n        /* \"Contracts/OracleManager.sol\":1651:1687  tick >= MIN_TICK && tick <= MAX_TICK */\n    tag_223:\n        /* \"Contracts/OracleManager.sol\":1643:1709  require(tick >= MIN_TICK && tick <= MAX_TICK, \"Tick out of range\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17061:17063   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":1643:1709  require(tick >= MIN_TICK && tick <= MAX_TICK, \"Tick out of range\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17043:17064   */\n      mstore\n        /* \"#utility.yul\":17100:17102   */\n      0x11\n        /* \"#utility.yul\":17080:17098   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17073:17103   */\n      mstore\n      shl(0x78, 0x5469636b206f7574206f662072616e6765)\n        /* \"#utility.yul\":17119:17137   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17112:17159   */\n      mstore\n        /* \"#utility.yul\":17176:17194   */\n      0x64\n      add\n        /* \"Contracts/OracleManager.sol\":1643:1709  require(tick >= MIN_TICK && tick <= MAX_TICK, \"Tick out of range\") */\n      tag_48\n        /* \"#utility.yul\":16859:17200   */\n      jump\n        /* \"Contracts/OracleManager.sol\":1643:1709  require(tick >= MIN_TICK && tick <= MAX_TICK, \"Tick out of range\") */\n    tag_224:\n        /* \"Contracts/OracleManager.sol\":1720:1735  uint256 absTick */\n      0x00\n        /* \"Contracts/OracleManager.sol\":1746:1747  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":1739:1743  tick */\n      dup4\n        /* \"Contracts/OracleManager.sol\":1739:1747  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"Contracts/OracleManager.sol\":1738:1839  (tick < 0) ... */\n      tag_227\n      jumpi\n        /* \"Contracts/OracleManager.sol\":1832:1836  tick */\n      dup3\n        /* \"Contracts/OracleManager.sol\":1810:1839  uint256(uint24(uint24(tick))) */\n      0xffffff\n      and\n        /* \"Contracts/OracleManager.sol\":1738:1839  (tick < 0) ... */\n      jump(tag_228)\n    tag_227:\n        /* \"Contracts/OracleManager.sol\":1786:1791  -tick */\n      tag_229\n        /* \"Contracts/OracleManager.sol\":1787:1791  tick */\n      dup4\n        /* \"Contracts/OracleManager.sol\":1786:1791  -tick */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"Contracts/OracleManager.sol\":1764:1794  uint256(uint24(uint24(-tick))) */\n      0xffffff\n      and\n        /* \"Contracts/OracleManager.sol\":1738:1839  (tick < 0) ... */\n    tag_228:\n        /* \"Contracts/OracleManager.sol\":1720:1839  uint256 absTick = (tick < 0) ... */\n      swap1\n      pop\n      shl(0x80, 0x01)\n        /* \"Contracts/OracleManager.sol\":1938:1941  0x1 */\n      0x01\n        /* \"Contracts/OracleManager.sol\":1928:1941  absTick & 0x1 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":1928:1950  absTick & 0x1     != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":1924:2011  if (absTick & 0x1     != 0) ratio = (ratio * 0xfffcb933bd6fad37aa2d162d1a594001) >> 128 */\n      tag_231\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2008:2011  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":1961:2003  ratio * 0xfffcb933bd6fad37aa2d162d1a594001 */\n      tag_232\n        /* \"Contracts/OracleManager.sol\":1961:1966  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":1969:2003  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"Contracts/OracleManager.sol\":1961:2003  ratio * 0xfffcb933bd6fad37aa2d162d1a594001 */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"Contracts/OracleManager.sol\":1960:2011  (ratio * 0xfffcb933bd6fad37aa2d162d1a594001) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":1952:2011  ratio = (ratio * 0xfffcb933bd6fad37aa2d162d1a594001) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":1924:2011  if (absTick & 0x1     != 0) ratio = (ratio * 0xfffcb933bd6fad37aa2d162d1a594001) >> 128 */\n    tag_231:\n        /* \"Contracts/OracleManager.sol\":2035:2038  0x2 */\n      0x02\n        /* \"Contracts/OracleManager.sol\":2025:2038  absTick & 0x2 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2025:2047  absTick & 0x2     != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2021:2108  if (absTick & 0x2     != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_234\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2105:2108  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2058:2100  ratio * 0xfff97272373d413259a46990580e213a */\n      tag_235\n        /* \"Contracts/OracleManager.sol\":2058:2063  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2066:2100  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"Contracts/OracleManager.sol\":2058:2100  ratio * 0xfff97272373d413259a46990580e213a */\n      tag_233\n      jump\t// in\n    tag_235:\n        /* \"Contracts/OracleManager.sol\":2057:2108  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2049:2108  ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2021:2108  if (absTick & 0x2     != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_234:\n        /* \"Contracts/OracleManager.sol\":2132:2135  0x4 */\n      0x04\n        /* \"Contracts/OracleManager.sol\":2122:2135  absTick & 0x4 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2122:2144  absTick & 0x4     != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2118:2205  if (absTick & 0x4     != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_236\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2202:2205  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2155:2197  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      tag_237\n        /* \"Contracts/OracleManager.sol\":2155:2160  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2163:2197  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"Contracts/OracleManager.sol\":2155:2197  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      tag_233\n      jump\t// in\n    tag_237:\n        /* \"Contracts/OracleManager.sol\":2154:2205  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2146:2205  ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2118:2205  if (absTick & 0x4     != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_236:\n        /* \"Contracts/OracleManager.sol\":2229:2232  0x8 */\n      0x08\n        /* \"Contracts/OracleManager.sol\":2219:2232  absTick & 0x8 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2219:2241  absTick & 0x8     != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2215:2302  if (absTick & 0x8     != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_238\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2299:2302  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2252:2294  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      tag_239\n        /* \"Contracts/OracleManager.sol\":2252:2257  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2260:2294  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"Contracts/OracleManager.sol\":2252:2294  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      tag_233\n      jump\t// in\n    tag_239:\n        /* \"Contracts/OracleManager.sol\":2251:2302  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2243:2302  ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2215:2302  if (absTick & 0x8     != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_238:\n        /* \"Contracts/OracleManager.sol\":2326:2330  0x10 */\n      0x10\n        /* \"Contracts/OracleManager.sol\":2316:2330  absTick & 0x10 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2316:2338  absTick & 0x10    != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2312:2399  if (absTick & 0x10    != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_240\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2396:2399  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2349:2391  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      tag_241\n        /* \"Contracts/OracleManager.sol\":2349:2354  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2357:2391  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"Contracts/OracleManager.sol\":2349:2391  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      tag_233\n      jump\t// in\n    tag_241:\n        /* \"Contracts/OracleManager.sol\":2348:2399  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2340:2399  ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2312:2399  if (absTick & 0x10    != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_240:\n        /* \"Contracts/OracleManager.sol\":2423:2427  0x20 */\n      0x20\n        /* \"Contracts/OracleManager.sol\":2413:2427  absTick & 0x20 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2413:2435  absTick & 0x20    != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2409:2496  if (absTick & 0x20    != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_242\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2493:2496  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2446:2488  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      tag_243\n        /* \"Contracts/OracleManager.sol\":2446:2451  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2454:2488  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"Contracts/OracleManager.sol\":2446:2488  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      tag_233\n      jump\t// in\n    tag_243:\n        /* \"Contracts/OracleManager.sol\":2445:2496  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2437:2496  ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2409:2496  if (absTick & 0x20    != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_242:\n        /* \"Contracts/OracleManager.sol\":2520:2524  0x40 */\n      0x40\n        /* \"Contracts/OracleManager.sol\":2510:2524  absTick & 0x40 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2510:2532  absTick & 0x40    != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2506:2593  if (absTick & 0x40    != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_244\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2590:2593  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2543:2585  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      tag_245\n        /* \"Contracts/OracleManager.sol\":2543:2548  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2551:2585  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"Contracts/OracleManager.sol\":2543:2585  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      tag_233\n      jump\t// in\n    tag_245:\n        /* \"Contracts/OracleManager.sol\":2542:2593  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2534:2593  ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2506:2593  if (absTick & 0x40    != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_244:\n        /* \"Contracts/OracleManager.sol\":2617:2621  0x80 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2607:2621  absTick & 0x80 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2607:2629  absTick & 0x80    != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2603:2690  if (absTick & 0x80    != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_246\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2687:2690  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2640:2682  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      tag_247\n        /* \"Contracts/OracleManager.sol\":2640:2645  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2648:2682  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"Contracts/OracleManager.sol\":2640:2682  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      tag_233\n      jump\t// in\n    tag_247:\n        /* \"Contracts/OracleManager.sol\":2639:2690  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2631:2690  ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2603:2690  if (absTick & 0x80    != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_246:\n        /* \"Contracts/OracleManager.sol\":2714:2719  0x100 */\n      0x0100\n        /* \"Contracts/OracleManager.sol\":2704:2719  absTick & 0x100 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2704:2726  absTick & 0x100   != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2700:2787  if (absTick & 0x100   != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_248\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2784:2787  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2737:2779  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      tag_249\n        /* \"Contracts/OracleManager.sol\":2737:2742  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2745:2779  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"Contracts/OracleManager.sol\":2737:2779  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      tag_233\n      jump\t// in\n    tag_249:\n        /* \"Contracts/OracleManager.sol\":2736:2787  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2728:2787  ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2700:2787  if (absTick & 0x100   != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_248:\n        /* \"Contracts/OracleManager.sol\":2811:2816  0x200 */\n      0x0200\n        /* \"Contracts/OracleManager.sol\":2801:2816  absTick & 0x200 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2801:2823  absTick & 0x200   != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2797:2884  if (absTick & 0x200   != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_250\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2881:2884  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2834:2876  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      tag_251\n        /* \"Contracts/OracleManager.sol\":2834:2839  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2842:2876  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"Contracts/OracleManager.sol\":2834:2876  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      tag_233\n      jump\t// in\n    tag_251:\n        /* \"Contracts/OracleManager.sol\":2833:2884  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2825:2884  ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2797:2884  if (absTick & 0x200   != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_250:\n        /* \"Contracts/OracleManager.sol\":2908:2913  0x400 */\n      0x0400\n        /* \"Contracts/OracleManager.sol\":2898:2913  absTick & 0x400 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2898:2920  absTick & 0x400   != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2894:2981  if (absTick & 0x400   != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_252\n      jumpi\n        /* \"Contracts/OracleManager.sol\":2978:2981  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":2931:2973  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      tag_253\n        /* \"Contracts/OracleManager.sol\":2931:2936  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":2939:2973  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"Contracts/OracleManager.sol\":2931:2973  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      tag_233\n      jump\t// in\n    tag_253:\n        /* \"Contracts/OracleManager.sol\":2930:2981  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":2922:2981  ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2894:2981  if (absTick & 0x400   != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_252:\n        /* \"Contracts/OracleManager.sol\":3005:3010  0x800 */\n      0x0800\n        /* \"Contracts/OracleManager.sol\":2995:3010  absTick & 0x800 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":2995:3017  absTick & 0x800   != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":2991:3078  if (absTick & 0x800   != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_254\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3075:3078  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":3028:3070  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      tag_255\n        /* \"Contracts/OracleManager.sol\":3028:3033  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":3036:3070  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"Contracts/OracleManager.sol\":3028:3070  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      tag_233\n      jump\t// in\n    tag_255:\n        /* \"Contracts/OracleManager.sol\":3027:3078  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":3019:3078  ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":2991:3078  if (absTick & 0x800   != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_254:\n        /* \"Contracts/OracleManager.sol\":3102:3108  0x1000 */\n      0x1000\n        /* \"Contracts/OracleManager.sol\":3092:3108  absTick & 0x1000 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":3092:3114  absTick & 0x1000  != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":3088:3175  if (absTick & 0x1000  != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_256\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3172:3175  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":3125:3167  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      tag_257\n        /* \"Contracts/OracleManager.sol\":3125:3130  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":3133:3167  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"Contracts/OracleManager.sol\":3125:3167  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      tag_233\n      jump\t// in\n    tag_257:\n        /* \"Contracts/OracleManager.sol\":3124:3175  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":3116:3175  ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":3088:3175  if (absTick & 0x1000  != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_256:\n        /* \"Contracts/OracleManager.sol\":3199:3205  0x2000 */\n      0x2000\n        /* \"Contracts/OracleManager.sol\":3189:3205  absTick & 0x2000 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":3189:3211  absTick & 0x2000  != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":3185:3272  if (absTick & 0x2000  != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_258\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3269:3272  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":3222:3264  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      tag_259\n        /* \"Contracts/OracleManager.sol\":3222:3227  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":3230:3264  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"Contracts/OracleManager.sol\":3222:3264  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      tag_233\n      jump\t// in\n    tag_259:\n        /* \"Contracts/OracleManager.sol\":3221:3272  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":3213:3272  ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":3185:3272  if (absTick & 0x2000  != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_258:\n        /* \"Contracts/OracleManager.sol\":3296:3302  0x4000 */\n      0x4000\n        /* \"Contracts/OracleManager.sol\":3286:3302  absTick & 0x4000 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":3286:3308  absTick & 0x4000  != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":3282:3369  if (absTick & 0x4000  != 0) ratio = (ratio * 0x70d869a156d2a1f6a7a2e3fadacb4c9b) >> 128 */\n      tag_260\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3366:3369  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":3319:3361  ratio * 0x70d869a156d2a1f6a7a2e3fadacb4c9b */\n      tag_261\n        /* \"Contracts/OracleManager.sol\":3319:3324  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":3327:3361  0x70d869a156d2a1f6a7a2e3fadacb4c9b */\n      0x70d869a156d2a1f6a7a2e3fadacb4c9b\n        /* \"Contracts/OracleManager.sol\":3319:3361  ratio * 0x70d869a156d2a1f6a7a2e3fadacb4c9b */\n      tag_233\n      jump\t// in\n    tag_261:\n        /* \"Contracts/OracleManager.sol\":3318:3369  (ratio * 0x70d869a156d2a1f6a7a2e3fadacb4c9b) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":3310:3369  ratio = (ratio * 0x70d869a156d2a1f6a7a2e3fadacb4c9b) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":3282:3369  if (absTick & 0x4000  != 0) ratio = (ratio * 0x70d869a156d2a1f6a7a2e3fadacb4c9b) >> 128 */\n    tag_260:\n        /* \"Contracts/OracleManager.sol\":3393:3399  0x8000 */\n      0x8000\n        /* \"Contracts/OracleManager.sol\":3383:3399  absTick & 0x8000 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":3383:3405  absTick & 0x8000  != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":3379:3466  if (absTick & 0x8000  != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_262\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3463:3466  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":3416:3458  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      tag_263\n        /* \"Contracts/OracleManager.sol\":3416:3421  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":3424:3458  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"Contracts/OracleManager.sol\":3416:3458  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      tag_233\n      jump\t// in\n    tag_263:\n        /* \"Contracts/OracleManager.sol\":3415:3466  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":3407:3466  ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":3379:3466  if (absTick & 0x8000  != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_262:\n        /* \"Contracts/OracleManager.sol\":3490:3497  0x10000 */\n      0x010000\n        /* \"Contracts/OracleManager.sol\":3480:3497  absTick & 0x10000 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":3480:3502  absTick & 0x10000 != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":3476:3562  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_264\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3559:3562  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":3513:3554  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      tag_265\n        /* \"Contracts/OracleManager.sol\":3513:3518  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":3521:3554  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"Contracts/OracleManager.sol\":3513:3554  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      tag_233\n      jump\t// in\n    tag_265:\n        /* \"Contracts/OracleManager.sol\":3512:3562  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":3504:3562  ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":3476:3562  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_264:\n        /* \"Contracts/OracleManager.sol\":3586:3593  0x20000 */\n      0x020000\n        /* \"Contracts/OracleManager.sol\":3576:3593  absTick & 0x20000 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":3576:3598  absTick & 0x20000 != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":3572:3657  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_266\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3654:3657  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":3609:3649  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      tag_267\n        /* \"Contracts/OracleManager.sol\":3609:3614  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":3617:3649  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"Contracts/OracleManager.sol\":3609:3649  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      tag_233\n      jump\t// in\n    tag_267:\n        /* \"Contracts/OracleManager.sol\":3608:3657  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":3600:3657  ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":3572:3657  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_266:\n        /* \"Contracts/OracleManager.sol\":3681:3688  0x40000 */\n      0x040000\n        /* \"Contracts/OracleManager.sol\":3671:3688  absTick & 0x40000 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":3671:3693  absTick & 0x40000 != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":3667:3750  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_268\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3747:3750  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":3704:3742  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      tag_269\n        /* \"Contracts/OracleManager.sol\":3704:3709  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":3712:3742  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"Contracts/OracleManager.sol\":3704:3742  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      tag_233\n      jump\t// in\n    tag_269:\n        /* \"Contracts/OracleManager.sol\":3703:3750  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":3695:3750  ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":3667:3750  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_268:\n        /* \"Contracts/OracleManager.sol\":3774:3781  0x80000 */\n      0x080000\n        /* \"Contracts/OracleManager.sol\":3764:3781  absTick & 0x80000 */\n      dup3\n      and\n        /* \"Contracts/OracleManager.sol\":3764:3786  absTick & 0x80000 != 0 */\n      iszero\n        /* \"Contracts/OracleManager.sol\":3760:3838  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_270\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3835:3838  128 */\n      0x80\n        /* \"Contracts/OracleManager.sol\":3797:3830  ratio * 0x48a170391f7dc42444e8fa2 */\n      tag_271\n        /* \"Contracts/OracleManager.sol\":3797:3802  ratio */\n      dup3\n        /* \"Contracts/OracleManager.sol\":3805:3830  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"Contracts/OracleManager.sol\":3797:3830  ratio * 0x48a170391f7dc42444e8fa2 */\n      tag_233\n      jump\t// in\n    tag_271:\n        /* \"Contracts/OracleManager.sol\":3796:3838  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      shr\n        /* \"Contracts/OracleManager.sol\":3788:3838  ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":3760:3838  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_270:\n        /* \"Contracts/OracleManager.sol\":3860:3861  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":3853:3857  tick */\n      dup5\n        /* \"Contracts/OracleManager.sol\":3853:3861  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"Contracts/OracleManager.sol\":3849:3921  if (tick > 0) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"Contracts/OracleManager.sol\":3885:3910  type(uint256).max / ratio */\n      tag_273\n        /* \"Contracts/OracleManager.sol\":3905:3910  ratio */\n      dup2\n      not(0x00)\n        /* \"Contracts/OracleManager.sol\":3885:3910  type(uint256).max / ratio */\n      tag_126\n      jump\t// in\n    tag_273:\n        /* \"Contracts/OracleManager.sol\":3877:3910  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"Contracts/OracleManager.sol\":3849:3921  if (tick > 0) {... */\n    tag_272:\n        /* \"Contracts/OracleManager.sol\":3958:3960  32 */\n      0x20\n        /* \"Contracts/OracleManager.sol\":3949:3960  ratio >> 32 */\n      dup2\n      swap1\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":3978:4006  shifted <= type(uint160).max */\n      dup2\n      gt\n      iszero\n        /* \"Contracts/OracleManager.sol\":3970:4025  require(shifted <= type(uint160).max, \"Price overflow\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17769:17771   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":3970:4025  require(shifted <= type(uint160).max, \"Price overflow\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17751:17772   */\n      mstore\n        /* \"#utility.yul\":17808:17810   */\n      0x0e\n        /* \"#utility.yul\":17788:17806   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17781:17811   */\n      mstore\n      shl(0x90, 0x5072696365206f766572666c6f77)\n        /* \"#utility.yul\":17827:17845   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17820:17864   */\n      mstore\n        /* \"#utility.yul\":17881:17899   */\n      0x64\n      add\n        /* \"Contracts/OracleManager.sol\":3970:4025  require(shifted <= type(uint160).max, \"Price overflow\") */\n      tag_48\n        /* \"#utility.yul\":17567:17905   */\n      jump\n        /* \"Contracts/OracleManager.sol\":3970:4025  require(shifted <= type(uint160).max, \"Price overflow\") */\n    tag_274:\n        /* \"Contracts/OracleManager.sol\":4058:4065  shifted */\n      swap5\n        /* \"Contracts/OracleManager.sol\":1548:4073  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6173:6972  function getAmountsForLiquidity(... */\n    tag_211:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6353:6368  uint256 amount0 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6370:6385  uint256 amount1 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6417:6430  sqrtRatioBX96 */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6401:6430  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6401:6414  sqrtRatioAX96 */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6401:6430  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n      gt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6397:6495  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n      iszero\n      tag_278\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6466:6479  sqrtRatioBX96 */\n      swap3\n      swap4\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6481:6494  sqrtRatioAX96 */\n      swap3\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6397:6495  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n    tag_278:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6526:6539  sqrtRatioAX96 */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6510:6539  sqrtRatioX96 <= sqrtRatioAX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6510:6522  sqrtRatioX96 */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6510:6539  sqrtRatioX96 <= sqrtRatioAX96 */\n      and\n      gt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6506:6966  if (sqrtRatioX96 <= sqrtRatioAX96) {... */\n      tag_279\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6565:6628  getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      tag_280\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6588:6601  sqrtRatioAX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6603:6616  sqrtRatioBX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6618:6627  liquidity */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6565:6587  getAmount0ForLiquidity */\n      tag_281\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6565:6628  getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      jump\t// in\n    tag_280:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6555:6628  amount0 = getAmount0ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      swap2\n      pop\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6506:6966  if (sqrtRatioX96 <= sqrtRatioAX96) {... */\n      jump(tag_205)\n    tag_279:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6664:6677  sqrtRatioBX96 */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6649:6677  sqrtRatioX96 < sqrtRatioBX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6649:6661  sqrtRatioX96 */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6649:6677  sqrtRatioX96 < sqrtRatioBX96 */\n      and\n      lt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6645:6966  if (sqrtRatioX96 < sqrtRatioBX96) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6703:6765  getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity) */\n      tag_284\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6726:6738  sqrtRatioX96 */\n      dup7\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6740:6753  sqrtRatioBX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6755:6764  liquidity */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6703:6725  getAmount0ForLiquidity */\n      tag_281\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6703:6765  getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity) */\n      jump\t// in\n    tag_284:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6693:6765  amount0 = getAmount0ForLiquidity(sqrtRatioX96, sqrtRatioBX96, liquidity) */\n      swap2\n      pop\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6789:6851  getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity) */\n      tag_285\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6812:6825  sqrtRatioAX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6827:6839  sqrtRatioX96 */\n      dup8\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6841:6850  liquidity */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6789:6811  getAmount1ForLiquidity */\n      tag_286\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6789:6851  getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity) */\n      jump\t// in\n    tag_285:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6779:6851  amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioX96, liquidity) */\n      swap1\n      pop\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6645:6966  if (sqrtRatioX96 < sqrtRatioBX96) {... */\n      jump(tag_205)\n    tag_283:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6892:6955  getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      tag_288\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6915:6928  sqrtRatioAX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6930:6943  sqrtRatioBX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6945:6954  liquidity */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6892:6914  getAmount1ForLiquidity */\n      tag_286\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6892:6955  getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      jump\t// in\n    tag_288:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6882:6955  amount1 = getAmount1ForLiquidity(sqrtRatioAX96, sqrtRatioBX96, liquidity) */\n      swap1\n      pop\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":6173:6972  function getAmountsForLiquidity(... */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/OracleManager.sol\":14102:14564  function _convertToAggregatorValue(... */\n    tag_214:\n        /* \"Contracts/OracleManager.sol\":14246:14253  uint256 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":14269:14277  amt == 0 */\n      dup4\n      iszero\n      dup1\n        /* \"Contracts/OracleManager.sol\":14269:14309  amt == 0 || aggregatorAddr == address(0) */\n      tag_290\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Contracts/OracleManager.sol\":14281:14309  aggregatorAddr == address(0) */\n      dup4\n      and\n      iszero\n        /* \"Contracts/OracleManager.sol\":14269:14309  amt == 0 || aggregatorAddr == address(0) */\n    tag_290:\n        /* \"Contracts/OracleManager.sol\":14265:14344  if (amt == 0 || aggregatorAddr == address(0)) {... */\n      iszero\n      tag_291\n      jumpi\n      pop\n        /* \"Contracts/OracleManager.sol\":14332:14333  0 */\n      0x00\n        /* \"Contracts/OracleManager.sol\":14325:14333  return 0 */\n      jump(tag_212)\n        /* \"Contracts/OracleManager.sol\":14265:14344  if (amt == 0 || aggregatorAddr == address(0)) {... */\n    tag_291:\n        /* \"Contracts/OracleManager.sol\":14354:14361  bool ok */\n      0x00\n        /* \"Contracts/OracleManager.sol\":14363:14372  uint256 p */\n      0x00\n        /* \"Contracts/OracleManager.sol\":14374:14381  uint8 d */\n      0x00\n        /* \"Contracts/OracleManager.sol\":14385:14435  _tryGetChainlinkPrice(aggregatorAddr, decimalsOvr) */\n      tag_292\n        /* \"Contracts/OracleManager.sol\":14407:14421  aggregatorAddr */\n      dup7\n        /* \"Contracts/OracleManager.sol\":14423:14434  decimalsOvr */\n      dup7\n        /* \"Contracts/OracleManager.sol\":14385:14406  _tryGetChainlinkPrice */\n      tag_94\n        /* \"Contracts/OracleManager.sol\":14385:14435  _tryGetChainlinkPrice(aggregatorAddr, decimalsOvr) */\n      jump\t// in\n    tag_292:\n        /* \"Contracts/OracleManager.sol\":14353:14435  (bool ok, uint256 p, uint8 d) = _tryGetChainlinkPrice(aggregatorAddr, decimalsOvr) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"Contracts/OracleManager.sol\":14453:14455  ok */\n      dup3\n        /* \"Contracts/OracleManager.sol\":14445:14519  require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18112:18114   */\n      0x20\n        /* \"Contracts/OracleManager.sol\":14445:14519  require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18094:18115   */\n      mstore\n        /* \"#utility.yul\":18151:18153   */\n      0x3b\n        /* \"#utility.yul\":18131:18149   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18124:18154   */\n      mstore\n        /* \"#utility.yul\":18190:18224   */\n      0x4f7261636c654d616e616765723a2061676772656761746f72206661696c2069\n        /* \"#utility.yul\":18170:18188   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18163:18225   */\n      mstore\n        /* \"#utility.yul\":18261:18290   */\n      0x6e205f636f6e76657274546f41676772656761746f7256616c75650000000000\n        /* \"#utility.yul\":18241:18259   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18234:18291   */\n      mstore\n        /* \"#utility.yul\":18308:18327   */\n      0x84\n      add\n        /* \"Contracts/OracleManager.sol\":14445:14519  require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\") */\n      tag_48\n        /* \"#utility.yul\":17910:18333   */\n      jump\n        /* \"Contracts/OracleManager.sol\":14445:14519  require(ok, \"OracleManager: aggregator fail in _convertToAggregatorValue\") */\n    tag_293:\n        /* \"Contracts/OracleManager.sol\":14549:14556  10 ** d */\n      tag_296\n        /* \"Contracts/OracleManager.sol\":14555:14556  d */\n      dup2\n        /* \"Contracts/OracleManager.sol\":14549:14551  10 */\n      0x0a\n        /* \"Contracts/OracleManager.sol\":14549:14556  10 ** d */\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"Contracts/OracleManager.sol\":14537:14544  amt * p */\n      tag_298\n        /* \"Contracts/OracleManager.sol\":14543:14544  p */\n      dup4\n        /* \"Contracts/OracleManager.sol\":14537:14540  amt */\n      dup10\n        /* \"Contracts/OracleManager.sol\":14537:14544  amt * p */\n      tag_233\n      jump\t// in\n    tag_298:\n        /* \"Contracts/OracleManager.sol\":14536:14557  (amt * p) / (10 ** d) */\n      tag_299\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_299:\n        /* \"Contracts/OracleManager.sol\":14529:14557  return (amt * p) / (10 ** d) */\n      swap8\n        /* \"Contracts/OracleManager.sol\":14102:14564  function _convertToAggregatorValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4309:4865  function getAmount0ForLiquidity(... */\n    tag_281:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4459:4474  uint256 amount0 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4530:4543  sqrtRatioBX96 */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4514:4543  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4514:4527  sqrtRatioAX96 */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4514:4543  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n      gt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4510:4608  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n      iszero\n      tag_301\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4579:4592  sqrtRatioBX96 */\n      swap2\n      swap3\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4594:4607  sqrtRatioAX96 */\n      swap2\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4510:4608  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n    tag_301:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4835:4848  sqrtRatioAX96 */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4848  FullMath.mulDiv(... */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4832  FullMath.mulDiv(... */\n      tag_302\n        /* \"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":309:311  96 */\n      0x60\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4683:4728  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      0xff\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4691:4700  liquidity */\n      dup5\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4683:4701  uint256(liquidity) */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4683:4728  uint256(liquidity) << FixedPoint96.RESOLUTION */\n      swap1\n      shl\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4766:4779  sqrtRatioAX96 */\n      dup7\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4750:4763  sqrtRatioBX96 */\n      dup7\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4750:4779  sqrtRatioBX96 - sqrtRatioAX96 */\n      sub\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4832  FullMath.mulDiv(... */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4801:4814  sqrtRatioBX96 */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4832  FullMath.mulDiv(... */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4661  FullMath.mulDiv */\n      tag_303\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4832  FullMath.mulDiv(... */\n      jump\t// in\n    tag_302:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4646:4848  FullMath.mulDiv(... */\n      dup2\n      tag_305\n      jumpi\n      tag_305\n      tag_306\n      jump\t// in\n    tag_305:\n      div\n      swap5\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":4309:4865  function getAmount0ForLiquidity(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5223:5632  function getAmount1ForLiquidity(... */\n    tag_286:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5373:5388  uint256 amount1 */\n      0x00\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5420:5433  sqrtRatioBX96 */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5404:5433  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5404:5417  sqrtRatioAX96 */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5404:5433  sqrtRatioAX96 > sqrtRatioBX96 */\n      and\n      gt\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5400:5498  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n      iszero\n      tag_308\n      jumpi\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5469:5482  sqrtRatioBX96 */\n      swap2\n      swap3\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5484:5497  sqrtRatioAX96 */\n      swap2\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5400:5498  if (sqrtRatioAX96 > sqrtRatioBX96) (sqrtRatioAX96, sqrtRatioBX96) = (sqrtRatioBX96, sqrtRatioAX96) */\n    tag_308:\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5540:5615  FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96) */\n      tag_274\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5556:5565  liquidity */\n      dup3\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5540:5615  FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96) */\n      and\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5583:5596  sqrtRatioAX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5567:5580  sqrtRatioBX96 */\n      dup6\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5567:5596  sqrtRatioBX96 - sqrtRatioAX96 */\n      sub\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":5540:5615  FullMath.mulDiv(liquidity, sqrtRatioBX96 - sqrtRatioAX96, FixedPoint96.Q96) */\n      and\n      shl(0x60, 0x01)\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":741:4868  function mulDiv(... */\n    tag_303:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":853:867  uint256 result */\n      0x00\n      dup1\n      dup1\n      not(0x00)\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1416:1417  b */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1413:1414  a */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1406:1426  mulmod(a, b, not(0)) */\n      mulmod\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1459:1460  b */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1456:1457  a */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1452:1461  mul(a, b) */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1443:1461  prod0 := mul(a, b) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1514:1519  prod0 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1510:1512  mm */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1507:1520  lt(mm, prod0) */\n      lt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1499:1504  prod0 */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1495:1497  mm */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1491:1505  sub(mm, prod0) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1487:1521  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1478:1521  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1615:1620  prod1 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1624:1625  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1615:1625  prod1 == 0 */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1611:1814  if (prod1 == 0) {... */\n      tag_311\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1667:1668  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1653:1664  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1653:1668  denominator > 0 */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1645:1669  require(denominator > 0) */\n      tag_312\n      jumpi\n      revert(0x00, 0x00)\n    tag_312:\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1728:1751  div(prod0, denominator) */\n      dup3\n      swap1\n      div\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1786:1799  return result */\n      jump(tag_212)\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1611:1814  if (prod1 == 0) {... */\n    tag_311:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1953:1958  prod1 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1939:1950  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1939:1958  denominator > prod1 */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1931:1959  require(denominator > prod1) */\n      tag_313\n      jumpi\n      revert(0x00, 0x00)\n    tag_313:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2260:2277  uint256 remainder */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2344:2355  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2341:2342  b */\n      dup7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2338:2339  a */\n      dup9\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2331:2356  mulmod(a, b, denominator) */\n      mulmod\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2736:2748  uint256 twos */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2752:2767  0 - denominator */\n      dup7\n      dup2\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2751:2782  (0 - denominator) & denominator */\n      dup8\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2888:2910  div(denominator, twos) */\n      swap7\n      dup8\n      swap1\n      div\n      swap7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3763:3764  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3744:3745  3 */\n      0x03\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3744:3759  3 * denominator */\n      dup10\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3743:3764  (3 * denominator) ^ 2 */\n      dup2\n      xor\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4006:4023  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4002:4023  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3995:4023  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4068:4085  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4064:4085  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4057:4085  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4131:4148  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4127:4148  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4120:4148  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4194:4211  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4190:4211  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4183:4211  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4257:4274  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4253:4274  2 - denominator * inv */\n      dup3\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4246:4274  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4321:4338  denominator * inv */\n      dup1\n      dup11\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4317:4338  2 - denominator * inv */\n      swap1\n      swap2\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4310:4338  inv *= 2 - denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3300:3312  sub(0, twos) */\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3296:3319  div(sub(0, twos), twos) */\n      dup2\n      swap1\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3321:3322  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3292:3323  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2489:2509  gt(remainder, prod0) */\n      dup7\n      dup5\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2478:2510  sub(prod1, gt(remainder, prod0)) */\n      swap1\n      swap6\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3359:3371  prod1 * twos */\n      swap5\n      swap1\n      swap5\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2536:2557  sub(prod0, remainder) */\n      swap2\n      swap1\n      swap5\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3032:3048  div(prod0, twos) */\n      swap3\n      swap1\n      swap3\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3350:3371  prod0 |= prod1 * twos */\n      swap2\n      swap1\n      swap2\n      or\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4813:4824  prod0 * inv */\n      swap2\n      swap1\n      swap2\n      mul\n      swap2\n      pop\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":741:4868  function mulDiv(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_314:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      0x00\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:397   */\n    tag_14:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      0x00\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_332:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_212\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_314\n      jump\t// in\n        /* \"#utility.yul\":1961:2075   */\n    tag_315:\n        /* \"#utility.yul\":2045:2049   */\n      0xff\n        /* \"#utility.yul\":2038:2043   */\n      dup2\n        /* \"#utility.yul\":2034:2050   */\n      and\n        /* \"#utility.yul\":2027:2032   */\n      dup2\n        /* \"#utility.yul\":2024:2051   */\n      eq\n        /* \"#utility.yul\":2014:2069   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2065:2066   */\n      0x00\n        /* \"#utility.yul\":2062:2063   */\n      0x00\n        /* \"#utility.yul\":2055:2067   */\n      revert\n        /* \"#utility.yul\":2080:2885   */\n    tag_36:\n        /* \"#utility.yul\":2171:2177   */\n      0x00\n        /* \"#utility.yul\":2179:2185   */\n      0x00\n        /* \"#utility.yul\":2187:2193   */\n      0x00\n        /* \"#utility.yul\":2195:2201   */\n      0x00\n        /* \"#utility.yul\":2203:2209   */\n      0x00\n        /* \"#utility.yul\":2256:2259   */\n      0xa0\n        /* \"#utility.yul\":2244:2253   */\n      dup7\n        /* \"#utility.yul\":2235:2242   */\n      dup9\n        /* \"#utility.yul\":2231:2254   */\n      sub\n        /* \"#utility.yul\":2227:2260   */\n      slt\n        /* \"#utility.yul\":2224:2277   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":2273:2274   */\n      0x00\n        /* \"#utility.yul\":2270:2271   */\n      0x00\n        /* \"#utility.yul\":2263:2275   */\n      revert\n        /* \"#utility.yul\":2224:2277   */\n    tag_341:\n        /* \"#utility.yul\":2312:2321   */\n      dup6\n        /* \"#utility.yul\":2299:2322   */\n      calldataload\n        /* \"#utility.yul\":2331:2362   */\n      tag_342\n        /* \"#utility.yul\":2356:2361   */\n      dup2\n        /* \"#utility.yul\":2331:2362   */\n      tag_314\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2381:2386   */\n      swap5\n      pop\n        /* \"#utility.yul\":2438:2440   */\n      0x20\n        /* \"#utility.yul\":2423:2441   */\n      dup7\n      add\n        /* \"#utility.yul\":2410:2442   */\n      calldataload\n        /* \"#utility.yul\":2451:2484   */\n      tag_343\n        /* \"#utility.yul\":2410:2442   */\n      dup2\n        /* \"#utility.yul\":2451:2484   */\n      tag_314\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2503:2510   */\n      swap4\n      pop\n        /* \"#utility.yul\":2562:2564   */\n      0x40\n        /* \"#utility.yul\":2547:2565   */\n      dup7\n      add\n        /* \"#utility.yul\":2534:2566   */\n      calldataload\n        /* \"#utility.yul\":2575:2608   */\n      tag_344\n        /* \"#utility.yul\":2534:2566   */\n      dup2\n        /* \"#utility.yul\":2575:2608   */\n      tag_314\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2627:2634   */\n      swap3\n      pop\n        /* \"#utility.yul\":2686:2688   */\n      0x60\n        /* \"#utility.yul\":2671:2689   */\n      dup7\n      add\n        /* \"#utility.yul\":2658:2690   */\n      calldataload\n        /* \"#utility.yul\":2699:2730   */\n      tag_345\n        /* \"#utility.yul\":2658:2690   */\n      dup2\n        /* \"#utility.yul\":2699:2730   */\n      tag_315\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2749:2756   */\n      swap2\n      pop\n        /* \"#utility.yul\":2808:2811   */\n      0x80\n        /* \"#utility.yul\":2793:2812   */\n      dup7\n      add\n        /* \"#utility.yul\":2780:2813   */\n      calldataload\n        /* \"#utility.yul\":2822:2853   */\n      tag_346\n        /* \"#utility.yul\":2780:2813   */\n      dup2\n        /* \"#utility.yul\":2822:2853   */\n      tag_315\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2872:2879   */\n      dup1\n        /* \"#utility.yul\":2862:2879   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2080:2885   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2890:3008   */\n    tag_316:\n        /* \"#utility.yul\":2976:2981   */\n      dup1\n        /* \"#utility.yul\":2969:2982   */\n      iszero\n        /* \"#utility.yul\":2962:2983   */\n      iszero\n        /* \"#utility.yul\":2955:2960   */\n      dup2\n        /* \"#utility.yul\":2952:2984   */\n      eq\n        /* \"#utility.yul\":2942:3002   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":2995:2996   */\n      0x00\n        /* \"#utility.yul\":2988:3000   */\n      revert\n        /* \"#utility.yul\":3013:3952   */\n    tag_40:\n        /* \"#utility.yul\":3109:3115   */\n      0x00\n        /* \"#utility.yul\":3117:3123   */\n      0x00\n        /* \"#utility.yul\":3125:3131   */\n      0x00\n        /* \"#utility.yul\":3133:3139   */\n      0x00\n        /* \"#utility.yul\":3141:3147   */\n      0x00\n        /* \"#utility.yul\":3149:3155   */\n      0x00\n        /* \"#utility.yul\":3202:3205   */\n      0xc0\n        /* \"#utility.yul\":3190:3199   */\n      dup8\n        /* \"#utility.yul\":3181:3188   */\n      dup10\n        /* \"#utility.yul\":3177:3200   */\n      sub\n        /* \"#utility.yul\":3173:3206   */\n      slt\n        /* \"#utility.yul\":3170:3223   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":3219:3220   */\n      0x00\n        /* \"#utility.yul\":3216:3217   */\n      0x00\n        /* \"#utility.yul\":3209:3221   */\n      revert\n        /* \"#utility.yul\":3170:3223   */\n    tag_350:\n        /* \"#utility.yul\":3258:3267   */\n      dup7\n        /* \"#utility.yul\":3245:3268   */\n      calldataload\n        /* \"#utility.yul\":3277:3308   */\n      tag_351\n        /* \"#utility.yul\":3302:3307   */\n      dup2\n        /* \"#utility.yul\":3277:3308   */\n      tag_314\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":3327:3332   */\n      swap6\n      pop\n        /* \"#utility.yul\":3384:3386   */\n      0x20\n        /* \"#utility.yul\":3369:3387   */\n      dup8\n      add\n        /* \"#utility.yul\":3356:3388   */\n      calldataload\n        /* \"#utility.yul\":3397:3430   */\n      tag_352\n        /* \"#utility.yul\":3356:3388   */\n      dup2\n        /* \"#utility.yul\":3397:3430   */\n      tag_314\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3449:3456   */\n      swap5\n      pop\n        /* \"#utility.yul\":3508:3510   */\n      0x40\n        /* \"#utility.yul\":3493:3511   */\n      dup8\n      add\n        /* \"#utility.yul\":3480:3512   */\n      calldataload\n        /* \"#utility.yul\":3521:3554   */\n      tag_353\n        /* \"#utility.yul\":3480:3512   */\n      dup2\n        /* \"#utility.yul\":3521:3554   */\n      tag_314\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3573:3580   */\n      swap4\n      pop\n        /* \"#utility.yul\":3632:3634   */\n      0x60\n        /* \"#utility.yul\":3617:3635   */\n      dup8\n      add\n        /* \"#utility.yul\":3604:3636   */\n      calldataload\n        /* \"#utility.yul\":3645:3675   */\n      tag_354\n        /* \"#utility.yul\":3604:3636   */\n      dup2\n        /* \"#utility.yul\":3645:3675   */\n      tag_316\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":3694:3701   */\n      swap3\n      pop\n        /* \"#utility.yul\":3753:3756   */\n      0x80\n        /* \"#utility.yul\":3738:3757   */\n      dup8\n      add\n        /* \"#utility.yul\":3725:3758   */\n      calldataload\n        /* \"#utility.yul\":3767:3798   */\n      tag_355\n        /* \"#utility.yul\":3725:3758   */\n      dup2\n        /* \"#utility.yul\":3767:3798   */\n      tag_315\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3817:3824   */\n      swap2\n      pop\n        /* \"#utility.yul\":3876:3879   */\n      0xa0\n        /* \"#utility.yul\":3861:3880   */\n      dup8\n      add\n        /* \"#utility.yul\":3848:3881   */\n      calldataload\n        /* \"#utility.yul\":3890:3920   */\n      tag_356\n        /* \"#utility.yul\":3848:3881   */\n      dup2\n        /* \"#utility.yul\":3890:3920   */\n      tag_316\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3939:3946   */\n      dup1\n        /* \"#utility.yul\":3929:3946   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3013:3952   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":7629:7880   */\n    tag_114:\n        /* \"#utility.yul\":7699:7705   */\n      0x00\n        /* \"#utility.yul\":7752:7754   */\n      0x20\n        /* \"#utility.yul\":7740:7749   */\n      dup3\n        /* \"#utility.yul\":7731:7738   */\n      dup5\n        /* \"#utility.yul\":7727:7750   */\n      sub\n        /* \"#utility.yul\":7723:7755   */\n      slt\n        /* \"#utility.yul\":7720:7772   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":7768:7769   */\n      0x00\n        /* \"#utility.yul\":7765:7766   */\n      0x00\n        /* \"#utility.yul\":7758:7770   */\n      revert\n        /* \"#utility.yul\":7720:7772   */\n    tag_367:\n        /* \"#utility.yul\":7800:7809   */\n      dup2\n        /* \"#utility.yul\":7794:7810   */\n      mload\n        /* \"#utility.yul\":7819:7850   */\n      tag_212\n        /* \"#utility.yul\":7844:7849   */\n      dup2\n        /* \"#utility.yul\":7819:7850   */\n      tag_314\n      jump\t// in\n        /* \"#utility.yul\":7885:8012   */\n    tag_317:\n        /* \"#utility.yul\":7946:7956   */\n      0x4e487b71\n        /* \"#utility.yul\":7941:7944   */\n      0xe0\n        /* \"#utility.yul\":7937:7957   */\n      shl\n        /* \"#utility.yul\":7934:7935   */\n      0x00\n        /* \"#utility.yul\":7927:7958   */\n      mstore\n        /* \"#utility.yul\":7977:7981   */\n      0x11\n        /* \"#utility.yul\":7974:7975   */\n      0x04\n        /* \"#utility.yul\":7967:7982   */\n      mstore\n        /* \"#utility.yul\":8001:8005   */\n      0x24\n        /* \"#utility.yul\":7998:7999   */\n      0x00\n        /* \"#utility.yul\":7991:8006   */\n      revert\n        /* \"#utility.yul\":8017:8142   */\n    tag_119:\n        /* \"#utility.yul\":8082:8091   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8103:8113   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8100:8136   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":8116:8134   */\n      tag_220\n      tag_317\n      jump\t// in\n        /* \"#utility.yul\":8147:8274   */\n    tag_306:\n        /* \"#utility.yul\":8208:8218   */\n      0x4e487b71\n        /* \"#utility.yul\":8203:8206   */\n      0xe0\n        /* \"#utility.yul\":8199:8219   */\n      shl\n        /* \"#utility.yul\":8196:8197   */\n      0x00\n        /* \"#utility.yul\":8189:8220   */\n      mstore\n        /* \"#utility.yul\":8239:8243   */\n      0x12\n        /* \"#utility.yul\":8236:8237   */\n      0x04\n        /* \"#utility.yul\":8229:8244   */\n      mstore\n        /* \"#utility.yul\":8263:8267   */\n      0x24\n        /* \"#utility.yul\":8260:8261   */\n      0x00\n        /* \"#utility.yul\":8253:8268   */\n      revert\n        /* \"#utility.yul\":8279:8496   */\n    tag_126:\n        /* \"#utility.yul\":8319:8320   */\n      0x00\n        /* \"#utility.yul\":8345:8346   */\n      dup3\n        /* \"#utility.yul\":8335:8467   */\n      tag_375\n      jumpi\n        /* \"#utility.yul\":8389:8399   */\n      0x4e487b71\n        /* \"#utility.yul\":8384:8387   */\n      0xe0\n        /* \"#utility.yul\":8380:8400   */\n      shl\n        /* \"#utility.yul\":8377:8378   */\n      0x00\n        /* \"#utility.yul\":8370:8401   */\n      mstore\n        /* \"#utility.yul\":8424:8428   */\n      0x12\n        /* \"#utility.yul\":8421:8422   */\n      0x04\n        /* \"#utility.yul\":8414:8429   */\n      mstore\n        /* \"#utility.yul\":8452:8456   */\n      0x24\n        /* \"#utility.yul\":8449:8450   */\n      0x00\n        /* \"#utility.yul\":8442:8457   */\n      revert\n        /* \"#utility.yul\":8335:8467   */\n    tag_375:\n      pop\n        /* \"#utility.yul\":8481:8490   */\n      div\n      swap1\n        /* \"#utility.yul\":8279:8496   */\n      jump\t// out\n        /* \"#utility.yul\":8862:9112   */\n    tag_318:\n        /* \"#utility.yul\":8947:8948   */\n      0x00\n        /* \"#utility.yul\":8957:9070   */\n    tag_378:\n        /* \"#utility.yul\":8971:8977   */\n      dup4\n        /* \"#utility.yul\":8968:8969   */\n      dup2\n        /* \"#utility.yul\":8965:8978   */\n      lt\n        /* \"#utility.yul\":8957:9070   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":9047:9058   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9041:9059   */\n      mload\n        /* \"#utility.yul\":9028:9039   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9021:9060   */\n      mstore\n        /* \"#utility.yul\":8993:8995   */\n      0x20\n        /* \"#utility.yul\":8986:8996   */\n      add\n        /* \"#utility.yul\":8957:9070   */\n      jump(tag_378)\n    tag_380:\n      pop\n      pop\n        /* \"#utility.yul\":9104:9105   */\n      0x00\n        /* \"#utility.yul\":9086:9102   */\n      swap2\n      add\n        /* \"#utility.yul\":9079:9106   */\n      mstore\n        /* \"#utility.yul\":8862:9112   */\n      jump\t// out\n        /* \"#utility.yul\":9117:9404   */\n    tag_138:\n        /* \"#utility.yul\":9246:9249   */\n      0x00\n        /* \"#utility.yul\":9284:9290   */\n      dup3\n        /* \"#utility.yul\":9278:9291   */\n      mload\n        /* \"#utility.yul\":9300:9366   */\n      tag_382\n        /* \"#utility.yul\":9359:9365   */\n      dup2\n        /* \"#utility.yul\":9354:9357   */\n      dup5\n        /* \"#utility.yul\":9347:9351   */\n      0x20\n        /* \"#utility.yul\":9339:9345   */\n      dup8\n        /* \"#utility.yul\":9335:9352   */\n      add\n        /* \"#utility.yul\":9300:9366   */\n      tag_318\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":9382:9398   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":9117:9404   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9409:9588   */\n    tag_319:\n        /* \"#utility.yul\":9487:9500   */\n      dup1\n      mload\n        /* \"#utility.yul\":9540:9562   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":9529:9563   */\n      dup2\n      and\n        /* \"#utility.yul\":9519:9564   */\n      dup2\n      eq\n        /* \"#utility.yul\":9509:9582   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":9578:9579   */\n      0x00\n        /* \"#utility.yul\":9575:9576   */\n      0x00\n        /* \"#utility.yul\":9568:9580   */\n      revert\n        /* \"#utility.yul\":9509:9582   */\n    tag_384:\n        /* \"#utility.yul\":9409:9588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9593:10164   */\n    tag_145:\n        /* \"#utility.yul\":9696:9702   */\n      0x00\n        /* \"#utility.yul\":9704:9710   */\n      0x00\n        /* \"#utility.yul\":9712:9718   */\n      0x00\n        /* \"#utility.yul\":9720:9726   */\n      0x00\n        /* \"#utility.yul\":9728:9734   */\n      0x00\n        /* \"#utility.yul\":9781:9784   */\n      0xa0\n        /* \"#utility.yul\":9769:9778   */\n      dup7\n        /* \"#utility.yul\":9760:9767   */\n      dup9\n        /* \"#utility.yul\":9756:9779   */\n      sub\n        /* \"#utility.yul\":9752:9785   */\n      slt\n        /* \"#utility.yul\":9749:9802   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":9798:9799   */\n      0x00\n        /* \"#utility.yul\":9795:9796   */\n      0x00\n        /* \"#utility.yul\":9788:9800   */\n      revert\n        /* \"#utility.yul\":9749:9802   */\n    tag_386:\n        /* \"#utility.yul\":9821:9860   */\n      tag_387\n        /* \"#utility.yul\":9850:9859   */\n      dup7\n        /* \"#utility.yul\":9821:9860   */\n      tag_319\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9900:9902   */\n      0x20\n        /* \"#utility.yul\":9885:9903   */\n      dup8\n      add\n        /* \"#utility.yul\":9879:9904   */\n      mload\n        /* \"#utility.yul\":9966:9968   */\n      0x40\n        /* \"#utility.yul\":9951:9969   */\n      dup9\n      add\n        /* \"#utility.yul\":9945:9970   */\n      mload\n        /* \"#utility.yul\":10060:10062   */\n      0x60\n        /* \"#utility.yul\":10045:10063   */\n      dup10\n      add\n        /* \"#utility.yul\":10039:10064   */\n      mload\n        /* \"#utility.yul\":9811:9860   */\n      swap3\n      swap8\n      pop\n        /* \"#utility.yul\":9879:9904   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":9945:9970   */\n      swap4\n      pop\n        /* \"#utility.yul\":10039:10064   */\n      swap2\n      pop\n        /* \"#utility.yul\":10109:10158   */\n      tag_388\n        /* \"#utility.yul\":10153:10156   */\n      0x80\n        /* \"#utility.yul\":10138:10157   */\n      dup8\n      add\n        /* \"#utility.yul\":10109:10158   */\n      tag_319\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":10099:10158   */\n      swap1\n      pop\n        /* \"#utility.yul\":9593:10164   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10169:10416   */\n    tag_155:\n        /* \"#utility.yul\":10237:10243   */\n      0x00\n        /* \"#utility.yul\":10290:10292   */\n      0x20\n        /* \"#utility.yul\":10278:10287   */\n      dup3\n        /* \"#utility.yul\":10269:10276   */\n      dup5\n        /* \"#utility.yul\":10265:10288   */\n      sub\n        /* \"#utility.yul\":10261:10293   */\n      slt\n        /* \"#utility.yul\":10258:10310   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":10306:10307   */\n      0x00\n        /* \"#utility.yul\":10303:10304   */\n      0x00\n        /* \"#utility.yul\":10296:10308   */\n      revert\n        /* \"#utility.yul\":10258:10310   */\n    tag_390:\n        /* \"#utility.yul\":10338:10347   */\n      dup2\n        /* \"#utility.yul\":10332:10348   */\n      mload\n        /* \"#utility.yul\":10357:10386   */\n      tag_212\n        /* \"#utility.yul\":10380:10385   */\n      dup2\n        /* \"#utility.yul\":10357:10386   */\n      tag_315\n      jump\t// in\n        /* \"#utility.yul\":10421:10651   */\n    tag_160:\n        /* \"#utility.yul\":10491:10497   */\n      0x00\n        /* \"#utility.yul\":10544:10546   */\n      0x20\n        /* \"#utility.yul\":10532:10541   */\n      dup3\n        /* \"#utility.yul\":10523:10530   */\n      dup5\n        /* \"#utility.yul\":10519:10542   */\n      sub\n        /* \"#utility.yul\":10515:10547   */\n      slt\n        /* \"#utility.yul\":10512:10564   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":10560:10561   */\n      0x00\n        /* \"#utility.yul\":10557:10558   */\n      0x00\n        /* \"#utility.yul\":10550:10562   */\n      revert\n        /* \"#utility.yul\":10512:10564   */\n    tag_393:\n      pop\n        /* \"#utility.yul\":10605:10621   */\n      mload\n      swap2\n        /* \"#utility.yul\":10421:10651   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12003:12399   */\n    tag_189:\n        /* \"#utility.yul\":12152:12154   */\n      0x20\n        /* \"#utility.yul\":12141:12150   */\n      dup2\n        /* \"#utility.yul\":12134:12155   */\n      mstore\n        /* \"#utility.yul\":12115:12119   */\n      0x00\n        /* \"#utility.yul\":12184:12190   */\n      dup3\n        /* \"#utility.yul\":12178:12191   */\n      mload\n        /* \"#utility.yul\":12227:12233   */\n      dup1\n        /* \"#utility.yul\":12222:12224   */\n      0x20\n        /* \"#utility.yul\":12211:12220   */\n      dup5\n        /* \"#utility.yul\":12207:12225   */\n      add\n        /* \"#utility.yul\":12200:12234   */\n      mstore\n        /* \"#utility.yul\":12243:12322   */\n      tag_399\n        /* \"#utility.yul\":12315:12321   */\n      dup2\n        /* \"#utility.yul\":12310:12312   */\n      0x40\n        /* \"#utility.yul\":12299:12308   */\n      dup6\n        /* \"#utility.yul\":12295:12313   */\n      add\n        /* \"#utility.yul\":12290:12292   */\n      0x20\n        /* \"#utility.yul\":12282:12288   */\n      dup8\n        /* \"#utility.yul\":12278:12293   */\n      add\n        /* \"#utility.yul\":12243:12322   */\n      tag_318\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12383:12385   */\n      0x1f\n        /* \"#utility.yul\":12362:12377   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":12358:12387   */\n      and\n        /* \"#utility.yul\":12343:12388   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":12390:12392   */\n      0x40\n        /* \"#utility.yul\":12339:12393   */\n      add\n      swap3\n        /* \"#utility.yul\":12003:12399   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12404:12550   */\n    tag_320:\n        /* \"#utility.yul\":12491:12504   */\n      dup1\n      mload\n        /* \"#utility.yul\":12513:12544   */\n      tag_384\n        /* \"#utility.yul\":12491:12504   */\n      dup2\n        /* \"#utility.yul\":12513:12544   */\n      tag_314\n      jump\t// in\n        /* \"#utility.yul\":12555:12720   */\n    tag_321:\n        /* \"#utility.yul\":12633:12646   */\n      dup1\n      mload\n        /* \"#utility.yul\":12686:12694   */\n      0xffffff\n        /* \"#utility.yul\":12675:12695   */\n      dup2\n      and\n        /* \"#utility.yul\":12665:12696   */\n      dup2\n      eq\n        /* \"#utility.yul\":12655:12714   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":12710:12711   */\n      0x00\n        /* \"#utility.yul\":12707:12708   */\n      0x00\n        /* \"#utility.yul\":12700:12712   */\n      revert\n        /* \"#utility.yul\":12725:12889   */\n    tag_322:\n        /* \"#utility.yul\":12802:12815   */\n      dup1\n      mload\n        /* \"#utility.yul\":12855:12856   */\n      0x02\n        /* \"#utility.yul\":12844:12864   */\n      dup2\n      swap1\n      signextend\n        /* \"#utility.yul\":12834:12865   */\n      dup2\n      eq\n        /* \"#utility.yul\":12824:12883   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":12879:12880   */\n      0x00\n        /* \"#utility.yul\":12876:12877   */\n      0x00\n        /* \"#utility.yul\":12869:12881   */\n      revert\n        /* \"#utility.yul\":12894:13086   */\n    tag_323:\n        /* \"#utility.yul\":12973:12986   */\n      dup1\n      mload\n      sub(shl(0x80, 0x01), 0x01)\n        /* \"#utility.yul\":13015:13061   */\n      dup2\n      and\n        /* \"#utility.yul\":13005:13062   */\n      dup2\n      eq\n        /* \"#utility.yul\":12995:13080   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":13076:13077   */\n      0x00\n        /* \"#utility.yul\":13073:13074   */\n      0x00\n        /* \"#utility.yul\":13066:13078   */\n      revert\n        /* \"#utility.yul\":13091:14429   */\n    tag_191:\n        /* \"#utility.yul\":13278:13284   */\n      0x00\n        /* \"#utility.yul\":13286:13292   */\n      0x00\n        /* \"#utility.yul\":13294:13300   */\n      0x00\n        /* \"#utility.yul\":13302:13308   */\n      0x00\n        /* \"#utility.yul\":13310:13316   */\n      0x00\n        /* \"#utility.yul\":13318:13324   */\n      0x00\n        /* \"#utility.yul\":13326:13332   */\n      0x00\n        /* \"#utility.yul\":13334:13340   */\n      0x00\n        /* \"#utility.yul\":13342:13348   */\n      0x00\n        /* \"#utility.yul\":13350:13356   */\n      0x00\n        /* \"#utility.yul\":13358:13365   */\n      0x00\n        /* \"#utility.yul\":13367:13374   */\n      0x00\n        /* \"#utility.yul\":13421:13424   */\n      0x0180\n        /* \"#utility.yul\":13409:13418   */\n      dup14\n        /* \"#utility.yul\":13400:13407   */\n      dup16\n        /* \"#utility.yul\":13396:13419   */\n      sub\n        /* \"#utility.yul\":13392:13425   */\n      slt\n        /* \"#utility.yul\":13389:13442   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":13438:13439   */\n      0x00\n        /* \"#utility.yul\":13435:13436   */\n      0x00\n        /* \"#utility.yul\":13428:13440   */\n      revert\n        /* \"#utility.yul\":13389:13442   */\n    tag_409:\n        /* \"#utility.yul\":13470:13479   */\n      dup13\n        /* \"#utility.yul\":13464:13480   */\n      mload\n        /* \"#utility.yul\":13520:13546   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":13513:13518   */\n      dup2\n        /* \"#utility.yul\":13509:13547   */\n      and\n        /* \"#utility.yul\":13502:13507   */\n      dup2\n        /* \"#utility.yul\":13499:13548   */\n      eq\n        /* \"#utility.yul\":13489:13566   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":13562:13563   */\n      0x00\n        /* \"#utility.yul\":13559:13560   */\n      0x00\n        /* \"#utility.yul\":13552:13564   */\n      revert\n        /* \"#utility.yul\":13489:13566   */\n    tag_410:\n        /* \"#utility.yul\":13585:13590   */\n      swap12\n      pop\n        /* \"#utility.yul\":13609:13666   */\n      tag_411\n        /* \"#utility.yul\":13662:13664   */\n      0x20\n        /* \"#utility.yul\":13647:13665   */\n      dup15\n      add\n        /* \"#utility.yul\":13609:13666   */\n      tag_320\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":13599:13666   */\n      swap11\n      pop\n        /* \"#utility.yul\":13685:13742   */\n      tag_412\n        /* \"#utility.yul\":13738:13740   */\n      0x40\n        /* \"#utility.yul\":13727:13736   */\n      dup15\n        /* \"#utility.yul\":13723:13741   */\n      add\n        /* \"#utility.yul\":13685:13742   */\n      tag_320\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":13675:13742   */\n      swap10\n      pop\n        /* \"#utility.yul\":13761:13818   */\n      tag_413\n        /* \"#utility.yul\":13814:13816   */\n      0x60\n        /* \"#utility.yul\":13803:13812   */\n      dup15\n        /* \"#utility.yul\":13799:13817   */\n      add\n        /* \"#utility.yul\":13761:13818   */\n      tag_320\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":13751:13818   */\n      swap9\n      pop\n        /* \"#utility.yul\":13837:13886   */\n      tag_414\n        /* \"#utility.yul\":13881:13884   */\n      0x80\n        /* \"#utility.yul\":13870:13879   */\n      dup15\n        /* \"#utility.yul\":13866:13885   */\n      add\n        /* \"#utility.yul\":13837:13886   */\n      tag_321\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":13827:13886   */\n      swap8\n      pop\n        /* \"#utility.yul\":13905:13953   */\n      tag_415\n        /* \"#utility.yul\":13948:13951   */\n      0xa0\n        /* \"#utility.yul\":13937:13946   */\n      dup15\n        /* \"#utility.yul\":13933:13952   */\n      add\n        /* \"#utility.yul\":13905:13953   */\n      tag_322\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13895:13953   */\n      swap7\n      pop\n        /* \"#utility.yul\":13972:14020   */\n      tag_416\n        /* \"#utility.yul\":14015:14018   */\n      0xc0\n        /* \"#utility.yul\":14004:14013   */\n      dup15\n        /* \"#utility.yul\":14000:14019   */\n      add\n        /* \"#utility.yul\":13972:14020   */\n      tag_322\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":13962:14020   */\n      swap6\n      pop\n        /* \"#utility.yul\":14039:14089   */\n      tag_417\n        /* \"#utility.yul\":14084:14087   */\n      0xe0\n        /* \"#utility.yul\":14073:14082   */\n      dup15\n        /* \"#utility.yul\":14069:14088   */\n      add\n        /* \"#utility.yul\":14039:14089   */\n      tag_323\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":14155:14158   */\n      0x0100\n        /* \"#utility.yul\":14140:14159   */\n      dup15\n      add\n        /* \"#utility.yul\":14134:14160   */\n      mload\n        /* \"#utility.yul\":14252:14255   */\n      0x0120\n        /* \"#utility.yul\":14237:14256   */\n      dup16\n      add\n        /* \"#utility.yul\":14231:14257   */\n      mload\n        /* \"#utility.yul\":14029:14089   */\n      swap2\n      swap7\n      pop\n        /* \"#utility.yul\":14134:14160   */\n      swap5\n      pop\n        /* \"#utility.yul\":14231:14257   */\n      swap3\n      pop\n        /* \"#utility.yul\":14303:14353   */\n      tag_418\n        /* \"#utility.yul\":14348:14351   */\n      0x0140\n        /* \"#utility.yul\":14333:14352   */\n      dup15\n      add\n        /* \"#utility.yul\":14303:14353   */\n      tag_323\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":14292:14353   */\n      swap2\n      pop\n        /* \"#utility.yul\":14373:14423   */\n      tag_419\n        /* \"#utility.yul\":14418:14421   */\n      0x0160\n        /* \"#utility.yul\":14407:14416   */\n      dup15\n        /* \"#utility.yul\":14403:14422   */\n      add\n        /* \"#utility.yul\":14373:14423   */\n      tag_323\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":14362:14423   */\n      swap1\n      pop\n        /* \"#utility.yul\":13091:14429   */\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      pop\n      swap3\n      swap6\n      swap9\n      swap12\n      jump\t// out\n        /* \"#utility.yul\":14790:14953   */\n    tag_324:\n        /* \"#utility.yul\":14868:14881   */\n      dup1\n      mload\n        /* \"#utility.yul\":14921:14927   */\n      0xffff\n        /* \"#utility.yul\":14910:14928   */\n      dup2\n      and\n        /* \"#utility.yul\":14900:14929   */\n      dup2\n      eq\n        /* \"#utility.yul\":14890:14947   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":14943:14944   */\n      0x00\n        /* \"#utility.yul\":14940:14941   */\n      0x00\n        /* \"#utility.yul\":14933:14945   */\n      revert\n        /* \"#utility.yul\":14958:15801   */\n    tag_204:\n        /* \"#utility.yul\":15072:15078   */\n      0x00\n        /* \"#utility.yul\":15080:15086   */\n      0x00\n        /* \"#utility.yul\":15088:15094   */\n      0x00\n        /* \"#utility.yul\":15096:15102   */\n      0x00\n        /* \"#utility.yul\":15104:15110   */\n      0x00\n        /* \"#utility.yul\":15112:15118   */\n      0x00\n        /* \"#utility.yul\":15120:15126   */\n      0x00\n        /* \"#utility.yul\":15173:15176   */\n      0xe0\n        /* \"#utility.yul\":15161:15170   */\n      dup9\n        /* \"#utility.yul\":15152:15159   */\n      dup11\n        /* \"#utility.yul\":15148:15171   */\n      sub\n        /* \"#utility.yul\":15144:15177   */\n      slt\n        /* \"#utility.yul\":15141:15194   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":15190:15191   */\n      0x00\n        /* \"#utility.yul\":15187:15188   */\n      0x00\n        /* \"#utility.yul\":15180:15192   */\n      revert\n        /* \"#utility.yul\":15141:15194   */\n    tag_424:\n        /* \"#utility.yul\":15222:15231   */\n      dup8\n        /* \"#utility.yul\":15216:15232   */\n      mload\n        /* \"#utility.yul\":15241:15272   */\n      tag_425\n        /* \"#utility.yul\":15266:15271   */\n      dup2\n        /* \"#utility.yul\":15241:15272   */\n      tag_314\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":15291:15296   */\n      swap7\n      pop\n        /* \"#utility.yul\":15315:15362   */\n      tag_426\n        /* \"#utility.yul\":15358:15360   */\n      0x20\n        /* \"#utility.yul\":15343:15361   */\n      dup10\n      add\n        /* \"#utility.yul\":15315:15362   */\n      tag_322\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":15305:15362   */\n      swap6\n      pop\n        /* \"#utility.yul\":15381:15429   */\n      tag_427\n        /* \"#utility.yul\":15425:15427   */\n      0x40\n        /* \"#utility.yul\":15414:15423   */\n      dup10\n        /* \"#utility.yul\":15410:15428   */\n      add\n        /* \"#utility.yul\":15381:15429   */\n      tag_324\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":15371:15429   */\n      swap5\n      pop\n        /* \"#utility.yul\":15448:15496   */\n      tag_428\n        /* \"#utility.yul\":15492:15494   */\n      0x60\n        /* \"#utility.yul\":15481:15490   */\n      dup10\n        /* \"#utility.yul\":15477:15495   */\n      add\n        /* \"#utility.yul\":15448:15496   */\n      tag_324\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":15438:15496   */\n      swap4\n      pop\n        /* \"#utility.yul\":15515:15564   */\n      tag_429\n        /* \"#utility.yul\":15559:15562   */\n      0x80\n        /* \"#utility.yul\":15548:15557   */\n      dup10\n        /* \"#utility.yul\":15544:15563   */\n      add\n        /* \"#utility.yul\":15515:15564   */\n      tag_324\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15505:15564   */\n      swap3\n      pop\n        /* \"#utility.yul\":15609:15612   */\n      0xa0\n        /* \"#utility.yul\":15598:15607   */\n      dup9\n        /* \"#utility.yul\":15594:15613   */\n      add\n        /* \"#utility.yul\":15588:15614   */\n      mload\n        /* \"#utility.yul\":15623:15654   */\n      tag_430\n        /* \"#utility.yul\":15646:15653   */\n      dup2\n        /* \"#utility.yul\":15623:15654   */\n      tag_315\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15725:15728   */\n      0xc0\n        /* \"#utility.yul\":15710:15729   */\n      dup10\n      add\n        /* \"#utility.yul\":15704:15730   */\n      mload\n        /* \"#utility.yul\":15673:15680   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":15739:15769   */\n      tag_431\n        /* \"#utility.yul\":15704:15730   */\n      dup2\n        /* \"#utility.yul\":15739:15769   */\n      tag_316\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":15788:15795   */\n      dup1\n        /* \"#utility.yul\":15778:15795   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14958:15801   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15806:15933   */\n    tag_325:\n        /* \"#utility.yul\":15867:15877   */\n      0x4e487b71\n        /* \"#utility.yul\":15862:15865   */\n      0xe0\n        /* \"#utility.yul\":15858:15878   */\n      shl\n        /* \"#utility.yul\":15855:15856   */\n      0x00\n        /* \"#utility.yul\":15848:15879   */\n      mstore\n        /* \"#utility.yul\":15898:15902   */\n      0x41\n        /* \"#utility.yul\":15895:15896   */\n      0x04\n        /* \"#utility.yul\":15888:15903   */\n      mstore\n        /* \"#utility.yul\":15922:15926   */\n      0x24\n        /* \"#utility.yul\":15919:15920   */\n      0x00\n        /* \"#utility.yul\":15912:15927   */\n      revert\n        /* \"#utility.yul\":15938:16854   */\n    tag_221:\n        /* \"#utility.yul\":16018:16024   */\n      0x00\n        /* \"#utility.yul\":16071:16073   */\n      0x20\n        /* \"#utility.yul\":16059:16068   */\n      dup3\n        /* \"#utility.yul\":16050:16057   */\n      dup5\n        /* \"#utility.yul\":16046:16069   */\n      sub\n        /* \"#utility.yul\":16042:16074   */\n      slt\n        /* \"#utility.yul\":16039:16091   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":16087:16088   */\n      0x00\n        /* \"#utility.yul\":16084:16085   */\n      0x00\n        /* \"#utility.yul\":16077:16089   */\n      revert\n        /* \"#utility.yul\":16039:16091   */\n    tag_434:\n        /* \"#utility.yul\":16120:16129   */\n      dup2\n        /* \"#utility.yul\":16114:16130   */\n      mload\n        /* \"#utility.yul\":16153:16171   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16145:16151   */\n      dup2\n        /* \"#utility.yul\":16142:16172   */\n      gt\n        /* \"#utility.yul\":16139:16189   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":16185:16186   */\n      0x00\n        /* \"#utility.yul\":16182:16183   */\n      0x00\n        /* \"#utility.yul\":16175:16187   */\n      revert\n        /* \"#utility.yul\":16139:16189   */\n    tag_435:\n        /* \"#utility.yul\":16208:16230   */\n      dup3\n      add\n        /* \"#utility.yul\":16261:16265   */\n      0x1f\n        /* \"#utility.yul\":16253:16266   */\n      dup2\n      add\n        /* \"#utility.yul\":16249:16276   */\n      dup5\n      sgt\n        /* \"#utility.yul\":16239:16294   */\n      tag_436\n      jumpi\n        /* \"#utility.yul\":16290:16291   */\n      0x00\n        /* \"#utility.yul\":16287:16288   */\n      0x00\n        /* \"#utility.yul\":16280:16292   */\n      revert\n        /* \"#utility.yul\":16239:16294   */\n    tag_436:\n        /* \"#utility.yul\":16323:16325   */\n      dup1\n        /* \"#utility.yul\":16317:16326   */\n      mload\n        /* \"#utility.yul\":16349:16367   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16341:16347   */\n      dup2\n        /* \"#utility.yul\":16338:16368   */\n      gt\n        /* \"#utility.yul\":16335:16391   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":16371:16389   */\n      tag_438\n      tag_325\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":16420:16422   */\n      0x40\n        /* \"#utility.yul\":16414:16423   */\n      mload\n        /* \"#utility.yul\":16512:16514   */\n      0x1f\n        /* \"#utility.yul\":16474:16491   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":16470:16501   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":16503:16505   */\n      0x3f\n        /* \"#utility.yul\":16466:16506   */\n      add\n        /* \"#utility.yul\":16462:16516   */\n      and\n        /* \"#utility.yul\":16450:16517   */\n      dup2\n      add\n        /* \"#utility.yul\":16547:16565   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16532:16566   */\n      dup2\n      gt\n        /* \"#utility.yul\":16568:16590   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":16529:16591   */\n      or\n        /* \"#utility.yul\":16526:16614   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":16594:16612   */\n      tag_440\n      tag_325\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":16630:16632   */\n      0x40\n        /* \"#utility.yul\":16623:16645   */\n      mstore\n        /* \"#utility.yul\":16654:16676   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":16695:16710   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":16712:16714   */\n      0x20\n        /* \"#utility.yul\":16691:16715   */\n      add\n        /* \"#utility.yul\":16688:16725   */\n      dup7\n      lt\n        /* \"#utility.yul\":16685:16742   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":16738:16739   */\n      0x00\n        /* \"#utility.yul\":16735:16736   */\n      0x00\n        /* \"#utility.yul\":16728:16740   */\n      revert\n        /* \"#utility.yul\":16685:16742   */\n    tag_441:\n        /* \"#utility.yul\":16751:16823   */\n      tag_442\n        /* \"#utility.yul\":16816:16822   */\n      dup3\n        /* \"#utility.yul\":16811:16813   */\n      0x20\n        /* \"#utility.yul\":16803:16809   */\n      dup4\n        /* \"#utility.yul\":16799:16814   */\n      add\n        /* \"#utility.yul\":16794:16796   */\n      0x20\n        /* \"#utility.yul\":16790:16792   */\n      dup7\n        /* \"#utility.yul\":16786:16797   */\n      add\n        /* \"#utility.yul\":16751:16823   */\n      tag_318\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":16842:16848   */\n      swap6\n        /* \"#utility.yul\":15938:16854   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17205:17389   */\n    tag_230:\n        /* \"#utility.yul\":17239:17242   */\n      0x00\n        /* \"#utility.yul\":17286:17291   */\n      dup2\n        /* \"#utility.yul\":17283:17284   */\n      0x02\n        /* \"#utility.yul\":17272:17292   */\n      signextend\n        /* \"#utility.yul\":17320:17327   */\n      0x7fffff\n        /* \"#utility.yul\":17316:17328   */\n      not\n        /* \"#utility.yul\":17307:17314   */\n      dup2\n        /* \"#utility.yul\":17304:17329   */\n      sub\n        /* \"#utility.yul\":17301:17352   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":17332:17350   */\n      tag_446\n      tag_317\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":17372:17373   */\n      0x00\n        /* \"#utility.yul\":17368:17383   */\n      sub\n      swap3\n        /* \"#utility.yul\":17205:17389   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17394:17562   */\n    tag_233:\n        /* \"#utility.yul\":17467:17476   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":17498:17507   */\n      dup2\n      iszero\n        /* \"#utility.yul\":17515:17530   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":17509:17531   */\n      dup5\n      eq\n        /* \"#utility.yul\":17495:17532   */\n      or\n        /* \"#utility.yul\":17485:17556   */\n      tag_220\n      jumpi\n        /* \"#utility.yul\":17536:17554   */\n      tag_220\n      tag_317\n      jump\t// in\n        /* \"#utility.yul\":18338:18713   */\n    tag_326:\n        /* \"#utility.yul\":18426:18427   */\n      0x01\n        /* \"#utility.yul\":18444:18449   */\n      dup2\n        /* \"#utility.yul\":18458:18707   */\n    tag_453:\n        /* \"#utility.yul\":18479:18480   */\n      0x01\n        /* \"#utility.yul\":18469:18477   */\n      dup5\n        /* \"#utility.yul\":18466:18481   */\n      gt\n        /* \"#utility.yul\":18458:18707   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":18529:18533   */\n      dup1\n        /* \"#utility.yul\":18524:18527   */\n      dup6\n        /* \"#utility.yul\":18520:18534   */\n      div\n        /* \"#utility.yul\":18514:18518   */\n      dup2\n        /* \"#utility.yul\":18511:18535   */\n      gt\n        /* \"#utility.yul\":18508:18558   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":18538:18556   */\n      tag_457\n      tag_317\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":18588:18589   */\n      0x01\n        /* \"#utility.yul\":18578:18586   */\n      dup5\n        /* \"#utility.yul\":18574:18590   */\n      and\n        /* \"#utility.yul\":18571:18620   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":18602:18618   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":18571:18620   */\n    tag_458:\n        /* \"#utility.yul\":18685:18686   */\n      0x01\n        /* \"#utility.yul\":18681:18697   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":18641:18656   */\n      dup1\n      mul\n        /* \"#utility.yul\":18458:18707   */\n      jump(tag_453)\n    tag_455:\n        /* \"#utility.yul\":18338:18713   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18718:19620   */\n    tag_327:\n        /* \"#utility.yul\":18767:18772   */\n      0x00\n        /* \"#utility.yul\":18797:18805   */\n      dup3\n        /* \"#utility.yul\":18787:18867   */\n      tag_460\n      jumpi\n      pop\n        /* \"#utility.yul\":18838:18839   */\n      0x01\n        /* \"#utility.yul\":18852:18857   */\n      jump(tag_220)\n        /* \"#utility.yul\":18787:18867   */\n    tag_460:\n        /* \"#utility.yul\":18886:18890   */\n      dup2\n        /* \"#utility.yul\":18876:18952   */\n      tag_461\n      jumpi\n      pop\n        /* \"#utility.yul\":18923:18924   */\n      0x00\n        /* \"#utility.yul\":18937:18942   */\n      jump(tag_220)\n        /* \"#utility.yul\":18876:18952   */\n    tag_461:\n        /* \"#utility.yul\":18968:18972   */\n      dup2\n        /* \"#utility.yul\":18986:18987   */\n      0x01\n        /* \"#utility.yul\":18981:19040   */\n      dup2\n      eq\n      tag_463\n      jumpi\n        /* \"#utility.yul\":19054:19055   */\n      0x02\n        /* \"#utility.yul\":19049:19223   */\n      dup2\n      eq\n      tag_464\n      jumpi\n        /* \"#utility.yul\":18961:19223   */\n      jump(tag_462)\n        /* \"#utility.yul\":18981:19040   */\n    tag_463:\n        /* \"#utility.yul\":19011:19012   */\n      0x01\n        /* \"#utility.yul\":19002:19012   */\n      swap2\n      pop\n        /* \"#utility.yul\":19025:19030   */\n      pop\n      jump(tag_220)\n        /* \"#utility.yul\":19049:19223   */\n    tag_464:\n        /* \"#utility.yul\":19086:19089   */\n      0xff\n        /* \"#utility.yul\":19076:19084   */\n      dup5\n        /* \"#utility.yul\":19073:19090   */\n      gt\n        /* \"#utility.yul\":19070:19113   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":19093:19111   */\n      tag_466\n      tag_317\n      jump\t// in\n    tag_466:\n      pop\n      pop\n        /* \"#utility.yul\":19149:19150   */\n      0x01\n        /* \"#utility.yul\":19135:19151   */\n      dup3\n      shl\n        /* \"#utility.yul\":19208:19213   */\n      jump(tag_220)\n        /* \"#utility.yul\":18961:19223   */\n    tag_462:\n      pop\n        /* \"#utility.yul\":19307:19309   */\n      0x20\n        /* \"#utility.yul\":19297:19305   */\n      dup4\n        /* \"#utility.yul\":19294:19310   */\n      lt\n        /* \"#utility.yul\":19288:19291   */\n      0x0133\n        /* \"#utility.yul\":19282:19286   */\n      dup4\n        /* \"#utility.yul\":19279:19292   */\n      lt\n        /* \"#utility.yul\":19275:19311   */\n      and\n        /* \"#utility.yul\":19269:19271   */\n      0x4e\n        /* \"#utility.yul\":19259:19267   */\n      dup5\n        /* \"#utility.yul\":19256:19272   */\n      lt\n        /* \"#utility.yul\":19251:19253   */\n      0x0b\n        /* \"#utility.yul\":19245:19249   */\n      dup5\n        /* \"#utility.yul\":19242:19254   */\n      lt\n        /* \"#utility.yul\":19238:19273   */\n      and\n        /* \"#utility.yul\":19235:19312   */\n      or\n        /* \"#utility.yul\":19232:19435   */\n      iszero\n      tag_467\n      jumpi\n      pop\n        /* \"#utility.yul\":19344:19363   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":19420:19425   */\n      jump(tag_220)\n        /* \"#utility.yul\":19232:19435   */\n    tag_467:\n        /* \"#utility.yul\":19467:19509   */\n      tag_468\n      not(0x00)\n        /* \"#utility.yul\":19492:19500   */\n      dup5\n        /* \"#utility.yul\":19486:19490   */\n      dup5\n        /* \"#utility.yul\":19467:19509   */\n      tag_326\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":19545:19551   */\n      dup1\n        /* \"#utility.yul\":19541:19542   */\n      0x00\n        /* \"#utility.yul\":19537:19543   */\n      not\n        /* \"#utility.yul\":19533:19552   */\n      div\n        /* \"#utility.yul\":19524:19531   */\n      dup3\n        /* \"#utility.yul\":19521:19553   */\n      gt\n        /* \"#utility.yul\":19518:19576   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":19556:19574   */\n      tag_470\n      tag_317\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":19594:19614   */\n      mul\n      swap4\n        /* \"#utility.yul\":18718:19620   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19625:19765   */\n    tag_297:\n        /* \"#utility.yul\":19683:19688   */\n      0x00\n        /* \"#utility.yul\":19712:19759   */\n      tag_212\n        /* \"#utility.yul\":19753:19757   */\n      0xff\n        /* \"#utility.yul\":19743:19751   */\n      dup5\n        /* \"#utility.yul\":19739:19758   */\n      and\n        /* \"#utility.yul\":19733:19737   */\n      dup4\n        /* \"#utility.yul\":19712:19759   */\n      tag_327\n      jump\t// in\n    stop\n    data_3e1e6533146503ddcd57727c5002d69321677d0539df318ad90f03963b3c334f 4f7261636c654d616e616765723a2063616c6c20726576657274656420772f6f206d7367\n\n    auxdata: 0xa26469706673582212203cf387091b36c8ce987cdee3fb289ea4d9e0d4e66f345e8a87ab8f4cec6f8de464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1656": {
									"entryPoint": null,
									"id": 1656,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_740": {
									"entryPoint": null,
									"id": 740,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_2087": {
									"entryPoint": null,
									"id": 2087,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1744": {
									"entryPoint": 160,
									"id": 1744,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:663:8",
										"nodeType": "YulBlock",
										"src": "0:663:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:8",
													"nodeType": "YulBlock",
													"src": "95:209:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:8",
																"nodeType": "YulBlock",
																"src": "141:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:8",
																					"nodeType": "YulLiteral",
																					"src": "150:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:8",
																					"nodeType": "YulLiteral",
																					"src": "153:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:8"
																			},
																			"nativeSrc": "143:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:8"
																		},
																		"nativeSrc": "143:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:8"
																		},
																		"nativeSrc": "112:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "137:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:8"
																},
																"nativeSrc": "108:32:8",
																"nodeType": "YulFunctionCall",
																"src": "108:32:8"
															},
															"nativeSrc": "105:52:8",
															"nodeType": "YulIf",
															"src": "105:52:8"
														},
														{
															"nativeSrc": "166:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:8"
																},
																"nativeSrc": "179:16:8",
																"nodeType": "YulFunctionCall",
																"src": "179:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:8",
																	"nodeType": "YulTypedName",
																	"src": "170:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:8",
																"nodeType": "YulBlock",
																"src": "258:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:8",
																					"nodeType": "YulLiteral",
																					"src": "267:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:8",
																					"nodeType": "YulLiteral",
																					"src": "270:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:8"
																			},
																			"nativeSrc": "260:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:8"
																		},
																		"nativeSrc": "260:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:8",
																										"nodeType": "YulLiteral",
																										"src": "243:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:8",
																										"nodeType": "YulLiteral",
																										"src": "248:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:8"
																								},
																								"nativeSrc": "239:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:8",
																								"nodeType": "YulLiteral",
																								"src": "252:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:8"
																						},
																						"nativeSrc": "235:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:8"
																				},
																				"nativeSrc": "224:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:8"
																		},
																		"nativeSrc": "214:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:8"
																},
																"nativeSrc": "207:50:8",
																"nodeType": "YulFunctionCall",
																"src": "207:50:8"
															},
															"nativeSrc": "204:70:8",
															"nodeType": "YulIf",
															"src": "204:70:8"
														},
														{
															"nativeSrc": "283:15:8",
															"nodeType": "YulAssignment",
															"src": "283:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:8",
																"nodeType": "YulIdentifier",
																"src": "293:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:8",
														"nodeType": "YulTypedName",
														"src": "61:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:8",
														"nodeType": "YulTypedName",
														"src": "72:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:8",
														"nodeType": "YulTypedName",
														"src": "84:6:8",
														"type": ""
													}
												],
												"src": "14:290:8"
											},
											{
												"body": {
													"nativeSrc": "483:178:8",
													"nodeType": "YulBlock",
													"src": "483:178:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "500:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:2:8",
																		"nodeType": "YulLiteral",
																		"src": "511:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "493:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:8"
																},
																"nativeSrc": "493:21:8",
																"nodeType": "YulFunctionCall",
																"src": "493:21:8"
															},
															"nativeSrc": "493:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "493:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "534:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "545:2:8",
																				"nodeType": "YulLiteral",
																				"src": "545:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "530:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:8"
																		},
																		"nativeSrc": "530:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "550:2:8",
																		"nodeType": "YulLiteral",
																		"src": "550:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "523:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:8"
																},
																"nativeSrc": "523:30:8",
																"nodeType": "YulFunctionCall",
																"src": "523:30:8"
															},
															"nativeSrc": "523:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "523:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "573:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "584:2:8",
																				"nodeType": "YulLiteral",
																				"src": "584:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "569:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:8"
																		},
																		"nativeSrc": "569:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c6964206f776e6572",
																		"kind": "string",
																		"nativeSrc": "589:30:8",
																		"nodeType": "YulLiteral",
																		"src": "589:30:8",
																		"type": "",
																		"value": "OracleManager: invalid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "562:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:8"
																},
																"nativeSrc": "562:58:8",
																"nodeType": "YulFunctionCall",
																"src": "562:58:8"
															},
															"nativeSrc": "562:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "562:58:8"
														},
														{
															"nativeSrc": "629:26:8",
															"nodeType": "YulAssignment",
															"src": "629:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "641:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "641:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "652:2:8",
																		"nodeType": "YulLiteral",
																		"src": "652:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "637:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "637:3:8"
																},
																"nativeSrc": "637:18:8",
																"nodeType": "YulFunctionCall",
																"src": "637:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "629:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "629:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "309:352:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "460:9:8",
														"nodeType": "YulTypedName",
														"src": "460:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "474:4:8",
														"nodeType": "YulTypedName",
														"src": "474:4:8",
														"type": ""
													}
												],
												"src": "309:352:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"OracleManager: invalid owner\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161228a38038061228a83398101604081905261002e916100ef565b610037336100a0565b6001600160a01b0381166100915760405162461bcd60e51b815260206004820152601c60248201527f4f7261636c654d616e616765723a20696e76616c6964206f776e657200000000604482015260640160405180910390fd5b61009a816100a0565b5061011c565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100ff575f5ffd5b81516001600160a01b0381168114610115575f5ffd5b9392505050565b612161806101295f395ff3fe608060405234801561000f575f5ffd5b5060043610610085575f3560e01c80638da5cb5b116100585780638da5cb5b146101e25780639b05fc75146101fc578063f2ac1ec51461020f578063f2fde38b14610222575f5ffd5b8063067a4b061461008957806341976e091461011f578063715018a6146101495780637f4a310214610153575b5f5ffd5b6100dd610097366004611abf565b600160208190525f918252604090912080549101546001600160a01b039182169181169060ff600160a01b8204811691600160a81b8104821691600160b01b9091041685565b604080516001600160a01b0396871681529590941660208601529115159284019290925260ff90911660608301521515608082015260a0015b60405180910390f35b61013261012d366004611abf565b610235565b6040805192835260ff909116602083015201610116565b61015161040d565b005b6101a7610161366004611abf565b60026020525f9081526040902080546001909101546001600160a01b039182169181169060ff600160a01b8204811691600160a81b8104821691600160b01b9091041685565b604080516001600160a01b03968716815295909416602086015260ff928316938501939093521660608301521515608082015260a001610116565b5f546040516001600160a01b039091168152602001610116565b61015161020a366004611ae8565b610420565b61015161021d366004611b62565b6105b4565b610151610230366004611abf565b6107c3565b6001600160a01b038082165f908152600160208181526040808420815160a0810183528154871680825291909401549586169284019290925260ff600160a01b86048116151591840191909152600160a81b850481166060840152600160b01b9094049093161515608082015290918291901515806102b5575080608001515b6103175760405162461bcd60e51b815260206004820152602860248201527f4f7261636c654d616e616765723a206e6f2061676772656761746f722f7661756044820152676c74206c6f67696360c01b60648201526084015b60405180910390fd5b8060800151610333576103298161083c565b9093509150610407565b6001600160a01b038085165f90815260026020908152604091829020825160a0810184528154851681526001909101549384169181019190915260ff600160a01b8404811692820192909252600160a81b830482166060820152600160b01b909204161515608082018190526103f65760405162461bcd60e51b815260206004820152602260248201527f4f7261636c654d616e616765723a207661756c74206665656473206e6f742073604482015261195d60f21b606482015260840161030e565b6104008582610971565b9094509250505b50915091565b610415610ae1565b61041e5f610b3a565b565b610428610ae1565b6001600160a01b0385166104885760405162461bcd60e51b815260206004820152602160248201527f4f7261636c654d616e616765723a20696e76616c6964207661756c74546f6b656044820152603760f91b606482015260840161030e565b6040805160a0810182526001600160a01b038087168252858116602080840191825260ff808816858701908152878216606087019081526001608088018181528e88165f8181526002909752958a9020985189549089166001600160a01b03199091161789559551970180549251915195511515600160b01b0260ff60b01b19968516600160a81b029690961661ffff60a81b1992909416600160a01b026001600160a81b0319909316979096169690961717949094169390931717905590517f2fb5936f285b062770ba9aa206ca7282ebb8f84ad2eda1c664b3059e9c62c1ba906105a59087908790879087906001600160a01b03948516815292909316602083015260ff908116604083015291909116606082015260800190565b60405180910390a25050505050565b6105bc610ae1565b6001600160a01b0386166106125760405162461bcd60e51b815260206004820152601c60248201527f4f7261636c654d616e616765723a20696e76616c696420746f6b656e00000000604482015260640161030e565b80610686576001600160a01b0385166106865760405162461bcd60e51b815260206004820152603060248201527f4f7261636c654d616e616765723a2061676772656761746f722072657175697260448201526f195908199bdc881b9bdb8b5d985d5b1d60821b606482015260840161030e565b6040805160a0810182526001600160a01b038088168252868116602080840191825287151584860190815260ff80891660608701908152881515608088019081528e87165f8181526001968790528a9020985189549089166001600160a01b031990911617895595519790940180549351915194511515600160b01b0260ff60b01b1995909316600160a81b029490941661ffff60a81b19911515600160a01b026001600160a81b0319909416979096169690961791909117949094169290921792909217905590517f5be58a9eef853f8ae7393174434d0be93daad7445510f6ce6e914b2f297885b8906107b390889088908890889088906001600160a01b039586168152939094166020840152901515604083015260ff166060820152901515608082015260a00190565b60405180910390a2505050505050565b6107cb610ae1565b6001600160a01b0381166108305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161030e565b61083981610b3a565b50565b5f5f5f5f5f610852865f01518760600151610b89565b92509250925082158015610867575085604001515b801561087f575060208601516001600160a01b031615155b1561090a575f5f5f61089989602001518a60600151610b89565b925092509250826108fc5760405162461bcd60e51b815260206004820152602760248201527f4f7261636c654d616e616765723a2066616c6c6261636b2061676772656761746044820152661bdc8819985a5b60ca1b606482015260840161030e565b909890975095505050505050565b826109665760405162461bcd60e51b815260206004820152602660248201527f4f7261636c654d616e616765723a207072696d6172792061676772656761746f6044820152651c8819985a5b60d21b606482015260840161030e565b909590945092505050565b5f5f5f5f5f61097f87610d69565b9250925092505f6109908284610fa8565b90505f5f6109fc8a6001600160a01b0316633a924d5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109d3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109f79190611be0565b611196565b915091505f5f610a1a848660400151876060015188608001516112c1565b915091505f8560a001516001600160801b031683610a389190611c0f565b90505f8660c001516001600160801b031683610a549190611c0f565b90505f60405180608001604052808f5f01516001600160a01b031681526020018f602001516001600160a01b031681526020018f6040015160ff1681526020018f6060015160ff1681525090505f610aad848484611312565b90508b15610abb578b610abe565b60015b610ac89082611c36565b9d5060089c505050505050505050505050509250929050565b5f546001600160a01b0316331461041e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161030e565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f80806001600160a01b038516610ba757505f915081905080610d62565b60408051600481526024810182526020810180516001600160e01b0316633fabe5a360e21b17905290515f9081906001600160a01b03891690610beb908590611c77565b5f60405180830381855afa9150503d805f8114610c23576040519150601f19603f3d011682016040523d82523d5f602084013e610c28565b606091505b5091509150811580610c3b575060a08151105b15610c51575f5f5f955095509550505050610d62565b5f81806020019051810190610c669190611cb0565b5050509150505f8113610c85575f5f5f96509650965050505050610d62565b8760ff81165f03610d555760408051600481526024810182526020810180516001600160e01b031663313ce56760e01b17905290515f9182916001600160a01b038e1691610cd291611c77565b5f60405180830381855afa9150503d805f8114610d0a576040519150601f19603f3d011682016040523d82523d5f602084013e610d0f565b606091505b5091509150811580610d22575060208151105b15610d3c575f5f5f99509950995050505050505050610d62565b80806020019051810190610d509190611cfe565b925050505b6001975090955093505050505b9250925092565b5f5f5f5f849050806001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610dac573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dd09190611d19565b93505f8411610e2c5760405162461bcd60e51b815260206004820152602260248201527f4f7261636c654d616e616765723a207661756c7420746f74616c537570706c7960448201526103d360f41b606482015260840161030e565b806001600160a01b031663f657a7fe6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e68573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e8c9190611d19565b9250825f03610edd5760405162461bcd60e51b815260206004820152601e60248201527f4f7261636c654d616e616765723a206e6f204e465420696e207661756c740000604482015260640161030e565b806001600160a01b031663791b98bc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f19573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f3d9190611be0565b91506001600160a01b038216610fa05760405162461bcd60e51b815260206004820152602260248201527f4f7261636c654d616e616765723a20696e76616c696420706f736974696f6e4d60448201526133b960f11b606482015260840161030e565b509193909250565b6040805160e0810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c08101919091525f5f846001600160a01b03166399fbab8860e01b8560405160240161100791815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516110459190611c77565b5f60405180830381855afa9150503d805f811461107d576040519150601f19603f3d011682016040523d82523d5f602084013e611082565b606091505b50915091508161109182611354565b906110af5760405162461bcd60e51b815260040161030e9190611d30565b50808060200190518101906110c49190611da6565b909192939495969798999a509091929394959697989950909192939495965090919250909150895f018a6020018b6040018c6060018d6080018e60a0018f60c001876001600160801b03166001600160801b0316815250876001600160801b03166001600160801b0316815250876001600160801b03166001600160801b03168152508760020b60020b8152508760020b60020b815250876001600160a01b03166001600160a01b0316815250876001600160a01b03166001600160a01b031681525050505050505050505092915050565b5f806001600160a01b0383166111ee5760405162461bcd60e51b815260206004820152601b60248201527f4f7261636c654d616e616765723a20696e76616c696420706f6f6c0000000000604482015260640161030e565b60408051600481526024810182526020810180516001600160e01b0316633850c7bd60e01b17905290515f9182916001600160a01b0387169161123091611c77565b5f60405180830381855afa9150503d805f8114611268576040519150601f19603f3d011682016040523d82523d5f602084013e61126d565b606091505b50915091508161127c82611354565b9061129a5760405162461bcd60e51b815260040161030e9190611d30565b50808060200190518101906112af9190611e91565b50949a93995092975050505050505050565b5f5f826001600160801b03165f036112dd57505f905080611309565b5f6112e78661139f565b90505f6112f38661139f565b9050611301888383886117ea565b909450925050505b94509492505050565b5f5f61132685845f01518560400151611884565b90505f61133c8585602001518660600151611884565b90506113488183611c0f565b925050505b9392505050565b606060448251101561137f576040518060600160405280602481526020016121086024913992915050565b600482019150818060200190518101906113999190611f2f565b92915050565b5f620d89e719600283900b128015906113bf5750620d89e8600283900b13155b6113ff5760405162461bcd60e51b81526020600482015260116024820152705469636b206f7574206f662072616e676560781b604482015260640161030e565b5f5f8360020b12611415578262ffffff16611424565b61141e83611fdf565b62ffffff165b9050600160801b6001821615611455576080611450826ffffcb933bd6fad37aa2d162d1a594001611fff565b901c90505b600282161561147f57608061147a826ffff97272373d413259a46990580e213a611fff565b901c90505b60048216156114a95760806114a4826ffff2e50f5f656932ef12357cf3c7fdcc611fff565b901c90505b60088216156114d35760806114ce826fffe5caca7e10e4e61c3624eaa0941cd0611fff565b901c90505b60108216156114fd5760806114f8826fffcb9843d60f6159c9db58835c926644611fff565b901c90505b6020821615611527576080611522826fff973b41fa98c081472e6896dfb254c0611fff565b901c90505b604082161561155157608061154c826fff2ea16466c96a3843ec78b326b52861611fff565b901c90505b608082161561157b576080611576826ffe5dee046a99a2a811c461f1969c3053611fff565b901c90505b6101008216156115a65760806115a1826ffcbe86c7900a88aedcffc83b479aa3a4611fff565b901c90505b6102008216156115d15760806115cc826ff987a7253ac413176f2b074cf7815e54611fff565b901c90505b6104008216156115fc5760806115f7826ff3392b0822b70005940c7a398e4b70f3611fff565b901c90505b610800821615611627576080611622826fe7159475a2c29b7443b29c7fa6e889d9611fff565b901c90505b61100082161561165257608061164d826fd097f3bdfd2022b8845ad8f792aa5825611fff565b901c90505b61200082161561167d576080611678826fa9f746462d870fdf8a65dc1f90e061e5611fff565b901c90505b6140008216156116a85760806116a3826f70d869a156d2a1f6a7a2e3fadacb4c9b611fff565b901c90505b6180008216156116d35760806116ce826f31be135f97d08fd981231505542fcfa6611fff565b901c90505b620100008216156116ff5760806116fa826f09aa508b5b7a84e1c677de54f3e99bc9611fff565b901c90505b6202000082161561172a576080611725826e5d6af8dedb81196699c329225ee604611fff565b901c90505b6204000082161561175457608061174f826d2216e584f5fa1ea926041bedfe98611fff565b901c90505b6208000082161561177c576080611777826b048a170391f7dc42444e8fa2611fff565b901c90505b5f8460020b131561179557611792815f19611c36565b90505b602081901c6001600160a01b038111156117e25760405162461bcd60e51b815260206004820152600e60248201526d5072696365206f766572666c6f7760901b604482015260640161030e565b949350505050565b5f5f836001600160a01b0316856001600160a01b0316111561180a579293925b846001600160a01b0316866001600160a01b0316116118355761182e858585611955565b9150611309565b836001600160a01b0316866001600160a01b0316101561186e5761185a868585611955565b91506118678587856119c3565b9050611309565b6118798585856119c3565b905094509492505050565b5f83158061189957506001600160a01b038316155b156118a557505f61134d565b5f5f5f6118b28686610b89565b9250925092508261192b5760405162461bcd60e51b815260206004820152603b60248201527f4f7261636c654d616e616765723a2061676772656761746f72206661696c206960448201527f6e205f636f6e76657274546f41676772656761746f7256616c75650000000000606482015260840161030e565b61193681600a6120f9565b6119408389611fff565b61194a9190611c36565b979650505050505050565b5f826001600160a01b0316846001600160a01b03161115611974579192915b836001600160a01b03166119ad606060ff16846001600160801b0316901b8686036001600160a01b0316866001600160a01b0316611a01565b816119ba576119ba611c22565b04949350505050565b5f826001600160a01b0316846001600160a01b031611156119e2579192915b6117e2826001600160801b03168585036001600160a01b0316600160601b5b5f80805f19858709858702925082811083820303915050805f03611a35575f8411611a2a575f5ffd5b50829004905061134d565b808411611a40575f5ffd5b5f848688095f868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150509392505050565b6001600160a01b0381168114610839575f5ffd5b5f60208284031215611acf575f5ffd5b813561134d81611aab565b60ff81168114610839575f5ffd5b5f5f5f5f5f60a08688031215611afc575f5ffd5b8535611b0781611aab565b94506020860135611b1781611aab565b93506040860135611b2781611aab565b92506060860135611b3781611ada565b91506080860135611b4781611ada565b809150509295509295909350565b8015158114610839575f5ffd5b5f5f5f5f5f5f60c08789031215611b77575f5ffd5b8635611b8281611aab565b95506020870135611b9281611aab565b94506040870135611ba281611aab565b93506060870135611bb281611b55565b92506080870135611bc281611ada565b915060a0870135611bd281611b55565b809150509295509295509295565b5f60208284031215611bf0575f5ffd5b815161134d81611aab565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561139957611399611bfb565b634e487b7160e01b5f52601260045260245ffd5b5f82611c5057634e487b7160e01b5f52601260045260245ffd5b500490565b5f5b83811015611c6f578181015183820152602001611c57565b50505f910152565b5f8251611c88818460208701611c55565b9190910192915050565b805169ffffffffffffffffffff81168114611cab575f5ffd5b919050565b5f5f5f5f5f60a08688031215611cc4575f5ffd5b611ccd86611c92565b60208701516040880151606089015192975090955093509150611cf260808701611c92565b90509295509295909350565b5f60208284031215611d0e575f5ffd5b815161134d81611ada565b5f60208284031215611d29575f5ffd5b5051919050565b602081525f8251806020840152611d4e816040850160208701611c55565b601f01601f19169190910160400192915050565b8051611cab81611aab565b805162ffffff81168114611cab575f5ffd5b8051600281900b8114611cab575f5ffd5b80516001600160801b0381168114611cab575f5ffd5b5f5f5f5f5f5f5f5f5f5f5f5f6101808d8f031215611dc2575f5ffd5b8c516bffffffffffffffffffffffff81168114611ddd575f5ffd5b9b50611deb60208e01611d62565b9a50611df960408e01611d62565b9950611e0760608e01611d62565b9850611e1560808e01611d6d565b9750611e2360a08e01611d7f565b9650611e3160c08e01611d7f565b9550611e3f60e08e01611d90565b6101008e01516101208f015191965094509250611e5f6101408e01611d90565b9150611e6e6101608e01611d90565b90509295989b509295989b509295989b565b805161ffff81168114611cab575f5ffd5b5f5f5f5f5f5f5f60e0888a031215611ea7575f5ffd5b8751611eb281611aab565b9650611ec060208901611d7f565b9550611ece60408901611e80565b9450611edc60608901611e80565b9350611eea60808901611e80565b925060a0880151611efa81611ada565b60c0890151909250611f0b81611b55565b8091505092959891949750929550565b634e487b7160e01b5f52604160045260245ffd5b5f60208284031215611f3f575f5ffd5b815167ffffffffffffffff811115611f55575f5ffd5b8201601f81018413611f65575f5ffd5b805167ffffffffffffffff811115611f7f57611f7f611f1b565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611fae57611fae611f1b565b604052818152828201602001861015611fc5575f5ffd5b611fd6826020830160208601611c55565b95945050505050565b5f8160020b627fffff198103611ff757611ff7611bfb565b5f0392915050565b808202811582820484141761139957611399611bfb565b6001815b60018411156120515780850481111561203557612035611bfb565b600184161561204357908102905b60019390931c92800261201a565b935093915050565b5f8261206757506001611399565b8161207357505f611399565b81600181146120895760028114612093576120af565b6001915050611399565b60ff8411156120a4576120a4611bfb565b50506001821b611399565b5060208310610133831016604e8410600b84101617156120d2575081810a611399565b6120de5f198484612016565b805f19048211156120f1576120f1611bfb565b029392505050565b5f61134d60ff84168361205956fe4f7261636c654d616e616765723a2063616c6c20726576657274656420772f6f206d7367a26469706673582212203cf387091b36c8ce987cdee3fb289ea4d9e0d4e66f345e8a87ab8f4cec6f8de464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x228A CODESIZE SUB DUP1 PUSH2 0x228A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEF JUMP JUMPDEST PUSH2 0x37 CALLER PUSH2 0xA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C6964206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9A DUP2 PUSH2 0xA0 JUMP JUMPDEST POP PUSH2 0x11C JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x115 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2161 DUP1 PUSH2 0x129 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x9B05FC75 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xF2AC1EC5 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x222 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x67A4B06 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x7F4A3102 EQ PUSH2 0x153 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDD PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 ISZERO ISZERO SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xFF SWAP3 DUP4 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x116 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP5 ADD SLOAD SWAP6 DUP7 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP7 DIV DUP2 AND ISZERO ISZERO SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP6 DIV DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP5 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 SWAP1 ISZERO ISZERO DUP1 PUSH2 0x2B5 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD JUMPDEST PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A206E6F2061676772656761746F722F766175 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C74206C6F676963 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0x333 JUMPI PUSH2 0x329 DUP2 PUSH2 0x83C JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x407 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP4 DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP4 DIV DUP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP3 DIV AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207661756C74206665656473206E6F742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH2 0x400 DUP6 DUP3 PUSH2 0x971 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x415 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x41E PUSH0 PUSH2 0xB3A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x428 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C6964207661756C74546F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP6 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0xFF DUP1 DUP9 AND DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 DUP3 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP9 ADD DUP2 DUP2 MSTORE DUP15 DUP9 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP8 MSTORE SWAP6 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP10 SSTORE SWAP6 MLOAD SWAP8 ADD DUP1 SLOAD SWAP3 MLOAD SWAP2 MLOAD SWAP6 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP7 DUP6 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP7 SWAP1 SWAP7 AND PUSH2 0xFFFF PUSH1 0xA8 SHL NOT SWAP3 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP8 SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP7 OR OR SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x2FB5936F285B062770BA9AA206CA7282EBB8F84AD2EDA1C664B3059E9C62C1BA SWAP1 PUSH2 0x5A5 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5BC PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST DUP1 PUSH2 0x686 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2061676772656761746F7220726571756972 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x195908199BDC881B9BDB8B5D985D5B1D PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP8 ISZERO ISZERO DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF DUP1 DUP10 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE DUP9 ISZERO ISZERO PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE DUP15 DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP7 DUP8 SWAP1 MSTORE DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP10 SSTORE SWAP6 MLOAD SWAP8 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP4 MLOAD SWAP2 MLOAD SWAP5 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP6 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP5 SWAP1 SWAP5 AND PUSH2 0xFFFF PUSH1 0xA8 SHL NOT SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP8 SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP7 OR SWAP2 SWAP1 SWAP2 OR SWAP5 SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP3 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x5BE58A9EEF853F8AE7393174434D0BE93DAAD7445510F6CE6E914B2F297885B8 SWAP1 PUSH2 0x7B3 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7CB PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH2 0x839 DUP2 PUSH2 0xB3A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x852 DUP7 PUSH0 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 ISZERO DUP1 ISZERO PUSH2 0x867 JUMPI POP DUP6 PUSH1 0x40 ADD MLOAD JUMPDEST DUP1 ISZERO PUSH2 0x87F JUMPI POP PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x90A JUMPI PUSH0 PUSH0 PUSH0 PUSH2 0x899 DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x8FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2066616C6C6261636B206167677265676174 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1BDC8819985A5B PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207072696D6172792061676772656761746F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8819985A5B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x97F DUP8 PUSH2 0xD69 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH0 PUSH2 0x990 DUP3 DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH2 0x9FC DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A924D5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH0 PUSH2 0xA1A DUP5 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x12C1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP6 PUSH1 0xA0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0xA38 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP16 PUSH0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH2 0xAAD DUP5 DUP5 DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP DUP12 ISZERO PUSH2 0xABB JUMPI DUP12 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAC8 SWAP1 DUP3 PUSH2 0x1C36 JUMP JUMPDEST SWAP14 POP PUSH1 0x8 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xBA7 JUMPI POP PUSH0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH2 0xBEB SWAP1 DUP6 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0xC3B JUMPI POP PUSH1 0xA0 DUP2 MLOAD LT JUMPDEST ISZERO PUSH2 0xC51 JUMPI PUSH0 PUSH0 PUSH0 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xD62 JUMP JUMPDEST PUSH0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC66 SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0xC85 JUMPI PUSH0 PUSH0 PUSH0 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0xD62 JUMP JUMPDEST DUP8 PUSH1 0xFF DUP2 AND PUSH0 SUB PUSH2 0xD55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP2 PUSH2 0xCD2 SWAP2 PUSH2 0x1C77 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0xD22 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT JUMPDEST ISZERO PUSH2 0xD3C JUMPI PUSH0 PUSH0 PUSH0 SWAP10 POP SWAP10 POP SWAP10 POP POP POP POP POP POP POP POP PUSH2 0xD62 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x1 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD0 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207661756C7420746F74616C537570706C79 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3D3 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF657A7FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE68 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP3 POP DUP3 PUSH0 SUB PUSH2 0xEDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A206E6F204E465420696E207661756C740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x791B98BC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF19 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420706F736974696F6E4D PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x33B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99FBAB88 PUSH1 0xE0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1007 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1045 SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1091 DUP3 PUSH2 0x1354 JUMP JUMPDEST SWAP1 PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP DUP10 PUSH0 ADD DUP11 PUSH1 0x20 ADD DUP12 PUSH1 0x40 ADD DUP13 PUSH1 0x60 ADD DUP14 PUSH1 0x80 ADD DUP15 PUSH1 0xA0 ADD DUP16 PUSH1 0xC0 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP DUP8 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH2 0x1230 SWAP2 PUSH2 0x1C77 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1268 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x126D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x127C DUP3 PUSH2 0x1354 JUMP JUMPDEST SWAP1 PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12AF SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST POP SWAP5 SWAP11 SWAP4 SWAP10 POP SWAP3 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH0 SUB PUSH2 0x12DD JUMPI POP PUSH0 SWAP1 POP DUP1 PUSH2 0x1309 JUMP JUMPDEST PUSH0 PUSH2 0x12E7 DUP7 PUSH2 0x139F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12F3 DUP7 PUSH2 0x139F JUMP JUMPDEST SWAP1 POP PUSH2 0x1301 DUP9 DUP4 DUP4 DUP9 PUSH2 0x17EA JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1326 DUP6 DUP5 PUSH0 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x133C DUP6 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP PUSH2 0x1348 DUP2 DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x137F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2108 PUSH1 0x24 SWAP2 CODECOPY SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1399 SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xD89E7 NOT PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SLT DUP1 ISZERO SWAP1 PUSH2 0x13BF JUMPI POP PUSH3 0xD89E8 PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SGT ISZERO JUMPDEST PUSH2 0x13FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5469636B206F7574206F662072616E6765 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x1415 JUMPI DUP3 PUSH3 0xFFFFFF AND PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x141E DUP4 PUSH2 0x1FDF JUMP JUMPDEST PUSH3 0xFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x1455 JUMPI PUSH1 0x80 PUSH2 0x1450 DUP3 PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x147F JUMPI PUSH1 0x80 PUSH2 0x147A DUP3 PUSH16 0xFFF97272373D413259A46990580E213A PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x80 PUSH2 0x14A4 DUP3 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x14D3 JUMPI PUSH1 0x80 PUSH2 0x14CE DUP3 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x14FD JUMPI PUSH1 0x80 PUSH2 0x14F8 DUP3 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x1527 JUMPI PUSH1 0x80 PUSH2 0x1522 DUP3 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x1551 JUMPI PUSH1 0x80 PUSH2 0x154C DUP3 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x157B JUMPI PUSH1 0x80 PUSH2 0x1576 DUP3 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x15A6 JUMPI PUSH1 0x80 PUSH2 0x15A1 DUP3 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x80 PUSH2 0x15CC DUP3 PUSH16 0xF987A7253AC413176F2B074CF7815E54 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x15FC JUMPI PUSH1 0x80 PUSH2 0x15F7 DUP3 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x1627 JUMPI PUSH1 0x80 PUSH2 0x1622 DUP3 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x1652 JUMPI PUSH1 0x80 PUSH2 0x164D DUP3 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x167D JUMPI PUSH1 0x80 PUSH2 0x1678 DUP3 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x16A8 JUMPI PUSH1 0x80 PUSH2 0x16A3 DUP3 PUSH16 0x70D869A156D2A1F6A7A2E3FADACB4C9B PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x16D3 JUMPI PUSH1 0x80 PUSH2 0x16CE DUP3 PUSH16 0x31BE135F97D08FD981231505542FCFA6 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x16FF JUMPI PUSH1 0x80 PUSH2 0x16FA DUP3 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x172A JUMPI PUSH1 0x80 PUSH2 0x1725 DUP3 PUSH15 0x5D6AF8DEDB81196699C329225EE604 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x1754 JUMPI PUSH1 0x80 PUSH2 0x174F DUP3 PUSH14 0x2216E584F5FA1EA926041BEDFE98 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x177C JUMPI PUSH1 0x80 PUSH2 0x1777 DUP3 PUSH12 0x48A170391F7DC42444E8FA2 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1792 DUP2 PUSH0 NOT PUSH2 0x1C36 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x20 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 GT ISZERO PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x5072696365206F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x180A JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x1835 JUMPI PUSH2 0x182E DUP6 DUP6 DUP6 PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP PUSH2 0x1309 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x186E JUMPI PUSH2 0x185A DUP7 DUP6 DUP6 PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP PUSH2 0x1867 DUP6 DUP8 DUP6 PUSH2 0x19C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x1879 DUP6 DUP6 DUP6 PUSH2 0x19C3 JUMP JUMPDEST SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 ISZERO DUP1 PUSH2 0x1899 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x18A5 JUMPI POP PUSH0 PUSH2 0x134D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x18B2 DUP7 DUP7 PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x192B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2061676772656761746F72206661696C2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E205F636F6E76657274546F41676772656761746F7256616C75650000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH1 0xA PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x1940 DUP4 DUP10 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x194A SWAP2 SWAP1 PUSH2 0x1C36 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x1974 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19AD PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SHL DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A01 JUMP JUMPDEST DUP2 PUSH2 0x19BA JUMPI PUSH2 0x19BA PUSH2 0x1C22 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x19E2 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x17E2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL JUMPDEST PUSH0 DUP1 DUP1 PUSH0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH0 SUB PUSH2 0x1A35 JUMPI PUSH0 DUP5 GT PUSH2 0x1A2A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x134D JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1A40 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD PUSH0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x839 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x134D DUP2 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x839 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AFC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1B07 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1B17 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1B27 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x1B37 DUP2 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1B47 DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x839 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1B77 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1B82 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1B92 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1BA2 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1BB2 DUP2 PUSH2 0x1B55 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x1BC2 DUP2 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x1BD2 DUP2 PUSH2 0x1B55 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x134D DUP2 PUSH2 0x1AAB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1399 JUMPI PUSH2 0x1399 PUSH2 0x1BFB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1C50 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C6F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C57 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1C88 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1C55 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CC4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1CCD DUP7 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1CF2 PUSH1 0x80 DUP8 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x134D DUP2 PUSH2 0x1ADA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D4E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1CAB DUP2 PUSH2 0x1AAB JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x1DC2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1DDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP12 POP PUSH2 0x1DEB PUSH1 0x20 DUP15 ADD PUSH2 0x1D62 JUMP JUMPDEST SWAP11 POP PUSH2 0x1DF9 PUSH1 0x40 DUP15 ADD PUSH2 0x1D62 JUMP JUMPDEST SWAP10 POP PUSH2 0x1E07 PUSH1 0x60 DUP15 ADD PUSH2 0x1D62 JUMP JUMPDEST SWAP9 POP PUSH2 0x1E15 PUSH1 0x80 DUP15 ADD PUSH2 0x1D6D JUMP JUMPDEST SWAP8 POP PUSH2 0x1E23 PUSH1 0xA0 DUP15 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP7 POP PUSH2 0x1E31 PUSH1 0xC0 DUP15 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP6 POP PUSH2 0x1E3F PUSH1 0xE0 DUP15 ADD PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x100 DUP15 ADD MLOAD PUSH2 0x120 DUP16 ADD MLOAD SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP PUSH2 0x1E5F PUSH2 0x140 DUP15 ADD PUSH2 0x1D90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E6E PUSH2 0x160 DUP15 ADD PUSH2 0x1D90 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1EA7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x1EB2 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP7 POP PUSH2 0x1EC0 PUSH1 0x20 DUP10 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP6 POP PUSH2 0x1ECE PUSH1 0x40 DUP10 ADD PUSH2 0x1E80 JUMP JUMPDEST SWAP5 POP PUSH2 0x1EDC PUSH1 0x60 DUP10 ADD PUSH2 0x1E80 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEA PUSH1 0x80 DUP10 ADD PUSH2 0x1E80 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH2 0x1EFA DUP2 PUSH2 0x1ADA JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1F0B DUP2 PUSH2 0x1B55 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F3F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F55 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1F65 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7F PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1FAE JUMPI PUSH2 0x1FAE PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x1FC5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1FD6 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1C55 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH3 0x7FFFFF NOT DUP2 SUB PUSH2 0x1FF7 JUMPI PUSH2 0x1FF7 PUSH2 0x1BFB JUMP JUMPDEST PUSH0 SUB SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1399 JUMPI PUSH2 0x1399 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x2051 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x2035 JUMPI PUSH2 0x2035 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x2043 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x201A JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2067 JUMPI POP PUSH1 0x1 PUSH2 0x1399 JUMP JUMPDEST DUP2 PUSH2 0x2073 JUMPI POP PUSH0 PUSH2 0x1399 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2089 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2093 JUMPI PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1399 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A4 PUSH2 0x1BFB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1399 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x20D2 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x20DE PUSH0 NOT DUP5 DUP5 PUSH2 0x2016 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x20F1 JUMPI PUSH2 0x20F1 PUSH2 0x1BFB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x134D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2059 JUMP INVALID 0x4F PUSH19 0x61636C654D616E616765723A2063616C6C2072 PUSH6 0x766572746564 KECCAK256 PUSH24 0x2F6F206D7367A26469706673582212203CF387091B36C8CE SWAP9 PUSH29 0xDEE3FB289EA4D9E0D4E66F345E8A87AB8F4CEC6F8DE464736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "5596:10478:2:-:0;;;6584:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:3;719:10:5;936:18:3;:32::i;:::-;-1:-1:-1;;;;;6636:26:2;;6628:67;;;;-1:-1:-1;;;6628:67:2;;511:2:8;6628:67:2;;;493:21:8;550:2;530:18;;;523:30;589;569:18;;;562:58;637:18;;6628:67:2;;;;;;;;6705:32;6724:12;6705:18;:32::i;:::-;6584:160;5596:10478;;2433:187:3;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:3;;;-1:-1:-1;;;;;;2541:17:3;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;309:352::-;5596:10478:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_1687": {
									"entryPoint": 2785,
									"id": 1687,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_computeLiquidityAmounts_1376": {
									"entryPoint": 4801,
									"id": 1376,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@_computeVaultTokenPrice_1119": {
									"entryPoint": 2417,
									"id": 1119,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_convertToAggregatorValue_1465": {
									"entryPoint": 6276,
									"id": 1465,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_convertVaultTokensToValue_1413": {
									"entryPoint": 4882,
									"id": 1413,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_fetchPositionData_1260": {
									"entryPoint": 4008,
									"id": 1260,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_fetchVaultInfo_1180": {
									"entryPoint": 3433,
									"id": 1180,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@_getPoolSqrtAndTick_1325": {
									"entryPoint": 4502,
									"id": 1325,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_getPriceFromConfig_986": {
									"entryPoint": 2108,
									"id": 986,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_getRevertMsg_1631": {
									"entryPoint": 4948,
									"id": 1631,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_2087": {
									"entryPoint": null,
									"id": 2087,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1744": {
									"entryPoint": 2874,
									"id": 1744,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_tryGetChainlinkPrice_1607": {
									"entryPoint": 2953,
									"id": 1607,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@getAmount0ForLiquidity_2332": {
									"entryPoint": 6485,
									"id": 2332,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAmount1ForLiquidity_2368": {
									"entryPoint": 6595,
									"id": 2368,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAmountsForLiquidity_2440": {
									"entryPoint": 6122,
									"id": 2440,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"@getPrice_916": {
									"entryPoint": 565,
									"id": 916,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getSqrtRatioAtTick_590": {
									"entryPoint": 5023,
									"id": 590,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mulDiv_141": {
									"entryPoint": 6657,
									"id": 141,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@oracleConfigs_689": {
									"entryPoint": null,
									"id": 689,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1673": {
									"entryPoint": null,
									"id": 1673,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1701": {
									"entryPoint": 1037,
									"id": 1701,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOracleConfig_803": {
									"entryPoint": 1460,
									"id": 803,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@setVaultUnderlyingFeeds_849": {
									"entryPoint": 1056,
									"id": 849,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@transferOwnership_1724": {
									"entryPoint": 1987,
									"id": 1724,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@vaultFeeds_694": {
									"entryPoint": null,
									"id": 694,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address_payable_fromMemory": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_int24_fromMemory": {
									"entryPoint": 7551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_boolt_uint8t_bool": {
									"entryPoint": 7010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint8t_uint8": {
									"entryPoint": 6888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 7344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 7422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint96t_address_payablet_address_payablet_address_payablet_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 12
								},
								"abi_decode_uint128_fromMemory": {
									"entryPoint": 7568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint16_fromMemory": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint24_fromMemory": {
									"entryPoint": 7533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 7314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool_t_uint8_t_bool__to_t_address_t_address_t_bool_t_uint8_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint8_t_uint8__to_t_address_t_address_t_uint8_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint8_t_uint8_t_bool__to_t_address_t_address_t_uint8_t_uint8_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8578a1db42e71a0d8c58dc40be174439f4f08fc99d263720fae7f8a56294a565__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95de5b676a898fea71d31b00d4044892258df276cb87d7002a9fc7e5e962e715__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aa7c621a39f9d1cc5f7410468746eb53df077a1592062de7c7ef03b504e8eea2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 8214,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 8441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 8281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"negate_t_int24": {
									"entryPoint": 8159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 6997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_uint8": {
									"entryPoint": 6874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19767:8",
										"nodeType": "YulBlock",
										"src": "0:19767:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:86:8",
													"nodeType": "YulBlock",
													"src": "59:86:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:8",
																"nodeType": "YulBlock",
																"src": "123:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:8",
																					"nodeType": "YulLiteral",
																					"src": "132:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:8",
																					"nodeType": "YulLiteral",
																					"src": "135:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:8"
																			},
																			"nativeSrc": "125:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:8"
																		},
																		"nativeSrc": "125:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "108:3:8",
																										"nodeType": "YulLiteral",
																										"src": "108:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "113:1:8",
																										"nodeType": "YulLiteral",
																										"src": "113:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "104:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:8"
																								},
																								"nativeSrc": "104:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "117:1:8",
																								"nodeType": "YulLiteral",
																								"src": "117:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "100:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:8"
																						},
																						"nativeSrc": "100:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:8"
																				},
																				"nativeSrc": "89:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:8"
																		},
																		"nativeSrc": "79:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:8"
																},
																"nativeSrc": "72:50:8",
																"nodeType": "YulFunctionCall",
																"src": "72:50:8"
															},
															"nativeSrc": "69:70:8",
															"nodeType": "YulIf",
															"src": "69:70:8"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:131:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:8",
														"nodeType": "YulTypedName",
														"src": "48:5:8",
														"type": ""
													}
												],
												"src": "14:131:8"
											},
											{
												"body": {
													"nativeSrc": "220:177:8",
													"nodeType": "YulBlock",
													"src": "220:177:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "266:16:8",
																"nodeType": "YulBlock",
																"src": "266:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "275:1:8",
																					"nodeType": "YulLiteral",
																					"src": "275:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "278:1:8",
																					"nodeType": "YulLiteral",
																					"src": "278:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "268:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:8"
																			},
																			"nativeSrc": "268:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:8"
																		},
																		"nativeSrc": "268:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "241:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "250:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "237:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:8"
																		},
																		"nativeSrc": "237:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "262:2:8",
																		"nodeType": "YulLiteral",
																		"src": "262:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:8"
																},
																"nativeSrc": "233:32:8",
																"nodeType": "YulFunctionCall",
																"src": "233:32:8"
															},
															"nativeSrc": "230:52:8",
															"nodeType": "YulIf",
															"src": "230:52:8"
														},
														{
															"nativeSrc": "291:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "317:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "304:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:8"
																},
																"nativeSrc": "304:23:8",
																"nodeType": "YulFunctionCall",
																"src": "304:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "295:5:8",
																	"nodeType": "YulTypedName",
																	"src": "295:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "361:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "336:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:8"
																},
																"nativeSrc": "336:31:8",
																"nodeType": "YulFunctionCall",
																"src": "336:31:8"
															},
															"nativeSrc": "336:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "336:31:8"
														},
														{
															"nativeSrc": "376:15:8",
															"nodeType": "YulAssignment",
															"src": "376:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "386:5:8",
																"nodeType": "YulIdentifier",
																"src": "386:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "376:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "150:247:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "186:9:8",
														"nodeType": "YulTypedName",
														"src": "186:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "197:7:8",
														"nodeType": "YulTypedName",
														"src": "197:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "209:6:8",
														"nodeType": "YulTypedName",
														"src": "209:6:8",
														"type": ""
													}
												],
												"src": "150:247:8"
											},
											{
												"body": {
													"nativeSrc": "599:345:8",
													"nodeType": "YulBlock",
													"src": "599:345:8",
													"statements": [
														{
															"nativeSrc": "609:27:8",
															"nodeType": "YulAssignment",
															"src": "609:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "621:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "621:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:3:8",
																		"nodeType": "YulLiteral",
																		"src": "632:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "617:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "617:3:8"
																},
																"nativeSrc": "617:19:8",
																"nodeType": "YulFunctionCall",
																"src": "617:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "609:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "609:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "652:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "652:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "667:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "683:3:8",
																								"nodeType": "YulLiteral",
																								"src": "683:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "688:1:8",
																								"nodeType": "YulLiteral",
																								"src": "688:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "679:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "679:3:8"
																						},
																						"nativeSrc": "679:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "679:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "692:1:8",
																						"nodeType": "YulLiteral",
																						"src": "692:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "675:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "675:3:8"
																				},
																				"nativeSrc": "675:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "675:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "663:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "663:3:8"
																		},
																		"nativeSrc": "663:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "663:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "645:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:8"
																},
																"nativeSrc": "645:51:8",
																"nodeType": "YulFunctionCall",
																"src": "645:51:8"
															},
															"nativeSrc": "645:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "645:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "716:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "716:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "727:2:8",
																				"nodeType": "YulLiteral",
																				"src": "727:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "712:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "712:3:8"
																		},
																		"nativeSrc": "712:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "712:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "736:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "736:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "752:3:8",
																								"nodeType": "YulLiteral",
																								"src": "752:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "757:1:8",
																								"nodeType": "YulLiteral",
																								"src": "757:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "748:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "748:3:8"
																						},
																						"nativeSrc": "748:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "748:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "761:1:8",
																						"nodeType": "YulLiteral",
																						"src": "761:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "744:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "744:3:8"
																				},
																				"nativeSrc": "744:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "744:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "732:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:8"
																		},
																		"nativeSrc": "732:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "732:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "705:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "705:6:8"
																},
																"nativeSrc": "705:60:8",
																"nodeType": "YulFunctionCall",
																"src": "705:60:8"
															},
															"nativeSrc": "705:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "705:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "785:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "785:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "796:2:8",
																				"nodeType": "YulLiteral",
																				"src": "796:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "781:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "781:3:8"
																		},
																		"nativeSrc": "781:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "781:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "815:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "815:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "808:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "808:6:8"
																				},
																				"nativeSrc": "808:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "808:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "801:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "801:6:8"
																		},
																		"nativeSrc": "801:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "801:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "774:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:8"
																},
																"nativeSrc": "774:50:8",
																"nodeType": "YulFunctionCall",
																"src": "774:50:8"
															},
															"nativeSrc": "774:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "774:50:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "844:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "844:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "855:2:8",
																				"nodeType": "YulLiteral",
																				"src": "855:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:8"
																		},
																		"nativeSrc": "840:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "840:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "864:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "864:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "872:4:8",
																				"nodeType": "YulLiteral",
																				"src": "872:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "860:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "860:3:8"
																		},
																		"nativeSrc": "860:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "860:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "833:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:8"
																},
																"nativeSrc": "833:45:8",
																"nodeType": "YulFunctionCall",
																"src": "833:45:8"
															},
															"nativeSrc": "833:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "833:45:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "898:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "898:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "909:3:8",
																				"nodeType": "YulLiteral",
																				"src": "909:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "894:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "894:3:8"
																		},
																		"nativeSrc": "894:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "894:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "929:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "929:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "922:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "922:6:8"
																				},
																				"nativeSrc": "922:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "922:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "915:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "915:6:8"
																		},
																		"nativeSrc": "915:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "915:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "887:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "887:6:8"
																},
																"nativeSrc": "887:51:8",
																"nodeType": "YulFunctionCall",
																"src": "887:51:8"
															},
															"nativeSrc": "887:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "887:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool_t_uint8_t_bool__to_t_address_t_address_t_bool_t_uint8_t_bool__fromStack_reversed",
												"nativeSrc": "402:542:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "536:9:8",
														"nodeType": "YulTypedName",
														"src": "536:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "547:6:8",
														"nodeType": "YulTypedName",
														"src": "547:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "555:6:8",
														"nodeType": "YulTypedName",
														"src": "555:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "563:6:8",
														"nodeType": "YulTypedName",
														"src": "563:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "571:6:8",
														"nodeType": "YulTypedName",
														"src": "571:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "579:6:8",
														"nodeType": "YulTypedName",
														"src": "579:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "590:4:8",
														"nodeType": "YulTypedName",
														"src": "590:4:8",
														"type": ""
													}
												],
												"src": "402:542:8"
											},
											{
												"body": {
													"nativeSrc": "1074:130:8",
													"nodeType": "YulBlock",
													"src": "1074:130:8",
													"statements": [
														{
															"nativeSrc": "1084:26:8",
															"nodeType": "YulAssignment",
															"src": "1084:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1096:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1096:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1107:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1092:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1092:3:8"
																},
																"nativeSrc": "1092:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1092:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1084:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1084:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1126:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1126:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1137:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1137:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1119:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1119:6:8"
																},
																"nativeSrc": "1119:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1119:25:8"
															},
															"nativeSrc": "1119:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1119:25:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1164:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1164:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1175:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1175:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1160:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1160:3:8"
																		},
																		"nativeSrc": "1160:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1160:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1184:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1184:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1192:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1192:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1180:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:8"
																		},
																		"nativeSrc": "1180:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1180:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1153:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1153:6:8"
																},
																"nativeSrc": "1153:45:8",
																"nodeType": "YulFunctionCall",
																"src": "1153:45:8"
															},
															"nativeSrc": "1153:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "1153:45:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed",
												"nativeSrc": "949:255:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1035:9:8",
														"nodeType": "YulTypedName",
														"src": "1035:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1046:6:8",
														"nodeType": "YulTypedName",
														"src": "1046:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1054:6:8",
														"nodeType": "YulTypedName",
														"src": "1054:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1065:4:8",
														"nodeType": "YulTypedName",
														"src": "1065:4:8",
														"type": ""
													}
												],
												"src": "949:255:8"
											},
											{
												"body": {
													"nativeSrc": "1408:340:8",
													"nodeType": "YulBlock",
													"src": "1408:340:8",
													"statements": [
														{
															"nativeSrc": "1418:27:8",
															"nodeType": "YulAssignment",
															"src": "1418:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1430:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1430:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1441:3:8",
																		"nodeType": "YulLiteral",
																		"src": "1441:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1426:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:8"
																},
																"nativeSrc": "1426:19:8",
																"nodeType": "YulFunctionCall",
																"src": "1426:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1418:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1418:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1461:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1461:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1476:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1476:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1492:3:8",
																								"nodeType": "YulLiteral",
																								"src": "1492:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1497:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1497:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1488:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1488:3:8"
																						},
																						"nativeSrc": "1488:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1488:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1501:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1501:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1484:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1484:3:8"
																				},
																				"nativeSrc": "1484:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1484:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1472:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1472:3:8"
																		},
																		"nativeSrc": "1472:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1472:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1454:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:8"
																},
																"nativeSrc": "1454:51:8",
																"nodeType": "YulFunctionCall",
																"src": "1454:51:8"
															},
															"nativeSrc": "1454:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "1454:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1525:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1536:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1521:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:8"
																		},
																		"nativeSrc": "1521:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1521:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "1545:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1545:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1561:3:8",
																								"nodeType": "YulLiteral",
																								"src": "1561:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1566:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1566:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1557:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1557:3:8"
																						},
																						"nativeSrc": "1557:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1557:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1570:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1570:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1553:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1553:3:8"
																				},
																				"nativeSrc": "1553:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1553:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1541:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:8"
																		},
																		"nativeSrc": "1541:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1541:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1514:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:8"
																},
																"nativeSrc": "1514:60:8",
																"nodeType": "YulFunctionCall",
																"src": "1514:60:8"
															},
															"nativeSrc": "1514:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "1514:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1594:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1594:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1605:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1605:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1590:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1590:3:8"
																		},
																		"nativeSrc": "1590:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1590:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "1614:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1614:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1622:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1622:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1610:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1610:3:8"
																		},
																		"nativeSrc": "1610:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1610:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1583:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1583:6:8"
																},
																"nativeSrc": "1583:45:8",
																"nodeType": "YulFunctionCall",
																"src": "1583:45:8"
															},
															"nativeSrc": "1583:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "1583:45:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1648:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1648:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1659:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1659:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1644:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1644:3:8"
																		},
																		"nativeSrc": "1644:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1644:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "1668:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1668:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1676:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1676:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1664:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1664:3:8"
																		},
																		"nativeSrc": "1664:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1637:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1637:6:8"
																},
																"nativeSrc": "1637:45:8",
																"nodeType": "YulFunctionCall",
																"src": "1637:45:8"
															},
															"nativeSrc": "1637:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "1637:45:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1702:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1702:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1713:3:8",
																				"nodeType": "YulLiteral",
																				"src": "1713:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1698:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1698:3:8"
																		},
																		"nativeSrc": "1698:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:19:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nativeSrc": "1733:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1733:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1726:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1726:6:8"
																				},
																				"nativeSrc": "1726:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1726:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1719:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1719:6:8"
																		},
																		"nativeSrc": "1719:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1719:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1691:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1691:6:8"
																},
																"nativeSrc": "1691:51:8",
																"nodeType": "YulFunctionCall",
																"src": "1691:51:8"
															},
															"nativeSrc": "1691:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "1691:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint8_t_uint8_t_bool__to_t_address_t_address_t_uint8_t_uint8_t_bool__fromStack_reversed",
												"nativeSrc": "1209:539:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1345:9:8",
														"nodeType": "YulTypedName",
														"src": "1345:9:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1356:6:8",
														"nodeType": "YulTypedName",
														"src": "1356:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1364:6:8",
														"nodeType": "YulTypedName",
														"src": "1364:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1372:6:8",
														"nodeType": "YulTypedName",
														"src": "1372:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1380:6:8",
														"nodeType": "YulTypedName",
														"src": "1380:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1388:6:8",
														"nodeType": "YulTypedName",
														"src": "1388:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1399:4:8",
														"nodeType": "YulTypedName",
														"src": "1399:4:8",
														"type": ""
													}
												],
												"src": "1209:539:8"
											},
											{
												"body": {
													"nativeSrc": "1854:102:8",
													"nodeType": "YulBlock",
													"src": "1854:102:8",
													"statements": [
														{
															"nativeSrc": "1864:26:8",
															"nodeType": "YulAssignment",
															"src": "1864:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1876:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1876:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1887:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1887:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1872:3:8"
																},
																"nativeSrc": "1872:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1872:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1864:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1864:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1906:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1906:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1921:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1921:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1937:3:8",
																								"nodeType": "YulLiteral",
																								"src": "1937:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1942:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1942:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1933:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1933:3:8"
																						},
																						"nativeSrc": "1933:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1933:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1946:1:8",
																						"nodeType": "YulLiteral",
																						"src": "1946:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1929:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1929:3:8"
																				},
																				"nativeSrc": "1929:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1929:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1917:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1917:3:8"
																		},
																		"nativeSrc": "1917:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1917:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1899:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1899:6:8"
																},
																"nativeSrc": "1899:51:8",
																"nodeType": "YulFunctionCall",
																"src": "1899:51:8"
															},
															"nativeSrc": "1899:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "1899:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1753:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1823:9:8",
														"nodeType": "YulTypedName",
														"src": "1823:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1834:6:8",
														"nodeType": "YulTypedName",
														"src": "1834:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1845:4:8",
														"nodeType": "YulTypedName",
														"src": "1845:4:8",
														"type": ""
													}
												],
												"src": "1753:203:8"
											},
											{
												"body": {
													"nativeSrc": "2004:71:8",
													"nodeType": "YulBlock",
													"src": "2004:71:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2053:16:8",
																"nodeType": "YulBlock",
																"src": "2053:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2062:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2062:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2065:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2065:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2055:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2055:6:8"
																			},
																			"nativeSrc": "2055:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2055:12:8"
																		},
																		"nativeSrc": "2055:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2055:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2027:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2027:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2038:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2038:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2045:4:8",
																						"nodeType": "YulLiteral",
																						"src": "2045:4:8",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2034:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:8"
																				},
																				"nativeSrc": "2034:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2034:16:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2024:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2024:2:8"
																		},
																		"nativeSrc": "2024:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2017:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:8"
																},
																"nativeSrc": "2017:35:8",
																"nodeType": "YulFunctionCall",
																"src": "2017:35:8"
															},
															"nativeSrc": "2014:55:8",
															"nodeType": "YulIf",
															"src": "2014:55:8"
														}
													]
												},
												"name": "validator_revert_uint8",
												"nativeSrc": "1961:114:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1993:5:8",
														"nodeType": "YulTypedName",
														"src": "1993:5:8",
														"type": ""
													}
												],
												"src": "1961:114:8"
											},
											{
												"body": {
													"nativeSrc": "2214:671:8",
													"nodeType": "YulBlock",
													"src": "2214:671:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2261:16:8",
																"nodeType": "YulBlock",
																"src": "2261:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2270:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2270:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2273:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2273:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2263:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2263:6:8"
																			},
																			"nativeSrc": "2263:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2263:12:8"
																		},
																		"nativeSrc": "2263:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2263:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2235:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2235:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2244:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2244:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2231:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2231:3:8"
																		},
																		"nativeSrc": "2231:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2231:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2256:3:8",
																		"nodeType": "YulLiteral",
																		"src": "2256:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2227:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2227:3:8"
																},
																"nativeSrc": "2227:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2227:33:8"
															},
															"nativeSrc": "2224:53:8",
															"nodeType": "YulIf",
															"src": "2224:53:8"
														},
														{
															"nativeSrc": "2286:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2286:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2312:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2312:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2299:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2299:12:8"
																},
																"nativeSrc": "2299:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2299:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2290:5:8",
																	"nodeType": "YulTypedName",
																	"src": "2290:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2356:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2356:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2331:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "2331:24:8"
																},
																"nativeSrc": "2331:31:8",
																"nodeType": "YulFunctionCall",
																"src": "2331:31:8"
															},
															"nativeSrc": "2331:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "2331:31:8"
														},
														{
															"nativeSrc": "2371:15:8",
															"nodeType": "YulAssignment",
															"src": "2371:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "2381:5:8",
																"nodeType": "YulIdentifier",
																"src": "2381:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2371:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:8"
																}
															]
														},
														{
															"nativeSrc": "2395:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2395:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2427:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2427:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2438:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2438:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2423:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2423:3:8"
																		},
																		"nativeSrc": "2423:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2423:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2410:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2410:12:8"
																},
																"nativeSrc": "2410:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2410:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2399:7:8",
																	"nodeType": "YulTypedName",
																	"src": "2399:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2476:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2476:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2451:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "2451:24:8"
																},
																"nativeSrc": "2451:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2451:33:8"
															},
															"nativeSrc": "2451:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2451:33:8"
														},
														{
															"nativeSrc": "2493:17:8",
															"nodeType": "YulAssignment",
															"src": "2493:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "2503:7:8",
																"nodeType": "YulIdentifier",
																"src": "2503:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2493:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:8"
																}
															]
														},
														{
															"nativeSrc": "2519:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2519:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2551:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2551:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2562:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2562:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2547:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2547:3:8"
																		},
																		"nativeSrc": "2547:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2547:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2534:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2534:12:8"
																},
																"nativeSrc": "2534:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2534:32:8"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2523:7:8",
																	"nodeType": "YulTypedName",
																	"src": "2523:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "2600:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2600:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2575:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "2575:24:8"
																},
																"nativeSrc": "2575:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2575:33:8"
															},
															"nativeSrc": "2575:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2575:33:8"
														},
														{
															"nativeSrc": "2617:17:8",
															"nodeType": "YulAssignment",
															"src": "2617:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "2627:7:8",
																"nodeType": "YulIdentifier",
																"src": "2627:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2617:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2617:6:8"
																}
															]
														},
														{
															"nativeSrc": "2643:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2643:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2675:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2675:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2686:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2686:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2671:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2671:3:8"
																		},
																		"nativeSrc": "2671:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2658:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2658:12:8"
																},
																"nativeSrc": "2658:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2658:32:8"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "2647:7:8",
																	"nodeType": "YulTypedName",
																	"src": "2647:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "2722:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2722:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "2699:22:8",
																	"nodeType": "YulIdentifier",
																	"src": "2699:22:8"
																},
																"nativeSrc": "2699:31:8",
																"nodeType": "YulFunctionCall",
																"src": "2699:31:8"
															},
															"nativeSrc": "2699:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "2699:31:8"
														},
														{
															"nativeSrc": "2739:17:8",
															"nodeType": "YulAssignment",
															"src": "2739:17:8",
															"value": {
																"name": "value_3",
																"nativeSrc": "2749:7:8",
																"nodeType": "YulIdentifier",
																"src": "2749:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2739:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:8"
																}
															]
														},
														{
															"nativeSrc": "2765:48:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2765:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2797:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2797:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2808:3:8",
																				"nodeType": "YulLiteral",
																				"src": "2808:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2793:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2793:3:8"
																		},
																		"nativeSrc": "2793:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2793:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2780:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2780:12:8"
																},
																"nativeSrc": "2780:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2780:33:8"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "2769:7:8",
																	"nodeType": "YulTypedName",
																	"src": "2769:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nativeSrc": "2845:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2845:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "2822:22:8",
																	"nodeType": "YulIdentifier",
																	"src": "2822:22:8"
																},
																"nativeSrc": "2822:31:8",
																"nodeType": "YulFunctionCall",
																"src": "2822:31:8"
															},
															"nativeSrc": "2822:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "2822:31:8"
														},
														{
															"nativeSrc": "2862:17:8",
															"nodeType": "YulAssignment",
															"src": "2862:17:8",
															"value": {
																"name": "value_4",
																"nativeSrc": "2872:7:8",
																"nodeType": "YulIdentifier",
																"src": "2872:7:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "2862:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2862:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint8t_uint8",
												"nativeSrc": "2080:805:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2148:9:8",
														"nodeType": "YulTypedName",
														"src": "2148:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2159:7:8",
														"nodeType": "YulTypedName",
														"src": "2159:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2171:6:8",
														"nodeType": "YulTypedName",
														"src": "2171:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2179:6:8",
														"nodeType": "YulTypedName",
														"src": "2179:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2187:6:8",
														"nodeType": "YulTypedName",
														"src": "2187:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2195:6:8",
														"nodeType": "YulTypedName",
														"src": "2195:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2203:6:8",
														"nodeType": "YulTypedName",
														"src": "2203:6:8",
														"type": ""
													}
												],
												"src": "2080:805:8"
											},
											{
												"body": {
													"nativeSrc": "2932:76:8",
													"nodeType": "YulBlock",
													"src": "2932:76:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2986:16:8",
																"nodeType": "YulBlock",
																"src": "2986:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2995:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2995:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2998:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2998:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2988:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2988:6:8"
																			},
																			"nativeSrc": "2988:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2988:12:8"
																		},
																		"nativeSrc": "2988:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2988:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2955:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2955:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2976:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "2976:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2969:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2969:6:8"
																						},
																						"nativeSrc": "2969:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2969:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2962:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2962:6:8"
																				},
																				"nativeSrc": "2962:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2962:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2952:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2952:2:8"
																		},
																		"nativeSrc": "2952:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2952:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2945:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:8"
																},
																"nativeSrc": "2945:40:8",
																"nodeType": "YulFunctionCall",
																"src": "2945:40:8"
															},
															"nativeSrc": "2942:60:8",
															"nodeType": "YulIf",
															"src": "2942:60:8"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "2890:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2921:5:8",
														"nodeType": "YulTypedName",
														"src": "2921:5:8",
														"type": ""
													}
												],
												"src": "2890:118:8"
											},
											{
												"body": {
													"nativeSrc": "3160:792:8",
													"nodeType": "YulBlock",
													"src": "3160:792:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3207:16:8",
																"nodeType": "YulBlock",
																"src": "3207:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3216:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3216:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3219:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3219:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3209:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3209:6:8"
																			},
																			"nativeSrc": "3209:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3209:12:8"
																		},
																		"nativeSrc": "3209:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3209:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3181:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3181:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3190:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3190:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3177:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3177:3:8"
																		},
																		"nativeSrc": "3177:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3177:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3202:3:8",
																		"nodeType": "YulLiteral",
																		"src": "3202:3:8",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3173:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3173:3:8"
																},
																"nativeSrc": "3173:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3173:33:8"
															},
															"nativeSrc": "3170:53:8",
															"nodeType": "YulIf",
															"src": "3170:53:8"
														},
														{
															"nativeSrc": "3232:36:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3232:36:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3258:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3258:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3245:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3245:12:8"
																},
																"nativeSrc": "3245:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3245:23:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3236:5:8",
																	"nodeType": "YulTypedName",
																	"src": "3236:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3302:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "3302:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3277:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "3277:24:8"
																},
																"nativeSrc": "3277:31:8",
																"nodeType": "YulFunctionCall",
																"src": "3277:31:8"
															},
															"nativeSrc": "3277:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "3277:31:8"
														},
														{
															"nativeSrc": "3317:15:8",
															"nodeType": "YulAssignment",
															"src": "3317:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "3327:5:8",
																"nodeType": "YulIdentifier",
																"src": "3327:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3317:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3317:6:8"
																}
															]
														},
														{
															"nativeSrc": "3341:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3341:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3373:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3373:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3384:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3384:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3369:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3369:3:8"
																		},
																		"nativeSrc": "3369:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3369:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3356:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3356:12:8"
																},
																"nativeSrc": "3356:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3356:32:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3345:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3345:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "3422:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3422:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3397:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "3397:24:8"
																},
																"nativeSrc": "3397:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3397:33:8"
															},
															"nativeSrc": "3397:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3397:33:8"
														},
														{
															"nativeSrc": "3439:17:8",
															"nodeType": "YulAssignment",
															"src": "3439:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "3449:7:8",
																"nodeType": "YulIdentifier",
																"src": "3449:7:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3439:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3439:6:8"
																}
															]
														},
														{
															"nativeSrc": "3465:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3465:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3497:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3497:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3508:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3508:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3493:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3493:3:8"
																		},
																		"nativeSrc": "3493:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3493:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3480:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3480:12:8"
																},
																"nativeSrc": "3480:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3480:32:8"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3469:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3469:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "3546:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3546:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3521:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "3521:24:8"
																},
																"nativeSrc": "3521:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3521:33:8"
															},
															"nativeSrc": "3521:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "3521:33:8"
														},
														{
															"nativeSrc": "3563:17:8",
															"nodeType": "YulAssignment",
															"src": "3563:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "3573:7:8",
																"nodeType": "YulIdentifier",
																"src": "3573:7:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3563:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3563:6:8"
																}
															]
														},
														{
															"nativeSrc": "3589:47:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3589:47:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3621:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3621:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3632:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3632:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3617:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3617:3:8"
																		},
																		"nativeSrc": "3617:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3617:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3604:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3604:12:8"
																},
																"nativeSrc": "3604:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3604:32:8"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3593:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3593:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "3667:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3667:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "3645:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "3645:21:8"
																},
																"nativeSrc": "3645:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3645:30:8"
															},
															"nativeSrc": "3645:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3645:30:8"
														},
														{
															"nativeSrc": "3684:17:8",
															"nodeType": "YulAssignment",
															"src": "3684:17:8",
															"value": {
																"name": "value_3",
																"nativeSrc": "3694:7:8",
																"nodeType": "YulIdentifier",
																"src": "3694:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3684:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3684:6:8"
																}
															]
														},
														{
															"nativeSrc": "3710:48:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3710:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3742:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3742:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3753:3:8",
																				"nodeType": "YulLiteral",
																				"src": "3753:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3738:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3738:3:8"
																		},
																		"nativeSrc": "3738:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3738:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3725:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3725:12:8"
																},
																"nativeSrc": "3725:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3725:33:8"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "3714:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3714:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nativeSrc": "3790:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3790:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "3767:22:8",
																	"nodeType": "YulIdentifier",
																	"src": "3767:22:8"
																},
																"nativeSrc": "3767:31:8",
																"nodeType": "YulFunctionCall",
																"src": "3767:31:8"
															},
															"nativeSrc": "3767:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "3767:31:8"
														},
														{
															"nativeSrc": "3807:17:8",
															"nodeType": "YulAssignment",
															"src": "3807:17:8",
															"value": {
																"name": "value_4",
																"nativeSrc": "3817:7:8",
																"nodeType": "YulIdentifier",
																"src": "3817:7:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3807:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3807:6:8"
																}
															]
														},
														{
															"nativeSrc": "3833:48:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3833:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3865:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3865:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3876:3:8",
																				"nodeType": "YulLiteral",
																				"src": "3876:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3861:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3861:3:8"
																		},
																		"nativeSrc": "3861:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:19:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3848:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3848:12:8"
																},
																"nativeSrc": "3848:33:8",
																"nodeType": "YulFunctionCall",
																"src": "3848:33:8"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "3837:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3837:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nativeSrc": "3912:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3912:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "3890:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "3890:21:8"
																},
																"nativeSrc": "3890:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3890:30:8"
															},
															"nativeSrc": "3890:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3890:30:8"
														},
														{
															"nativeSrc": "3929:17:8",
															"nodeType": "YulAssignment",
															"src": "3929:17:8",
															"value": {
																"name": "value_5",
																"nativeSrc": "3939:7:8",
																"nodeType": "YulIdentifier",
																"src": "3939:7:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "3929:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3929:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_boolt_uint8t_bool",
												"nativeSrc": "3013:939:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3086:9:8",
														"nodeType": "YulTypedName",
														"src": "3086:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3097:7:8",
														"nodeType": "YulTypedName",
														"src": "3097:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3109:6:8",
														"nodeType": "YulTypedName",
														"src": "3109:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3117:6:8",
														"nodeType": "YulTypedName",
														"src": "3117:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3125:6:8",
														"nodeType": "YulTypedName",
														"src": "3125:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3133:6:8",
														"nodeType": "YulTypedName",
														"src": "3133:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3141:6:8",
														"nodeType": "YulTypedName",
														"src": "3141:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3149:6:8",
														"nodeType": "YulTypedName",
														"src": "3149:6:8",
														"type": ""
													}
												],
												"src": "3013:939:8"
											},
											{
												"body": {
													"nativeSrc": "4131:230:8",
													"nodeType": "YulBlock",
													"src": "4131:230:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4148:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4148:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4159:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4159:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4141:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4141:6:8"
																},
																"nativeSrc": "4141:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4141:21:8"
															},
															"nativeSrc": "4141:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4141:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4182:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4182:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4193:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4193:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4178:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4178:3:8"
																		},
																		"nativeSrc": "4178:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4178:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4198:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4198:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:8"
																},
																"nativeSrc": "4171:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4171:30:8"
															},
															"nativeSrc": "4171:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4171:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4221:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4221:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4232:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4232:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4217:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:8"
																		},
																		"nativeSrc": "4217:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4217:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a206e6f2061676772656761746f722f766175",
																		"kind": "string",
																		"nativeSrc": "4237:34:8",
																		"nodeType": "YulLiteral",
																		"src": "4237:34:8",
																		"type": "",
																		"value": "OracleManager: no aggregator/vau"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4210:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4210:6:8"
																},
																"nativeSrc": "4210:62:8",
																"nodeType": "YulFunctionCall",
																"src": "4210:62:8"
															},
															"nativeSrc": "4210:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "4210:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4292:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4292:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4303:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4303:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4288:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4288:3:8"
																		},
																		"nativeSrc": "4288:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4288:18:8"
																	},
																	{
																		"hexValue": "6c74206c6f676963",
																		"kind": "string",
																		"nativeSrc": "4308:10:8",
																		"nodeType": "YulLiteral",
																		"src": "4308:10:8",
																		"type": "",
																		"value": "lt logic"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4281:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4281:6:8"
																},
																"nativeSrc": "4281:38:8",
																"nodeType": "YulFunctionCall",
																"src": "4281:38:8"
															},
															"nativeSrc": "4281:38:8",
															"nodeType": "YulExpressionStatement",
															"src": "4281:38:8"
														},
														{
															"nativeSrc": "4328:27:8",
															"nodeType": "YulAssignment",
															"src": "4328:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:3:8",
																		"nodeType": "YulLiteral",
																		"src": "4351:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:8"
																},
																"nativeSrc": "4336:19:8",
																"nodeType": "YulFunctionCall",
																"src": "4336:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95de5b676a898fea71d31b00d4044892258df276cb87d7002a9fc7e5e962e715__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3957:404:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4108:9:8",
														"nodeType": "YulTypedName",
														"src": "4108:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4122:4:8",
														"nodeType": "YulTypedName",
														"src": "4122:4:8",
														"type": ""
													}
												],
												"src": "3957:404:8"
											},
											{
												"body": {
													"nativeSrc": "4540:224:8",
													"nodeType": "YulBlock",
													"src": "4540:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4557:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4557:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4568:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4568:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4550:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4550:6:8"
																},
																"nativeSrc": "4550:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4550:21:8"
															},
															"nativeSrc": "4550:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4550:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4591:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4591:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4602:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4602:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4587:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4587:3:8"
																		},
																		"nativeSrc": "4587:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4587:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4607:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4607:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4580:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4580:6:8"
																},
																"nativeSrc": "4580:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4580:30:8"
															},
															"nativeSrc": "4580:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4580:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4630:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4630:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4641:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4641:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4626:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4626:3:8"
																		},
																		"nativeSrc": "4626:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4626:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a207661756c74206665656473206e6f742073",
																		"kind": "string",
																		"nativeSrc": "4646:34:8",
																		"nodeType": "YulLiteral",
																		"src": "4646:34:8",
																		"type": "",
																		"value": "OracleManager: vault feeds not s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4619:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4619:6:8"
																},
																"nativeSrc": "4619:62:8",
																"nodeType": "YulFunctionCall",
																"src": "4619:62:8"
															},
															"nativeSrc": "4619:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "4619:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4701:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4701:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4712:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4712:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4697:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4697:3:8"
																		},
																		"nativeSrc": "4697:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4697:18:8"
																	},
																	{
																		"hexValue": "6574",
																		"kind": "string",
																		"nativeSrc": "4717:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4717:4:8",
																		"type": "",
																		"value": "et"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4690:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:8"
																},
																"nativeSrc": "4690:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4690:32:8"
															},
															"nativeSrc": "4690:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "4690:32:8"
														},
														{
															"nativeSrc": "4731:27:8",
															"nodeType": "YulAssignment",
															"src": "4731:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4743:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4743:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4754:3:8",
																		"nodeType": "YulLiteral",
																		"src": "4754:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4739:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4739:3:8"
																},
																"nativeSrc": "4739:19:8",
																"nodeType": "YulFunctionCall",
																"src": "4739:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4731:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4731:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4366:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4517:9:8",
														"nodeType": "YulTypedName",
														"src": "4517:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4531:4:8",
														"nodeType": "YulTypedName",
														"src": "4531:4:8",
														"type": ""
													}
												],
												"src": "4366:398:8"
											},
											{
												"body": {
													"nativeSrc": "4943:223:8",
													"nodeType": "YulBlock",
													"src": "4943:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4960:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4960:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4971:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4953:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4953:6:8"
																},
																"nativeSrc": "4953:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4953:21:8"
															},
															"nativeSrc": "4953:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4953:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4994:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4994:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5005:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5005:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4990:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:8"
																		},
																		"nativeSrc": "4990:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4990:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5010:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5010:2:8",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4983:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4983:6:8"
																},
																"nativeSrc": "4983:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4983:30:8"
															},
															"nativeSrc": "4983:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4983:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5033:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5033:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5044:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5044:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5029:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5029:3:8"
																		},
																		"nativeSrc": "5029:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5029:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c6964207661756c74546f6b65",
																		"kind": "string",
																		"nativeSrc": "5049:34:8",
																		"nodeType": "YulLiteral",
																		"src": "5049:34:8",
																		"type": "",
																		"value": "OracleManager: invalid vaultToke"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5022:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5022:6:8"
																},
																"nativeSrc": "5022:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5022:62:8"
															},
															"nativeSrc": "5022:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "5022:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5104:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5104:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5115:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5115:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5100:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5100:3:8"
																		},
																		"nativeSrc": "5100:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5100:18:8"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "5120:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5120:3:8",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5093:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5093:6:8"
																},
																"nativeSrc": "5093:31:8",
																"nodeType": "YulFunctionCall",
																"src": "5093:31:8"
															},
															"nativeSrc": "5093:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "5093:31:8"
														},
														{
															"nativeSrc": "5133:27:8",
															"nodeType": "YulAssignment",
															"src": "5133:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5145:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5145:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5156:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5156:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5141:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5141:3:8"
																},
																"nativeSrc": "5141:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5141:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5133:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5133:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4769:397:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4920:9:8",
														"nodeType": "YulTypedName",
														"src": "4920:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4934:4:8",
														"nodeType": "YulTypedName",
														"src": "4934:4:8",
														"type": ""
													}
												],
												"src": "4769:397:8"
											},
											{
												"body": {
													"nativeSrc": "5348:280:8",
													"nodeType": "YulBlock",
													"src": "5348:280:8",
													"statements": [
														{
															"nativeSrc": "5358:27:8",
															"nodeType": "YulAssignment",
															"src": "5358:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5370:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5370:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5381:3:8",
																		"nodeType": "YulLiteral",
																		"src": "5381:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5366:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5366:3:8"
																},
																"nativeSrc": "5366:19:8",
																"nodeType": "YulFunctionCall",
																"src": "5366:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5358:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5358:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5401:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5401:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5416:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5416:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5432:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5432:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5437:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5437:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5428:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5428:3:8"
																						},
																						"nativeSrc": "5428:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5428:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5441:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5441:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5424:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5424:3:8"
																				},
																				"nativeSrc": "5424:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5424:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5412:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5412:3:8"
																		},
																		"nativeSrc": "5412:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5412:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5394:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5394:6:8"
																},
																"nativeSrc": "5394:51:8",
																"nodeType": "YulFunctionCall",
																"src": "5394:51:8"
															},
															"nativeSrc": "5394:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "5394:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5465:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5465:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5476:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5476:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5461:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5461:3:8"
																		},
																		"nativeSrc": "5461:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5461:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5485:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5485:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5501:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5501:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5506:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5506:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5497:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5497:3:8"
																						},
																						"nativeSrc": "5497:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5497:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5510:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5510:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5493:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5493:3:8"
																				},
																				"nativeSrc": "5493:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5493:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5481:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5481:3:8"
																		},
																		"nativeSrc": "5481:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5481:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5454:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5454:6:8"
																},
																"nativeSrc": "5454:60:8",
																"nodeType": "YulFunctionCall",
																"src": "5454:60:8"
															},
															"nativeSrc": "5454:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "5454:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5534:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5534:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5545:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5545:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5530:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5530:3:8"
																		},
																		"nativeSrc": "5530:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5530:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5554:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5554:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5562:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5562:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5550:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5550:3:8"
																		},
																		"nativeSrc": "5550:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5550:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5523:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5523:6:8"
																},
																"nativeSrc": "5523:45:8",
																"nodeType": "YulFunctionCall",
																"src": "5523:45:8"
															},
															"nativeSrc": "5523:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "5523:45:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5588:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5588:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5599:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5599:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5584:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5584:3:8"
																		},
																		"nativeSrc": "5584:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5584:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "5608:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5608:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5616:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5616:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5604:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5604:3:8"
																		},
																		"nativeSrc": "5604:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5604:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5577:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5577:6:8"
																},
																"nativeSrc": "5577:45:8",
																"nodeType": "YulFunctionCall",
																"src": "5577:45:8"
															},
															"nativeSrc": "5577:45:8",
															"nodeType": "YulExpressionStatement",
															"src": "5577:45:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint8_t_uint8__to_t_address_t_address_t_uint8_t_uint8__fromStack_reversed",
												"nativeSrc": "5171:457:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5293:9:8",
														"nodeType": "YulTypedName",
														"src": "5293:9:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5304:6:8",
														"nodeType": "YulTypedName",
														"src": "5304:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5312:6:8",
														"nodeType": "YulTypedName",
														"src": "5312:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5320:6:8",
														"nodeType": "YulTypedName",
														"src": "5320:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5328:6:8",
														"nodeType": "YulTypedName",
														"src": "5328:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5339:4:8",
														"nodeType": "YulTypedName",
														"src": "5339:4:8",
														"type": ""
													}
												],
												"src": "5171:457:8"
											},
											{
												"body": {
													"nativeSrc": "5807:178:8",
													"nodeType": "YulBlock",
													"src": "5807:178:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5824:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5824:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5835:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5835:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5817:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5817:6:8"
																},
																"nativeSrc": "5817:21:8",
																"nodeType": "YulFunctionCall",
																"src": "5817:21:8"
															},
															"nativeSrc": "5817:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "5817:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5858:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5858:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5869:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5869:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5854:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5854:3:8"
																		},
																		"nativeSrc": "5854:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5854:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5874:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5874:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5847:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5847:6:8"
																},
																"nativeSrc": "5847:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5847:30:8"
															},
															"nativeSrc": "5847:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5847:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5897:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5897:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5908:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5908:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5893:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5893:3:8"
																		},
																		"nativeSrc": "5893:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5893:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c696420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "5913:30:8",
																		"nodeType": "YulLiteral",
																		"src": "5913:30:8",
																		"type": "",
																		"value": "OracleManager: invalid token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5886:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5886:6:8"
																},
																"nativeSrc": "5886:58:8",
																"nodeType": "YulFunctionCall",
																"src": "5886:58:8"
															},
															"nativeSrc": "5886:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "5886:58:8"
														},
														{
															"nativeSrc": "5953:26:8",
															"nodeType": "YulAssignment",
															"src": "5953:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5965:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5965:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5976:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5976:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5961:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5961:3:8"
																},
																"nativeSrc": "5961:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5961:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5953:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5953:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5633:352:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5784:9:8",
														"nodeType": "YulTypedName",
														"src": "5784:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5798:4:8",
														"nodeType": "YulTypedName",
														"src": "5798:4:8",
														"type": ""
													}
												],
												"src": "5633:352:8"
											},
											{
												"body": {
													"nativeSrc": "6164:238:8",
													"nodeType": "YulBlock",
													"src": "6164:238:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6181:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6181:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6192:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:8"
																},
																"nativeSrc": "6174:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6174:21:8"
															},
															"nativeSrc": "6174:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6174:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6215:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6215:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6226:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6226:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6211:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6211:3:8"
																		},
																		"nativeSrc": "6211:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6211:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6231:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6231:2:8",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6204:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6204:6:8"
																},
																"nativeSrc": "6204:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6204:30:8"
															},
															"nativeSrc": "6204:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6204:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6254:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6254:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6265:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6265:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6250:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6250:3:8"
																		},
																		"nativeSrc": "6250:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6250:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2061676772656761746f7220726571756972",
																		"kind": "string",
																		"nativeSrc": "6270:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6270:34:8",
																		"type": "",
																		"value": "OracleManager: aggregator requir"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6243:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6243:6:8"
																},
																"nativeSrc": "6243:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6243:62:8"
															},
															"nativeSrc": "6243:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "6243:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6325:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6325:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6336:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6336:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6321:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6321:3:8"
																		},
																		"nativeSrc": "6321:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6321:18:8"
																	},
																	{
																		"hexValue": "656420666f72206e6f6e2d7661756c74",
																		"kind": "string",
																		"nativeSrc": "6341:18:8",
																		"nodeType": "YulLiteral",
																		"src": "6341:18:8",
																		"type": "",
																		"value": "ed for non-vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6314:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6314:6:8"
																},
																"nativeSrc": "6314:46:8",
																"nodeType": "YulFunctionCall",
																"src": "6314:46:8"
															},
															"nativeSrc": "6314:46:8",
															"nodeType": "YulExpressionStatement",
															"src": "6314:46:8"
														},
														{
															"nativeSrc": "6369:27:8",
															"nodeType": "YulAssignment",
															"src": "6369:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6381:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6381:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6392:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6392:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6377:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6377:3:8"
																},
																"nativeSrc": "6377:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6377:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6369:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6369:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5990:412:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6141:9:8",
														"nodeType": "YulTypedName",
														"src": "6141:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6155:4:8",
														"nodeType": "YulTypedName",
														"src": "6155:4:8",
														"type": ""
													}
												],
												"src": "5990:412:8"
											},
											{
												"body": {
													"nativeSrc": "6581:228:8",
													"nodeType": "YulBlock",
													"src": "6581:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6598:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6598:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6609:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6609:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6591:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6591:6:8"
																},
																"nativeSrc": "6591:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6591:21:8"
															},
															"nativeSrc": "6591:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6591:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6632:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6632:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6643:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6643:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6628:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:8"
																		},
																		"nativeSrc": "6628:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6628:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6648:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6648:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6621:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:8"
																},
																"nativeSrc": "6621:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6621:30:8"
															},
															"nativeSrc": "6621:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6621:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6671:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6671:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6682:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6682:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6667:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6667:3:8"
																		},
																		"nativeSrc": "6667:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6667:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "6687:34:8",
																		"nodeType": "YulLiteral",
																		"src": "6687:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6660:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:8"
																},
																"nativeSrc": "6660:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6660:62:8"
															},
															"nativeSrc": "6660:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "6660:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6742:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6742:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6753:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6753:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6738:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6738:3:8"
																		},
																		"nativeSrc": "6738:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6738:18:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "6758:8:8",
																		"nodeType": "YulLiteral",
																		"src": "6758:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6731:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:8"
																},
																"nativeSrc": "6731:36:8",
																"nodeType": "YulFunctionCall",
																"src": "6731:36:8"
															},
															"nativeSrc": "6731:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "6731:36:8"
														},
														{
															"nativeSrc": "6776:27:8",
															"nodeType": "YulAssignment",
															"src": "6776:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6788:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6788:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6799:3:8",
																		"nodeType": "YulLiteral",
																		"src": "6799:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6784:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:8"
																},
																"nativeSrc": "6784:19:8",
																"nodeType": "YulFunctionCall",
																"src": "6784:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6776:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6776:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6407:402:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6558:9:8",
														"nodeType": "YulTypedName",
														"src": "6558:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6572:4:8",
														"nodeType": "YulTypedName",
														"src": "6572:4:8",
														"type": ""
													}
												],
												"src": "6407:402:8"
											},
											{
												"body": {
													"nativeSrc": "6988:229:8",
													"nodeType": "YulBlock",
													"src": "6988:229:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7005:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7005:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7016:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7016:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6998:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6998:6:8"
																},
																"nativeSrc": "6998:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6998:21:8"
															},
															"nativeSrc": "6998:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6998:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7039:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7039:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7050:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7050:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7035:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:8"
																		},
																		"nativeSrc": "7035:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7035:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7055:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7055:2:8",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7028:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:8"
																},
																"nativeSrc": "7028:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7028:30:8"
															},
															"nativeSrc": "7028:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7028:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7078:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7078:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7089:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7089:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7074:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7074:3:8"
																		},
																		"nativeSrc": "7074:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7074:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2066616c6c6261636b206167677265676174",
																		"kind": "string",
																		"nativeSrc": "7094:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7094:34:8",
																		"type": "",
																		"value": "OracleManager: fallback aggregat"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7067:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7067:6:8"
																},
																"nativeSrc": "7067:62:8",
																"nodeType": "YulFunctionCall",
																"src": "7067:62:8"
															},
															"nativeSrc": "7067:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "7067:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7149:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7149:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7160:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7160:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7145:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7145:3:8"
																		},
																		"nativeSrc": "7145:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7145:18:8"
																	},
																	{
																		"hexValue": "6f72206661696c",
																		"kind": "string",
																		"nativeSrc": "7165:9:8",
																		"nodeType": "YulLiteral",
																		"src": "7165:9:8",
																		"type": "",
																		"value": "or fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7138:6:8"
																},
																"nativeSrc": "7138:37:8",
																"nodeType": "YulFunctionCall",
																"src": "7138:37:8"
															},
															"nativeSrc": "7138:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "7138:37:8"
														},
														{
															"nativeSrc": "7184:27:8",
															"nodeType": "YulAssignment",
															"src": "7184:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7196:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7196:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7207:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7207:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7192:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7192:3:8"
																},
																"nativeSrc": "7192:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7192:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7184:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7184:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6814:403:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6965:9:8",
														"nodeType": "YulTypedName",
														"src": "6965:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6979:4:8",
														"nodeType": "YulTypedName",
														"src": "6979:4:8",
														"type": ""
													}
												],
												"src": "6814:403:8"
											},
											{
												"body": {
													"nativeSrc": "7396:228:8",
													"nodeType": "YulBlock",
													"src": "7396:228:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7413:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7413:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7424:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7424:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7406:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7406:6:8"
																},
																"nativeSrc": "7406:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7406:21:8"
															},
															"nativeSrc": "7406:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7406:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7447:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7447:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7458:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7458:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7443:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7443:3:8"
																		},
																		"nativeSrc": "7443:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7443:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7463:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7463:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7436:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:8"
																},
																"nativeSrc": "7436:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7436:30:8"
															},
															"nativeSrc": "7436:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7436:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7486:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7486:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7497:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7497:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7482:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7482:3:8"
																		},
																		"nativeSrc": "7482:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7482:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a207072696d6172792061676772656761746f",
																		"kind": "string",
																		"nativeSrc": "7502:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7502:34:8",
																		"type": "",
																		"value": "OracleManager: primary aggregato"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7475:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7475:6:8"
																},
																"nativeSrc": "7475:62:8",
																"nodeType": "YulFunctionCall",
																"src": "7475:62:8"
															},
															"nativeSrc": "7475:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "7475:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7557:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7557:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7568:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7568:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7553:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7553:3:8"
																		},
																		"nativeSrc": "7553:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7553:18:8"
																	},
																	{
																		"hexValue": "72206661696c",
																		"kind": "string",
																		"nativeSrc": "7573:8:8",
																		"nodeType": "YulLiteral",
																		"src": "7573:8:8",
																		"type": "",
																		"value": "r fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7546:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7546:6:8"
																},
																"nativeSrc": "7546:36:8",
																"nodeType": "YulFunctionCall",
																"src": "7546:36:8"
															},
															"nativeSrc": "7546:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "7546:36:8"
														},
														{
															"nativeSrc": "7591:27:8",
															"nodeType": "YulAssignment",
															"src": "7591:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7603:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7603:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7614:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7614:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7599:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7599:3:8"
																},
																"nativeSrc": "7599:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7599:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7591:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7591:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7222:402:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7373:9:8",
														"nodeType": "YulTypedName",
														"src": "7373:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7387:4:8",
														"nodeType": "YulTypedName",
														"src": "7387:4:8",
														"type": ""
													}
												],
												"src": "7222:402:8"
											},
											{
												"body": {
													"nativeSrc": "7710:170:8",
													"nodeType": "YulBlock",
													"src": "7710:170:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7756:16:8",
																"nodeType": "YulBlock",
																"src": "7756:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7765:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7765:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7768:1:8",
																					"nodeType": "YulLiteral",
																					"src": "7768:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7758:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7758:6:8"
																			},
																			"nativeSrc": "7758:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7758:12:8"
																		},
																		"nativeSrc": "7758:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7758:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7731:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7731:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7740:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7740:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7727:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7727:3:8"
																		},
																		"nativeSrc": "7727:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7727:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7752:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7752:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7723:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7723:3:8"
																},
																"nativeSrc": "7723:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7723:32:8"
															},
															"nativeSrc": "7720:52:8",
															"nodeType": "YulIf",
															"src": "7720:52:8"
														},
														{
															"nativeSrc": "7781:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7781:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7800:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7800:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7794:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "7794:5:8"
																},
																"nativeSrc": "7794:16:8",
																"nodeType": "YulFunctionCall",
																"src": "7794:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7785:5:8",
																	"nodeType": "YulTypedName",
																	"src": "7785:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7844:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7844:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7819:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "7819:24:8"
																},
																"nativeSrc": "7819:31:8",
																"nodeType": "YulFunctionCall",
																"src": "7819:31:8"
															},
															"nativeSrc": "7819:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "7819:31:8"
														},
														{
															"nativeSrc": "7859:15:8",
															"nodeType": "YulAssignment",
															"src": "7859:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "7869:5:8",
																"nodeType": "YulIdentifier",
																"src": "7869:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7859:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "7629:251:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7676:9:8",
														"nodeType": "YulTypedName",
														"src": "7676:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7687:7:8",
														"nodeType": "YulTypedName",
														"src": "7687:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7699:6:8",
														"nodeType": "YulTypedName",
														"src": "7699:6:8",
														"type": ""
													}
												],
												"src": "7629:251:8"
											},
											{
												"body": {
													"nativeSrc": "7917:95:8",
													"nodeType": "YulBlock",
													"src": "7917:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7934:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7934:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7941:3:8",
																				"nodeType": "YulLiteral",
																				"src": "7941:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7946:10:8",
																				"nodeType": "YulLiteral",
																				"src": "7946:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7937:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7937:3:8"
																		},
																		"nativeSrc": "7937:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7937:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7927:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7927:6:8"
																},
																"nativeSrc": "7927:31:8",
																"nodeType": "YulFunctionCall",
																"src": "7927:31:8"
															},
															"nativeSrc": "7927:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "7927:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7974:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7974:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7977:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7977:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7967:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7967:6:8"
																},
																"nativeSrc": "7967:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7967:15:8"
															},
															"nativeSrc": "7967:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7967:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7998:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7998:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8001:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8001:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7991:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7991:6:8"
																},
																"nativeSrc": "7991:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7991:15:8"
															},
															"nativeSrc": "7991:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "7991:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7885:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "7885:127:8"
											},
											{
												"body": {
													"nativeSrc": "8065:77:8",
													"nodeType": "YulBlock",
													"src": "8065:77:8",
													"statements": [
														{
															"nativeSrc": "8075:16:8",
															"nodeType": "YulAssignment",
															"src": "8075:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8086:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8086:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8089:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8089:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8082:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8082:3:8"
																},
																"nativeSrc": "8082:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8082:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8075:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8075:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8114:22:8",
																"nodeType": "YulBlock",
																"src": "8114:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8116:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "8116:16:8"
																			},
																			"nativeSrc": "8116:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8116:18:8"
																		},
																		"nativeSrc": "8116:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8116:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8106:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8106:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8109:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8109:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8103:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8103:2:8"
																},
																"nativeSrc": "8103:10:8",
																"nodeType": "YulFunctionCall",
																"src": "8103:10:8"
															},
															"nativeSrc": "8100:36:8",
															"nodeType": "YulIf",
															"src": "8100:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8017:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8048:1:8",
														"nodeType": "YulTypedName",
														"src": "8048:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8051:1:8",
														"nodeType": "YulTypedName",
														"src": "8051:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8057:3:8",
														"nodeType": "YulTypedName",
														"src": "8057:3:8",
														"type": ""
													}
												],
												"src": "8017:125:8"
											},
											{
												"body": {
													"nativeSrc": "8179:95:8",
													"nodeType": "YulBlock",
													"src": "8179:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8196:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8196:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8203:3:8",
																				"nodeType": "YulLiteral",
																				"src": "8203:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8208:10:8",
																				"nodeType": "YulLiteral",
																				"src": "8208:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8199:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8199:3:8"
																		},
																		"nativeSrc": "8199:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8199:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8189:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8189:6:8"
																},
																"nativeSrc": "8189:31:8",
																"nodeType": "YulFunctionCall",
																"src": "8189:31:8"
															},
															"nativeSrc": "8189:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "8189:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8236:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8236:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8239:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8239:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8229:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8229:6:8"
																},
																"nativeSrc": "8229:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8229:15:8"
															},
															"nativeSrc": "8229:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8229:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8260:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8260:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8263:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8263:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8253:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8253:6:8"
																},
																"nativeSrc": "8253:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8253:15:8"
															},
															"nativeSrc": "8253:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "8253:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8147:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8147:127:8"
											},
											{
												"body": {
													"nativeSrc": "8325:171:8",
													"nodeType": "YulBlock",
													"src": "8325:171:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8356:111:8",
																"nodeType": "YulBlock",
																"src": "8356:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8377:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8377:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8384:3:8",
																							"nodeType": "YulLiteral",
																							"src": "8384:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8389:10:8",
																							"nodeType": "YulLiteral",
																							"src": "8389:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8380:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "8380:3:8"
																					},
																					"nativeSrc": "8380:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8380:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8370:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8370:6:8"
																			},
																			"nativeSrc": "8370:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8370:31:8"
																		},
																		"nativeSrc": "8370:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8370:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8421:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8421:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8424:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8424:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8414:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8414:6:8"
																			},
																			"nativeSrc": "8414:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8414:15:8"
																		},
																		"nativeSrc": "8414:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8414:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8449:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8449:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8452:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8452:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8442:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8442:6:8"
																			},
																			"nativeSrc": "8442:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8442:15:8"
																		},
																		"nativeSrc": "8442:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8442:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8345:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8345:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8338:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8338:6:8"
																},
																"nativeSrc": "8338:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8338:9:8"
															},
															"nativeSrc": "8335:132:8",
															"nodeType": "YulIf",
															"src": "8335:132:8"
														},
														{
															"nativeSrc": "8476:14:8",
															"nodeType": "YulAssignment",
															"src": "8476:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8485:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8485:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8488:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8488:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8481:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8481:3:8"
																},
																"nativeSrc": "8481:9:8",
																"nodeType": "YulFunctionCall",
																"src": "8481:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8476:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "8476:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8279:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8310:1:8",
														"nodeType": "YulTypedName",
														"src": "8310:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8313:1:8",
														"nodeType": "YulTypedName",
														"src": "8313:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8319:1:8",
														"nodeType": "YulTypedName",
														"src": "8319:1:8",
														"type": ""
													}
												],
												"src": "8279:217:8"
											},
											{
												"body": {
													"nativeSrc": "8675:182:8",
													"nodeType": "YulBlock",
													"src": "8675:182:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8692:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8692:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8703:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8703:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8685:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8685:6:8"
																},
																"nativeSrc": "8685:21:8",
																"nodeType": "YulFunctionCall",
																"src": "8685:21:8"
															},
															"nativeSrc": "8685:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "8685:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8726:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8726:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8737:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8737:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8722:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8722:3:8"
																		},
																		"nativeSrc": "8722:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8722:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8742:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8742:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8715:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8715:6:8"
																},
																"nativeSrc": "8715:30:8",
																"nodeType": "YulFunctionCall",
																"src": "8715:30:8"
															},
															"nativeSrc": "8715:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "8715:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8765:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8765:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8776:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8776:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8761:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8761:3:8"
																		},
																		"nativeSrc": "8761:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8761:18:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "8781:34:8",
																		"nodeType": "YulLiteral",
																		"src": "8781:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8754:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8754:6:8"
																},
																"nativeSrc": "8754:62:8",
																"nodeType": "YulFunctionCall",
																"src": "8754:62:8"
															},
															"nativeSrc": "8754:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "8754:62:8"
														},
														{
															"nativeSrc": "8825:26:8",
															"nodeType": "YulAssignment",
															"src": "8825:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8837:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8837:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8848:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8848:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8833:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8833:3:8"
																},
																"nativeSrc": "8833:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8833:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8825:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8825:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8501:356:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8652:9:8",
														"nodeType": "YulTypedName",
														"src": "8652:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8666:4:8",
														"nodeType": "YulTypedName",
														"src": "8666:4:8",
														"type": ""
													}
												],
												"src": "8501:356:8"
											},
											{
												"body": {
													"nativeSrc": "8928:184:8",
													"nodeType": "YulBlock",
													"src": "8928:184:8",
													"statements": [
														{
															"nativeSrc": "8938:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8938:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "8947:1:8",
																"nodeType": "YulLiteral",
																"src": "8947:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "8942:1:8",
																	"nodeType": "YulTypedName",
																	"src": "8942:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9007:63:8",
																"nodeType": "YulBlock",
																"src": "9007:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "9032:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "9032:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "9037:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "9037:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9028:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "9028:3:8"
																					},
																					"nativeSrc": "9028:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9028:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "9051:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "9051:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "9056:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "9056:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9047:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "9047:3:8"
																							},
																							"nativeSrc": "9047:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "9047:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "9041:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9041:5:8"
																					},
																					"nativeSrc": "9041:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "9041:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9021:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9021:6:8"
																			},
																			"nativeSrc": "9021:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9021:39:8"
																		},
																		"nativeSrc": "9021:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9021:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "8968:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "8968:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8971:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8971:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8965:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "8965:2:8"
																},
																"nativeSrc": "8965:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8965:13:8"
															},
															"nativeSrc": "8957:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8979:19:8",
																"nodeType": "YulBlock",
																"src": "8979:19:8",
																"statements": [
																	{
																		"nativeSrc": "8981:15:8",
																		"nodeType": "YulAssignment",
																		"src": "8981:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "8990:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "8990:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8993:2:8",
																					"nodeType": "YulLiteral",
																					"src": "8993:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8986:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "8986:3:8"
																			},
																			"nativeSrc": "8986:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8986:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "8981:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "8981:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8961:3:8",
																"nodeType": "YulBlock",
																"src": "8961:3:8",
																"statements": []
															},
															"src": "8957:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9090:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9090:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9095:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9095:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9086:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9086:3:8"
																		},
																		"nativeSrc": "9086:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9086:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9104:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9104:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9079:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9079:6:8"
																},
																"nativeSrc": "9079:27:8",
																"nodeType": "YulFunctionCall",
																"src": "9079:27:8"
															},
															"nativeSrc": "9079:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "9079:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "8862:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8906:3:8",
														"nodeType": "YulTypedName",
														"src": "8906:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8911:3:8",
														"nodeType": "YulTypedName",
														"src": "8911:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8916:6:8",
														"nodeType": "YulTypedName",
														"src": "8916:6:8",
														"type": ""
													}
												],
												"src": "8862:250:8"
											},
											{
												"body": {
													"nativeSrc": "9254:150:8",
													"nodeType": "YulBlock",
													"src": "9254:150:8",
													"statements": [
														{
															"nativeSrc": "9264:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9264:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9284:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9284:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9278:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9278:5:8"
																},
																"nativeSrc": "9278:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9278:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9268:6:8",
																	"nodeType": "YulTypedName",
																	"src": "9268:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9339:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9339:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9347:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9347:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9335:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9335:3:8"
																		},
																		"nativeSrc": "9335:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9335:17:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9354:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9354:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9359:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9359:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9300:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "9300:34:8"
																},
																"nativeSrc": "9300:66:8",
																"nodeType": "YulFunctionCall",
																"src": "9300:66:8"
															},
															"nativeSrc": "9300:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "9300:66:8"
														},
														{
															"nativeSrc": "9375:23:8",
															"nodeType": "YulAssignment",
															"src": "9375:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9386:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9386:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9391:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9391:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9382:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9382:3:8"
																},
																"nativeSrc": "9382:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9382:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9375:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9375:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9117:287:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9230:3:8",
														"nodeType": "YulTypedName",
														"src": "9230:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9235:6:8",
														"nodeType": "YulTypedName",
														"src": "9235:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9246:3:8",
														"nodeType": "YulTypedName",
														"src": "9246:3:8",
														"type": ""
													}
												],
												"src": "9117:287:8"
											},
											{
												"body": {
													"nativeSrc": "9468:120:8",
													"nodeType": "YulBlock",
													"src": "9468:120:8",
													"statements": [
														{
															"nativeSrc": "9478:22:8",
															"nodeType": "YulAssignment",
															"src": "9478:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9493:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9493:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9487:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9487:5:8"
																},
																"nativeSrc": "9487:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9487:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9478:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9478:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9566:16:8",
																"nodeType": "YulBlock",
																"src": "9566:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9575:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9575:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9578:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9578:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9568:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9568:6:8"
																			},
																			"nativeSrc": "9568:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9568:12:8"
																		},
																		"nativeSrc": "9568:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9568:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9522:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9522:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9533:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9533:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9540:22:8",
																						"nodeType": "YulLiteral",
																						"src": "9540:22:8",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "9529:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "9529:3:8"
																				},
																				"nativeSrc": "9529:34:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9529:34:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9519:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9519:2:8"
																		},
																		"nativeSrc": "9519:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9519:45:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9512:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9512:6:8"
																},
																"nativeSrc": "9512:53:8",
																"nodeType": "YulFunctionCall",
																"src": "9512:53:8"
															},
															"nativeSrc": "9509:73:8",
															"nodeType": "YulIf",
															"src": "9509:73:8"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "9409:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9447:6:8",
														"nodeType": "YulTypedName",
														"src": "9447:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9458:5:8",
														"nodeType": "YulTypedName",
														"src": "9458:5:8",
														"type": ""
													}
												],
												"src": "9409:179:8"
											},
											{
												"body": {
													"nativeSrc": "9739:425:8",
													"nodeType": "YulBlock",
													"src": "9739:425:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "9786:16:8",
																"nodeType": "YulBlock",
																"src": "9786:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9795:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9795:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9798:1:8",
																					"nodeType": "YulLiteral",
																					"src": "9798:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9788:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9788:6:8"
																			},
																			"nativeSrc": "9788:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9788:12:8"
																		},
																		"nativeSrc": "9788:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9788:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9760:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "9760:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9769:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9769:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9756:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:8"
																		},
																		"nativeSrc": "9756:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9756:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9781:3:8",
																		"nodeType": "YulLiteral",
																		"src": "9781:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9752:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9752:3:8"
																},
																"nativeSrc": "9752:33:8",
																"nodeType": "YulFunctionCall",
																"src": "9752:33:8"
															},
															"nativeSrc": "9749:53:8",
															"nodeType": "YulIf",
															"src": "9749:53:8"
														},
														{
															"nativeSrc": "9811:49:8",
															"nodeType": "YulAssignment",
															"src": "9811:49:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9850:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9850:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "9821:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "9821:28:8"
																},
																"nativeSrc": "9821:39:8",
																"nodeType": "YulFunctionCall",
																"src": "9821:39:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9811:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9811:6:8"
																}
															]
														},
														{
															"nativeSrc": "9869:35:8",
															"nodeType": "YulAssignment",
															"src": "9869:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9889:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9889:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9900:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9900:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9885:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9885:3:8"
																		},
																		"nativeSrc": "9885:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9885:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9879:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9879:5:8"
																},
																"nativeSrc": "9879:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9879:25:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "9869:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9869:6:8"
																}
															]
														},
														{
															"nativeSrc": "9913:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9913:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "9926:1:8",
																"nodeType": "YulLiteral",
																"src": "9926:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9917:5:8",
																	"nodeType": "YulTypedName",
																	"src": "9917:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9936:34:8",
															"nodeType": "YulAssignment",
															"src": "9936:34:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9955:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9955:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9966:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9966:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9951:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9951:3:8"
																		},
																		"nativeSrc": "9951:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9951:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9945:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9945:5:8"
																},
																"nativeSrc": "9945:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9945:25:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9936:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9936:5:8"
																}
															]
														},
														{
															"nativeSrc": "9979:15:8",
															"nodeType": "YulAssignment",
															"src": "9979:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "9989:5:8",
																"nodeType": "YulIdentifier",
																"src": "9989:5:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "9979:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9979:6:8"
																}
															]
														},
														{
															"nativeSrc": "10003:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10003:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "10018:1:8",
																"nodeType": "YulLiteral",
																"src": "10018:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "10007:7:8",
																	"nodeType": "YulTypedName",
																	"src": "10007:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10028:36:8",
															"nodeType": "YulAssignment",
															"src": "10028:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10049:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10049:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10060:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10060:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10045:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10045:3:8"
																		},
																		"nativeSrc": "10045:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10045:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10039:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10039:5:8"
																},
																"nativeSrc": "10039:25:8",
																"nodeType": "YulFunctionCall",
																"src": "10039:25:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "10028:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "10028:7:8"
																}
															]
														},
														{
															"nativeSrc": "10073:17:8",
															"nodeType": "YulAssignment",
															"src": "10073:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "10083:7:8",
																"nodeType": "YulIdentifier",
																"src": "10083:7:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "10073:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10073:6:8"
																}
															]
														},
														{
															"nativeSrc": "10099:59:8",
															"nodeType": "YulAssignment",
															"src": "10099:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10142:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10142:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10153:3:8",
																				"nodeType": "YulLiteral",
																				"src": "10153:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10138:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10138:3:8"
																		},
																		"nativeSrc": "10138:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10138:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "10109:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "10109:28:8"
																},
																"nativeSrc": "10109:49:8",
																"nodeType": "YulFunctionCall",
																"src": "10109:49:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "10099:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10099:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "9593:571:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9673:9:8",
														"nodeType": "YulTypedName",
														"src": "9673:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9684:7:8",
														"nodeType": "YulTypedName",
														"src": "9684:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9696:6:8",
														"nodeType": "YulTypedName",
														"src": "9696:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9704:6:8",
														"nodeType": "YulTypedName",
														"src": "9704:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9712:6:8",
														"nodeType": "YulTypedName",
														"src": "9712:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9720:6:8",
														"nodeType": "YulTypedName",
														"src": "9720:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9728:6:8",
														"nodeType": "YulTypedName",
														"src": "9728:6:8",
														"type": ""
													}
												],
												"src": "9593:571:8"
											},
											{
												"body": {
													"nativeSrc": "10248:168:8",
													"nodeType": "YulBlock",
													"src": "10248:168:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10294:16:8",
																"nodeType": "YulBlock",
																"src": "10294:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10303:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10303:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10306:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10306:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10296:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10296:6:8"
																			},
																			"nativeSrc": "10296:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10296:12:8"
																		},
																		"nativeSrc": "10296:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10296:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10269:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10269:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10278:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10278:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10265:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10265:3:8"
																		},
																		"nativeSrc": "10265:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10265:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10290:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10290:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10261:3:8"
																},
																"nativeSrc": "10261:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10261:32:8"
															},
															"nativeSrc": "10258:52:8",
															"nodeType": "YulIf",
															"src": "10258:52:8"
														},
														{
															"nativeSrc": "10319:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10319:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10338:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10338:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10332:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10332:5:8"
																},
																"nativeSrc": "10332:16:8",
																"nodeType": "YulFunctionCall",
																"src": "10332:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10323:5:8",
																	"nodeType": "YulTypedName",
																	"src": "10323:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10380:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "10380:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "10357:22:8",
																	"nodeType": "YulIdentifier",
																	"src": "10357:22:8"
																},
																"nativeSrc": "10357:29:8",
																"nodeType": "YulFunctionCall",
																"src": "10357:29:8"
															},
															"nativeSrc": "10357:29:8",
															"nodeType": "YulExpressionStatement",
															"src": "10357:29:8"
														},
														{
															"nativeSrc": "10395:15:8",
															"nodeType": "YulAssignment",
															"src": "10395:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "10405:5:8",
																"nodeType": "YulIdentifier",
																"src": "10405:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10395:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10395:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "10169:247:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10214:9:8",
														"nodeType": "YulTypedName",
														"src": "10214:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10225:7:8",
														"nodeType": "YulTypedName",
														"src": "10225:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10237:6:8",
														"nodeType": "YulTypedName",
														"src": "10237:6:8",
														"type": ""
													}
												],
												"src": "10169:247:8"
											},
											{
												"body": {
													"nativeSrc": "10502:149:8",
													"nodeType": "YulBlock",
													"src": "10502:149:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "10548:16:8",
																"nodeType": "YulBlock",
																"src": "10548:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10557:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10557:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10560:1:8",
																					"nodeType": "YulLiteral",
																					"src": "10560:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10550:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "10550:6:8"
																			},
																			"nativeSrc": "10550:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10550:12:8"
																		},
																		"nativeSrc": "10550:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10550:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10523:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "10523:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10532:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10532:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10519:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10519:3:8"
																		},
																		"nativeSrc": "10519:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10519:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10544:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10544:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10515:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10515:3:8"
																},
																"nativeSrc": "10515:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10515:32:8"
															},
															"nativeSrc": "10512:52:8",
															"nodeType": "YulIf",
															"src": "10512:52:8"
														},
														{
															"nativeSrc": "10573:14:8",
															"nodeType": "YulVariableDeclaration",
															"src": "10573:14:8",
															"value": {
																"kind": "number",
																"nativeSrc": "10586:1:8",
																"nodeType": "YulLiteral",
																"src": "10586:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10577:5:8",
																	"nodeType": "YulTypedName",
																	"src": "10577:5:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10596:25:8",
															"nodeType": "YulAssignment",
															"src": "10596:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10611:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10611:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10605:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10605:5:8"
																},
																"nativeSrc": "10605:16:8",
																"nodeType": "YulFunctionCall",
																"src": "10605:16:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10596:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "10596:5:8"
																}
															]
														},
														{
															"nativeSrc": "10630:15:8",
															"nodeType": "YulAssignment",
															"src": "10630:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "10640:5:8",
																"nodeType": "YulIdentifier",
																"src": "10640:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10630:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10421:230:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10468:9:8",
														"nodeType": "YulTypedName",
														"src": "10468:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10479:7:8",
														"nodeType": "YulTypedName",
														"src": "10479:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10491:6:8",
														"nodeType": "YulTypedName",
														"src": "10491:6:8",
														"type": ""
													}
												],
												"src": "10421:230:8"
											},
											{
												"body": {
													"nativeSrc": "10830:224:8",
													"nodeType": "YulBlock",
													"src": "10830:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10847:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10847:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10858:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10858:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10840:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10840:6:8"
																},
																"nativeSrc": "10840:21:8",
																"nodeType": "YulFunctionCall",
																"src": "10840:21:8"
															},
															"nativeSrc": "10840:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "10840:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10881:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10881:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10892:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10892:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10877:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10877:3:8"
																		},
																		"nativeSrc": "10877:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10877:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10897:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10897:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10870:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10870:6:8"
																},
																"nativeSrc": "10870:30:8",
																"nodeType": "YulFunctionCall",
																"src": "10870:30:8"
															},
															"nativeSrc": "10870:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "10870:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10920:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10920:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10931:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10931:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10916:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10916:3:8"
																		},
																		"nativeSrc": "10916:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10916:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a207661756c7420746f74616c537570706c79",
																		"kind": "string",
																		"nativeSrc": "10936:34:8",
																		"nodeType": "YulLiteral",
																		"src": "10936:34:8",
																		"type": "",
																		"value": "OracleManager: vault totalSupply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10909:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10909:6:8"
																},
																"nativeSrc": "10909:62:8",
																"nodeType": "YulFunctionCall",
																"src": "10909:62:8"
															},
															"nativeSrc": "10909:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "10909:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10991:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10991:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11002:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11002:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10987:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10987:3:8"
																		},
																		"nativeSrc": "10987:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10987:18:8"
																	},
																	{
																		"hexValue": "3d30",
																		"kind": "string",
																		"nativeSrc": "11007:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11007:4:8",
																		"type": "",
																		"value": "=0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10980:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10980:6:8"
																},
																"nativeSrc": "10980:32:8",
																"nodeType": "YulFunctionCall",
																"src": "10980:32:8"
															},
															"nativeSrc": "10980:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "10980:32:8"
														},
														{
															"nativeSrc": "11021:27:8",
															"nodeType": "YulAssignment",
															"src": "11021:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11033:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11033:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11044:3:8",
																		"nodeType": "YulLiteral",
																		"src": "11044:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11029:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11029:3:8"
																},
																"nativeSrc": "11029:19:8",
																"nodeType": "YulFunctionCall",
																"src": "11029:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11021:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11021:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10656:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10807:9:8",
														"nodeType": "YulTypedName",
														"src": "10807:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10821:4:8",
														"nodeType": "YulTypedName",
														"src": "10821:4:8",
														"type": ""
													}
												],
												"src": "10656:398:8"
											},
											{
												"body": {
													"nativeSrc": "11233:180:8",
													"nodeType": "YulBlock",
													"src": "11233:180:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11250:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11250:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11261:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11261:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11243:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11243:6:8"
																},
																"nativeSrc": "11243:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11243:21:8"
															},
															"nativeSrc": "11243:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "11243:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11284:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11284:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11295:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11295:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11280:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11280:3:8"
																		},
																		"nativeSrc": "11280:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11280:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11300:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11300:2:8",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11273:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11273:6:8"
																},
																"nativeSrc": "11273:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11273:30:8"
															},
															"nativeSrc": "11273:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11273:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11323:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11323:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11334:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11334:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11319:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11319:3:8"
																		},
																		"nativeSrc": "11319:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11319:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a206e6f204e465420696e207661756c74",
																		"kind": "string",
																		"nativeSrc": "11339:32:8",
																		"nodeType": "YulLiteral",
																		"src": "11339:32:8",
																		"type": "",
																		"value": "OracleManager: no NFT in vault"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11312:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11312:6:8"
																},
																"nativeSrc": "11312:60:8",
																"nodeType": "YulFunctionCall",
																"src": "11312:60:8"
															},
															"nativeSrc": "11312:60:8",
															"nodeType": "YulExpressionStatement",
															"src": "11312:60:8"
														},
														{
															"nativeSrc": "11381:26:8",
															"nodeType": "YulAssignment",
															"src": "11381:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11393:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11393:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11404:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11404:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11389:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11389:3:8"
																},
																"nativeSrc": "11389:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11389:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11381:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11381:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11059:354:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11210:9:8",
														"nodeType": "YulTypedName",
														"src": "11210:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11224:4:8",
														"nodeType": "YulTypedName",
														"src": "11224:4:8",
														"type": ""
													}
												],
												"src": "11059:354:8"
											},
											{
												"body": {
													"nativeSrc": "11592:224:8",
													"nodeType": "YulBlock",
													"src": "11592:224:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11609:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11609:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11620:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11620:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11602:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11602:6:8"
																},
																"nativeSrc": "11602:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11602:21:8"
															},
															"nativeSrc": "11602:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "11602:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11643:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11643:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11654:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11654:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11639:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11639:3:8"
																		},
																		"nativeSrc": "11639:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11639:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11659:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11659:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11632:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11632:6:8"
																},
																"nativeSrc": "11632:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11632:30:8"
															},
															"nativeSrc": "11632:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "11632:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11682:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11682:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11693:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11693:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11678:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11678:3:8"
																		},
																		"nativeSrc": "11678:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11678:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c696420706f736974696f6e4d",
																		"kind": "string",
																		"nativeSrc": "11698:34:8",
																		"nodeType": "YulLiteral",
																		"src": "11698:34:8",
																		"type": "",
																		"value": "OracleManager: invalid positionM"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11671:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11671:6:8"
																},
																"nativeSrc": "11671:62:8",
																"nodeType": "YulFunctionCall",
																"src": "11671:62:8"
															},
															"nativeSrc": "11671:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "11671:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11753:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "11753:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11764:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11764:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11749:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11749:3:8"
																		},
																		"nativeSrc": "11749:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11749:18:8"
																	},
																	{
																		"hexValue": "6772",
																		"kind": "string",
																		"nativeSrc": "11769:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11769:4:8",
																		"type": "",
																		"value": "gr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11742:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11742:6:8"
																},
																"nativeSrc": "11742:32:8",
																"nodeType": "YulFunctionCall",
																"src": "11742:32:8"
															},
															"nativeSrc": "11742:32:8",
															"nodeType": "YulExpressionStatement",
															"src": "11742:32:8"
														},
														{
															"nativeSrc": "11783:27:8",
															"nodeType": "YulAssignment",
															"src": "11783:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11795:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11795:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11806:3:8",
																		"nodeType": "YulLiteral",
																		"src": "11806:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11791:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11791:3:8"
																},
																"nativeSrc": "11791:19:8",
																"nodeType": "YulFunctionCall",
																"src": "11791:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11783:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11783:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11418:398:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11569:9:8",
														"nodeType": "YulTypedName",
														"src": "11569:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11583:4:8",
														"nodeType": "YulTypedName",
														"src": "11583:4:8",
														"type": ""
													}
												],
												"src": "11418:398:8"
											},
											{
												"body": {
													"nativeSrc": "11922:76:8",
													"nodeType": "YulBlock",
													"src": "11922:76:8",
													"statements": [
														{
															"nativeSrc": "11932:26:8",
															"nodeType": "YulAssignment",
															"src": "11932:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11944:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11944:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11955:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11955:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11940:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11940:3:8"
																},
																"nativeSrc": "11940:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11940:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11932:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11932:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11974:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11974:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11985:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "11985:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11967:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11967:6:8"
																},
																"nativeSrc": "11967:25:8",
																"nodeType": "YulFunctionCall",
																"src": "11967:25:8"
															},
															"nativeSrc": "11967:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "11967:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11821:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11891:9:8",
														"nodeType": "YulTypedName",
														"src": "11891:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11902:6:8",
														"nodeType": "YulTypedName",
														"src": "11902:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11913:4:8",
														"nodeType": "YulTypedName",
														"src": "11913:4:8",
														"type": ""
													}
												],
												"src": "11821:177:8"
											},
											{
												"body": {
													"nativeSrc": "12124:275:8",
													"nodeType": "YulBlock",
													"src": "12124:275:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12141:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "12141:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12152:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12152:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12134:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12134:6:8"
																},
																"nativeSrc": "12134:21:8",
																"nodeType": "YulFunctionCall",
																"src": "12134:21:8"
															},
															"nativeSrc": "12134:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "12134:21:8"
														},
														{
															"nativeSrc": "12164:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12164:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12184:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12184:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12178:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12178:5:8"
																},
																"nativeSrc": "12178:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12178:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12168:6:8",
																	"nodeType": "YulTypedName",
																	"src": "12168:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12211:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12211:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12222:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12222:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12207:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12207:3:8"
																		},
																		"nativeSrc": "12207:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12207:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12227:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12227:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12200:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12200:6:8"
																},
																"nativeSrc": "12200:34:8",
																"nodeType": "YulFunctionCall",
																"src": "12200:34:8"
															},
															"nativeSrc": "12200:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "12200:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12282:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12282:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12290:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12290:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12278:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12278:3:8"
																		},
																		"nativeSrc": "12278:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12278:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12299:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12299:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12310:2:8",
																				"nodeType": "YulLiteral",
																				"src": "12310:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12295:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12295:3:8"
																		},
																		"nativeSrc": "12295:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12295:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12315:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12315:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12243:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "12243:34:8"
																},
																"nativeSrc": "12243:79:8",
																"nodeType": "YulFunctionCall",
																"src": "12243:79:8"
															},
															"nativeSrc": "12243:79:8",
															"nodeType": "YulExpressionStatement",
															"src": "12243:79:8"
														},
														{
															"nativeSrc": "12331:62:8",
															"nodeType": "YulAssignment",
															"src": "12331:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12347:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "12347:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "12366:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "12366:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12374:2:8",
																								"nodeType": "YulLiteral",
																								"src": "12374:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "12362:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "12362:3:8"
																						},
																						"nativeSrc": "12362:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12362:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12383:2:8",
																								"nodeType": "YulLiteral",
																								"src": "12383:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "12379:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "12379:3:8"
																						},
																						"nativeSrc": "12379:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "12379:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "12358:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12358:3:8"
																				},
																				"nativeSrc": "12358:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12358:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12343:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "12343:3:8"
																		},
																		"nativeSrc": "12343:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12343:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12390:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12390:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12339:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12339:3:8"
																},
																"nativeSrc": "12339:54:8",
																"nodeType": "YulFunctionCall",
																"src": "12339:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12331:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "12331:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12003:396:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12093:9:8",
														"nodeType": "YulTypedName",
														"src": "12093:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12104:6:8",
														"nodeType": "YulTypedName",
														"src": "12104:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12115:4:8",
														"nodeType": "YulTypedName",
														"src": "12115:4:8",
														"type": ""
													}
												],
												"src": "12003:396:8"
											},
											{
												"body": {
													"nativeSrc": "12472:78:8",
													"nodeType": "YulBlock",
													"src": "12472:78:8",
													"statements": [
														{
															"nativeSrc": "12482:22:8",
															"nodeType": "YulAssignment",
															"src": "12482:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12497:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12497:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12491:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12491:5:8"
																},
																"nativeSrc": "12491:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12491:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12482:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12482:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12538:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12538:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "12513:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "12513:24:8"
																},
																"nativeSrc": "12513:31:8",
																"nodeType": "YulFunctionCall",
																"src": "12513:31:8"
															},
															"nativeSrc": "12513:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "12513:31:8"
														}
													]
												},
												"name": "abi_decode_address_payable_fromMemory",
												"nativeSrc": "12404:146:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12451:6:8",
														"nodeType": "YulTypedName",
														"src": "12451:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12462:5:8",
														"nodeType": "YulTypedName",
														"src": "12462:5:8",
														"type": ""
													}
												],
												"src": "12404:146:8"
											},
											{
												"body": {
													"nativeSrc": "12614:106:8",
													"nodeType": "YulBlock",
													"src": "12614:106:8",
													"statements": [
														{
															"nativeSrc": "12624:22:8",
															"nodeType": "YulAssignment",
															"src": "12624:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12639:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12639:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12633:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12633:5:8"
																},
																"nativeSrc": "12633:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12633:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12624:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12624:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12698:16:8",
																"nodeType": "YulBlock",
																"src": "12698:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12707:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12707:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12710:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12710:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12700:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12700:6:8"
																			},
																			"nativeSrc": "12700:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12700:12:8"
																		},
																		"nativeSrc": "12700:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12700:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12668:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12668:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12679:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "12679:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12686:8:8",
																						"nodeType": "YulLiteral",
																						"src": "12686:8:8",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "12675:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "12675:3:8"
																				},
																				"nativeSrc": "12675:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12675:20:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12665:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "12665:2:8"
																		},
																		"nativeSrc": "12665:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12665:31:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12658:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12658:6:8"
																},
																"nativeSrc": "12658:39:8",
																"nodeType": "YulFunctionCall",
																"src": "12658:39:8"
															},
															"nativeSrc": "12655:59:8",
															"nodeType": "YulIf",
															"src": "12655:59:8"
														}
													]
												},
												"name": "abi_decode_uint24_fromMemory",
												"nativeSrc": "12555:165:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12593:6:8",
														"nodeType": "YulTypedName",
														"src": "12593:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12604:5:8",
														"nodeType": "YulTypedName",
														"src": "12604:5:8",
														"type": ""
													}
												],
												"src": "12555:165:8"
											},
											{
												"body": {
													"nativeSrc": "12783:106:8",
													"nodeType": "YulBlock",
													"src": "12783:106:8",
													"statements": [
														{
															"nativeSrc": "12793:22:8",
															"nodeType": "YulAssignment",
															"src": "12793:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12808:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12808:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12802:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12802:5:8"
																},
																"nativeSrc": "12802:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12802:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12793:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12793:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12867:16:8",
																"nodeType": "YulBlock",
																"src": "12867:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12876:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12876:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12879:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12879:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12869:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12869:6:8"
																			},
																			"nativeSrc": "12869:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12869:12:8"
																		},
																		"nativeSrc": "12869:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12869:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12837:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12837:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12855:1:8",
																						"nodeType": "YulLiteral",
																						"src": "12855:1:8",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value",
																						"nativeSrc": "12858:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "12858:5:8"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nativeSrc": "12844:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "12844:10:8"
																				},
																				"nativeSrc": "12844:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12844:20:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12834:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "12834:2:8"
																		},
																		"nativeSrc": "12834:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12834:31:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12827:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12827:6:8"
																},
																"nativeSrc": "12827:39:8",
																"nodeType": "YulFunctionCall",
																"src": "12827:39:8"
															},
															"nativeSrc": "12824:59:8",
															"nodeType": "YulIf",
															"src": "12824:59:8"
														}
													]
												},
												"name": "abi_decode_int24_fromMemory",
												"nativeSrc": "12725:164:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12762:6:8",
														"nodeType": "YulTypedName",
														"src": "12762:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12773:5:8",
														"nodeType": "YulTypedName",
														"src": "12773:5:8",
														"type": ""
													}
												],
												"src": "12725:164:8"
											},
											{
												"body": {
													"nativeSrc": "12954:132:8",
													"nodeType": "YulBlock",
													"src": "12954:132:8",
													"statements": [
														{
															"nativeSrc": "12964:22:8",
															"nodeType": "YulAssignment",
															"src": "12964:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12979:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12979:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12973:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12973:5:8"
																},
																"nativeSrc": "12973:13:8",
																"nodeType": "YulFunctionCall",
																"src": "12973:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12964:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "12964:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13064:16:8",
																"nodeType": "YulBlock",
																"src": "13064:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13073:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13073:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13076:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13076:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13066:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13066:6:8"
																			},
																			"nativeSrc": "13066:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13066:12:8"
																		},
																		"nativeSrc": "13066:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13066:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13008:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "13008:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13019:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "13019:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13026:34:8",
																						"nodeType": "YulLiteral",
																						"src": "13026:34:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "13015:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "13015:3:8"
																				},
																				"nativeSrc": "13015:46:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13015:46:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13005:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "13005:2:8"
																		},
																		"nativeSrc": "13005:57:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13005:57:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12998:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12998:6:8"
																},
																"nativeSrc": "12998:65:8",
																"nodeType": "YulFunctionCall",
																"src": "12998:65:8"
															},
															"nativeSrc": "12995:85:8",
															"nodeType": "YulIf",
															"src": "12995:85:8"
														}
													]
												},
												"name": "abi_decode_uint128_fromMemory",
												"nativeSrc": "12894:192:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12933:6:8",
														"nodeType": "YulTypedName",
														"src": "12933:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12944:5:8",
														"nodeType": "YulTypedName",
														"src": "12944:5:8",
														"type": ""
													}
												],
												"src": "12894:192:8"
											},
											{
												"body": {
													"nativeSrc": "13379:1050:8",
													"nodeType": "YulBlock",
													"src": "13379:1050:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "13426:16:8",
																"nodeType": "YulBlock",
																"src": "13426:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13435:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13435:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13438:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13438:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13428:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13428:6:8"
																			},
																			"nativeSrc": "13428:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13428:12:8"
																		},
																		"nativeSrc": "13428:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13428:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13400:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "13400:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13409:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13409:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13396:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13396:3:8"
																		},
																		"nativeSrc": "13396:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13396:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13421:3:8",
																		"nodeType": "YulLiteral",
																		"src": "13421:3:8",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13392:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13392:3:8"
																},
																"nativeSrc": "13392:33:8",
																"nodeType": "YulFunctionCall",
																"src": "13392:33:8"
															},
															"nativeSrc": "13389:53:8",
															"nodeType": "YulIf",
															"src": "13389:53:8"
														},
														{
															"nativeSrc": "13451:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13451:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13470:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "13470:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13464:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "13464:5:8"
																},
																"nativeSrc": "13464:16:8",
																"nodeType": "YulFunctionCall",
																"src": "13464:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "13455:5:8",
																	"nodeType": "YulTypedName",
																	"src": "13455:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13550:16:8",
																"nodeType": "YulBlock",
																"src": "13550:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13559:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13559:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13562:1:8",
																					"nodeType": "YulLiteral",
																					"src": "13562:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13552:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "13552:6:8"
																			},
																			"nativeSrc": "13552:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13552:12:8"
																		},
																		"nativeSrc": "13552:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13552:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13502:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "13502:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13513:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "13513:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13520:26:8",
																						"nodeType": "YulLiteral",
																						"src": "13520:26:8",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "13509:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "13509:3:8"
																				},
																				"nativeSrc": "13509:38:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13509:38:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13499:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "13499:2:8"
																		},
																		"nativeSrc": "13499:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13499:49:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13492:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13492:6:8"
																},
																"nativeSrc": "13492:57:8",
																"nodeType": "YulFunctionCall",
																"src": "13492:57:8"
															},
															"nativeSrc": "13489:77:8",
															"nodeType": "YulIf",
															"src": "13489:77:8"
														},
														{
															"nativeSrc": "13575:15:8",
															"nodeType": "YulAssignment",
															"src": "13575:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "13585:5:8",
																"nodeType": "YulIdentifier",
																"src": "13585:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "13575:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13575:6:8"
																}
															]
														},
														{
															"nativeSrc": "13599:67:8",
															"nodeType": "YulAssignment",
															"src": "13599:67:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13651:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13651:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13662:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13662:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13647:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13647:3:8"
																		},
																		"nativeSrc": "13647:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13647:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable_fromMemory",
																	"nativeSrc": "13609:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "13609:37:8"
																},
																"nativeSrc": "13609:57:8",
																"nodeType": "YulFunctionCall",
																"src": "13609:57:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "13599:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13599:6:8"
																}
															]
														},
														{
															"nativeSrc": "13675:67:8",
															"nodeType": "YulAssignment",
															"src": "13675:67:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13727:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13727:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13738:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13738:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13723:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13723:3:8"
																		},
																		"nativeSrc": "13723:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13723:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable_fromMemory",
																	"nativeSrc": "13685:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "13685:37:8"
																},
																"nativeSrc": "13685:57:8",
																"nodeType": "YulFunctionCall",
																"src": "13685:57:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "13675:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13675:6:8"
																}
															]
														},
														{
															"nativeSrc": "13751:67:8",
															"nodeType": "YulAssignment",
															"src": "13751:67:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13803:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13803:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13814:2:8",
																				"nodeType": "YulLiteral",
																				"src": "13814:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13799:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13799:3:8"
																		},
																		"nativeSrc": "13799:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13799:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_payable_fromMemory",
																	"nativeSrc": "13761:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "13761:37:8"
																},
																"nativeSrc": "13761:57:8",
																"nodeType": "YulFunctionCall",
																"src": "13761:57:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "13751:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13751:6:8"
																}
															]
														},
														{
															"nativeSrc": "13827:59:8",
															"nodeType": "YulAssignment",
															"src": "13827:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13870:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13870:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13881:3:8",
																				"nodeType": "YulLiteral",
																				"src": "13881:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13866:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13866:3:8"
																		},
																		"nativeSrc": "13866:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13866:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint24_fromMemory",
																	"nativeSrc": "13837:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "13837:28:8"
																},
																"nativeSrc": "13837:49:8",
																"nodeType": "YulFunctionCall",
																"src": "13837:49:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "13827:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13827:6:8"
																}
															]
														},
														{
															"nativeSrc": "13895:58:8",
															"nodeType": "YulAssignment",
															"src": "13895:58:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13937:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "13937:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13948:3:8",
																				"nodeType": "YulLiteral",
																				"src": "13948:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13933:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13933:3:8"
																		},
																		"nativeSrc": "13933:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13933:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nativeSrc": "13905:27:8",
																	"nodeType": "YulIdentifier",
																	"src": "13905:27:8"
																},
																"nativeSrc": "13905:48:8",
																"nodeType": "YulFunctionCall",
																"src": "13905:48:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "13895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13895:6:8"
																}
															]
														},
														{
															"nativeSrc": "13962:58:8",
															"nodeType": "YulAssignment",
															"src": "13962:58:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14004:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14004:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14015:3:8",
																				"nodeType": "YulLiteral",
																				"src": "14015:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14000:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14000:3:8"
																		},
																		"nativeSrc": "14000:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14000:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nativeSrc": "13972:27:8",
																	"nodeType": "YulIdentifier",
																	"src": "13972:27:8"
																},
																"nativeSrc": "13972:48:8",
																"nodeType": "YulFunctionCall",
																"src": "13972:48:8"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "13962:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13962:6:8"
																}
															]
														},
														{
															"nativeSrc": "14029:60:8",
															"nodeType": "YulAssignment",
															"src": "14029:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14073:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14073:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14084:3:8",
																				"nodeType": "YulLiteral",
																				"src": "14084:3:8",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14069:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14069:3:8"
																		},
																		"nativeSrc": "14069:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14069:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nativeSrc": "14039:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "14039:29:8"
																},
																"nativeSrc": "14039:50:8",
																"nodeType": "YulFunctionCall",
																"src": "14039:50:8"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nativeSrc": "14029:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14029:6:8"
																}
															]
														},
														{
															"nativeSrc": "14098:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14098:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "14113:1:8",
																"nodeType": "YulLiteral",
																"src": "14113:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "14102:7:8",
																	"nodeType": "YulTypedName",
																	"src": "14102:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14123:37:8",
															"nodeType": "YulAssignment",
															"src": "14123:37:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14144:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14144:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14155:3:8",
																				"nodeType": "YulLiteral",
																				"src": "14155:3:8",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14140:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14140:3:8"
																		},
																		"nativeSrc": "14140:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14140:19:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14134:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "14134:5:8"
																},
																"nativeSrc": "14134:26:8",
																"nodeType": "YulFunctionCall",
																"src": "14134:26:8"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "14123:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14123:7:8"
																}
															]
														},
														{
															"nativeSrc": "14169:17:8",
															"nodeType": "YulAssignment",
															"src": "14169:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "14179:7:8",
																"nodeType": "YulIdentifier",
																"src": "14179:7:8"
															},
															"variableNames": [
																{
																	"name": "value8",
																	"nativeSrc": "14169:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14169:6:8"
																}
															]
														},
														{
															"nativeSrc": "14195:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14195:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "14210:1:8",
																"nodeType": "YulLiteral",
																"src": "14210:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "14199:7:8",
																	"nodeType": "YulTypedName",
																	"src": "14199:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14220:37:8",
															"nodeType": "YulAssignment",
															"src": "14220:37:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14241:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14241:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14252:3:8",
																				"nodeType": "YulLiteral",
																				"src": "14252:3:8",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14237:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14237:3:8"
																		},
																		"nativeSrc": "14237:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14237:19:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14231:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "14231:5:8"
																},
																"nativeSrc": "14231:26:8",
																"nodeType": "YulFunctionCall",
																"src": "14231:26:8"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "14220:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14220:7:8"
																}
															]
														},
														{
															"nativeSrc": "14266:17:8",
															"nodeType": "YulAssignment",
															"src": "14266:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "14276:7:8",
																"nodeType": "YulIdentifier",
																"src": "14276:7:8"
															},
															"variableNames": [
																{
																	"name": "value9",
																	"nativeSrc": "14266:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14266:6:8"
																}
															]
														},
														{
															"nativeSrc": "14292:61:8",
															"nodeType": "YulAssignment",
															"src": "14292:61:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14337:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14337:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14348:3:8",
																				"nodeType": "YulLiteral",
																				"src": "14348:3:8",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14333:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14333:3:8"
																		},
																		"nativeSrc": "14333:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14333:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nativeSrc": "14303:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "14303:29:8"
																},
																"nativeSrc": "14303:50:8",
																"nodeType": "YulFunctionCall",
																"src": "14303:50:8"
															},
															"variableNames": [
																{
																	"name": "value10",
																	"nativeSrc": "14292:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14292:7:8"
																}
															]
														},
														{
															"nativeSrc": "14362:61:8",
															"nodeType": "YulAssignment",
															"src": "14362:61:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14407:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14407:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14418:3:8",
																				"nodeType": "YulLiteral",
																				"src": "14418:3:8",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14403:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14403:3:8"
																		},
																		"nativeSrc": "14403:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14403:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint128_fromMemory",
																	"nativeSrc": "14373:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "14373:29:8"
																},
																"nativeSrc": "14373:50:8",
																"nodeType": "YulFunctionCall",
																"src": "14373:50:8"
															},
															"variableNames": [
																{
																	"name": "value11",
																	"nativeSrc": "14362:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "14362:7:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_address_payablet_address_payablet_address_payablet_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory",
												"nativeSrc": "13091:1338:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13255:9:8",
														"nodeType": "YulTypedName",
														"src": "13255:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13266:7:8",
														"nodeType": "YulTypedName",
														"src": "13266:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13278:6:8",
														"nodeType": "YulTypedName",
														"src": "13278:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13286:6:8",
														"nodeType": "YulTypedName",
														"src": "13286:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13294:6:8",
														"nodeType": "YulTypedName",
														"src": "13294:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13302:6:8",
														"nodeType": "YulTypedName",
														"src": "13302:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13310:6:8",
														"nodeType": "YulTypedName",
														"src": "13310:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "13318:6:8",
														"nodeType": "YulTypedName",
														"src": "13318:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "13326:6:8",
														"nodeType": "YulTypedName",
														"src": "13326:6:8",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "13334:6:8",
														"nodeType": "YulTypedName",
														"src": "13334:6:8",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "13342:6:8",
														"nodeType": "YulTypedName",
														"src": "13342:6:8",
														"type": ""
													},
													{
														"name": "value9",
														"nativeSrc": "13350:6:8",
														"nodeType": "YulTypedName",
														"src": "13350:6:8",
														"type": ""
													},
													{
														"name": "value10",
														"nativeSrc": "13358:7:8",
														"nodeType": "YulTypedName",
														"src": "13358:7:8",
														"type": ""
													},
													{
														"name": "value11",
														"nativeSrc": "13367:7:8",
														"nodeType": "YulTypedName",
														"src": "13367:7:8",
														"type": ""
													}
												],
												"src": "13091:1338:8"
											},
											{
												"body": {
													"nativeSrc": "14608:177:8",
													"nodeType": "YulBlock",
													"src": "14608:177:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14625:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14625:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14636:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14636:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14618:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14618:6:8"
																},
																"nativeSrc": "14618:21:8",
																"nodeType": "YulFunctionCall",
																"src": "14618:21:8"
															},
															"nativeSrc": "14618:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "14618:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14659:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14659:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14670:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14670:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14655:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14655:3:8"
																		},
																		"nativeSrc": "14655:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14655:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14675:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14675:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14648:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14648:6:8"
																},
																"nativeSrc": "14648:30:8",
																"nodeType": "YulFunctionCall",
																"src": "14648:30:8"
															},
															"nativeSrc": "14648:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "14648:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14698:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "14698:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14709:2:8",
																				"nodeType": "YulLiteral",
																				"src": "14709:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14694:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "14694:3:8"
																		},
																		"nativeSrc": "14694:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14694:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a20696e76616c696420706f6f6c",
																		"kind": "string",
																		"nativeSrc": "14714:29:8",
																		"nodeType": "YulLiteral",
																		"src": "14714:29:8",
																		"type": "",
																		"value": "OracleManager: invalid pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14687:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14687:6:8"
																},
																"nativeSrc": "14687:57:8",
																"nodeType": "YulFunctionCall",
																"src": "14687:57:8"
															},
															"nativeSrc": "14687:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "14687:57:8"
														},
														{
															"nativeSrc": "14753:26:8",
															"nodeType": "YulAssignment",
															"src": "14753:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14765:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "14765:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14776:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14776:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14761:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "14761:3:8"
																},
																"nativeSrc": "14761:18:8",
																"nodeType": "YulFunctionCall",
																"src": "14761:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14753:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "14753:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14434:351:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14585:9:8",
														"nodeType": "YulTypedName",
														"src": "14585:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14599:4:8",
														"nodeType": "YulTypedName",
														"src": "14599:4:8",
														"type": ""
													}
												],
												"src": "14434:351:8"
											},
											{
												"body": {
													"nativeSrc": "14849:104:8",
													"nodeType": "YulBlock",
													"src": "14849:104:8",
													"statements": [
														{
															"nativeSrc": "14859:22:8",
															"nodeType": "YulAssignment",
															"src": "14859:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14874:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14874:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14868:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "14868:5:8"
																},
																"nativeSrc": "14868:13:8",
																"nodeType": "YulFunctionCall",
																"src": "14868:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14859:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "14859:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14931:16:8",
																"nodeType": "YulBlock",
																"src": "14931:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14940:1:8",
																					"nodeType": "YulLiteral",
																					"src": "14940:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14943:1:8",
																					"nodeType": "YulLiteral",
																					"src": "14943:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14933:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "14933:6:8"
																			},
																			"nativeSrc": "14933:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14933:12:8"
																		},
																		"nativeSrc": "14933:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14933:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14903:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "14903:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14914:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "14914:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14921:6:8",
																						"nodeType": "YulLiteral",
																						"src": "14921:6:8",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "14910:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "14910:3:8"
																				},
																				"nativeSrc": "14910:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "14910:18:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14900:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "14900:2:8"
																		},
																		"nativeSrc": "14900:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14900:29:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14893:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "14893:6:8"
																},
																"nativeSrc": "14893:37:8",
																"nodeType": "YulFunctionCall",
																"src": "14893:37:8"
															},
															"nativeSrc": "14890:57:8",
															"nodeType": "YulIf",
															"src": "14890:57:8"
														}
													]
												},
												"name": "abi_decode_uint16_fromMemory",
												"nativeSrc": "14790:163:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14828:6:8",
														"nodeType": "YulTypedName",
														"src": "14828:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14839:5:8",
														"nodeType": "YulTypedName",
														"src": "14839:5:8",
														"type": ""
													}
												],
												"src": "14790:163:8"
											},
											{
												"body": {
													"nativeSrc": "15131:670:8",
													"nodeType": "YulBlock",
													"src": "15131:670:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "15178:16:8",
																"nodeType": "YulBlock",
																"src": "15178:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "15187:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15187:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15190:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15190:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "15180:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "15180:6:8"
																			},
																			"nativeSrc": "15180:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "15180:12:8"
																		},
																		"nativeSrc": "15180:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "15180:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15152:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "15152:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15161:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15161:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15148:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15148:3:8"
																		},
																		"nativeSrc": "15148:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15148:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15173:3:8",
																		"nodeType": "YulLiteral",
																		"src": "15173:3:8",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15144:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "15144:3:8"
																},
																"nativeSrc": "15144:33:8",
																"nodeType": "YulFunctionCall",
																"src": "15144:33:8"
															},
															"nativeSrc": "15141:53:8",
															"nodeType": "YulIf",
															"src": "15141:53:8"
														},
														{
															"nativeSrc": "15203:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15203:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15222:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "15222:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15216:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15216:5:8"
																},
																"nativeSrc": "15216:16:8",
																"nodeType": "YulFunctionCall",
																"src": "15216:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "15207:5:8",
																	"nodeType": "YulTypedName",
																	"src": "15207:5:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15266:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "15266:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "15241:24:8",
																	"nodeType": "YulIdentifier",
																	"src": "15241:24:8"
																},
																"nativeSrc": "15241:31:8",
																"nodeType": "YulFunctionCall",
																"src": "15241:31:8"
															},
															"nativeSrc": "15241:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "15241:31:8"
														},
														{
															"nativeSrc": "15281:15:8",
															"nodeType": "YulAssignment",
															"src": "15281:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "15291:5:8",
																"nodeType": "YulIdentifier",
																"src": "15291:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "15281:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15281:6:8"
																}
															]
														},
														{
															"nativeSrc": "15305:57:8",
															"nodeType": "YulAssignment",
															"src": "15305:57:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15347:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15347:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15358:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15358:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15343:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15343:3:8"
																		},
																		"nativeSrc": "15343:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15343:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_int24_fromMemory",
																	"nativeSrc": "15315:27:8",
																	"nodeType": "YulIdentifier",
																	"src": "15315:27:8"
																},
																"nativeSrc": "15315:47:8",
																"nodeType": "YulFunctionCall",
																"src": "15315:47:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "15305:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15305:6:8"
																}
															]
														},
														{
															"nativeSrc": "15371:58:8",
															"nodeType": "YulAssignment",
															"src": "15371:58:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15414:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15414:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15425:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15425:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15410:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15410:3:8"
																		},
																		"nativeSrc": "15410:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15410:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nativeSrc": "15381:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "15381:28:8"
																},
																"nativeSrc": "15381:48:8",
																"nodeType": "YulFunctionCall",
																"src": "15381:48:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "15371:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15371:6:8"
																}
															]
														},
														{
															"nativeSrc": "15438:58:8",
															"nodeType": "YulAssignment",
															"src": "15438:58:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15481:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15481:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15492:2:8",
																				"nodeType": "YulLiteral",
																				"src": "15492:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15477:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15477:3:8"
																		},
																		"nativeSrc": "15477:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15477:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nativeSrc": "15448:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "15448:28:8"
																},
																"nativeSrc": "15448:48:8",
																"nodeType": "YulFunctionCall",
																"src": "15448:48:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "15438:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15438:6:8"
																}
															]
														},
														{
															"nativeSrc": "15505:59:8",
															"nodeType": "YulAssignment",
															"src": "15505:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15548:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15548:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15559:3:8",
																				"nodeType": "YulLiteral",
																				"src": "15559:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15544:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15544:3:8"
																		},
																		"nativeSrc": "15544:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15544:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16_fromMemory",
																	"nativeSrc": "15515:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "15515:28:8"
																},
																"nativeSrc": "15515:49:8",
																"nodeType": "YulFunctionCall",
																"src": "15515:49:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "15505:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15505:6:8"
																}
															]
														},
														{
															"nativeSrc": "15573:41:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15573:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15598:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15598:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15609:3:8",
																				"nodeType": "YulLiteral",
																				"src": "15609:3:8",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15594:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15594:3:8"
																		},
																		"nativeSrc": "15594:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15594:19:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15588:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15588:5:8"
																},
																"nativeSrc": "15588:26:8",
																"nodeType": "YulFunctionCall",
																"src": "15588:26:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "15577:7:8",
																	"nodeType": "YulTypedName",
																	"src": "15577:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "15646:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "15646:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_uint8",
																	"nativeSrc": "15623:22:8",
																	"nodeType": "YulIdentifier",
																	"src": "15623:22:8"
																},
																"nativeSrc": "15623:31:8",
																"nodeType": "YulFunctionCall",
																"src": "15623:31:8"
															},
															"nativeSrc": "15623:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "15623:31:8"
														},
														{
															"nativeSrc": "15663:17:8",
															"nodeType": "YulAssignment",
															"src": "15663:17:8",
															"value": {
																"name": "value_1",
																"nativeSrc": "15673:7:8",
																"nodeType": "YulIdentifier",
																"src": "15673:7:8"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "15663:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15663:6:8"
																}
															]
														},
														{
															"nativeSrc": "15689:41:8",
															"nodeType": "YulVariableDeclaration",
															"src": "15689:41:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15714:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "15714:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15725:3:8",
																				"nodeType": "YulLiteral",
																				"src": "15725:3:8",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15710:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15710:3:8"
																		},
																		"nativeSrc": "15710:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15710:19:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15704:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "15704:5:8"
																},
																"nativeSrc": "15704:26:8",
																"nodeType": "YulFunctionCall",
																"src": "15704:26:8"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "15693:7:8",
																	"nodeType": "YulTypedName",
																	"src": "15693:7:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "15761:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "15761:7:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "15739:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "15739:21:8"
																},
																"nativeSrc": "15739:30:8",
																"nodeType": "YulFunctionCall",
																"src": "15739:30:8"
															},
															"nativeSrc": "15739:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "15739:30:8"
														},
														{
															"nativeSrc": "15778:17:8",
															"nodeType": "YulAssignment",
															"src": "15778:17:8",
															"value": {
																"name": "value_2",
																"nativeSrc": "15788:7:8",
																"nodeType": "YulIdentifier",
																"src": "15788:7:8"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "15778:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15778:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "14958:843:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15049:9:8",
														"nodeType": "YulTypedName",
														"src": "15049:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15060:7:8",
														"nodeType": "YulTypedName",
														"src": "15060:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15072:6:8",
														"nodeType": "YulTypedName",
														"src": "15072:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15080:6:8",
														"nodeType": "YulTypedName",
														"src": "15080:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15088:6:8",
														"nodeType": "YulTypedName",
														"src": "15088:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15096:6:8",
														"nodeType": "YulTypedName",
														"src": "15096:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "15104:6:8",
														"nodeType": "YulTypedName",
														"src": "15104:6:8",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "15112:6:8",
														"nodeType": "YulTypedName",
														"src": "15112:6:8",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "15120:6:8",
														"nodeType": "YulTypedName",
														"src": "15120:6:8",
														"type": ""
													}
												],
												"src": "14958:843:8"
											},
											{
												"body": {
													"nativeSrc": "15838:95:8",
													"nodeType": "YulBlock",
													"src": "15838:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15855:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15855:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15862:3:8",
																				"nodeType": "YulLiteral",
																				"src": "15862:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15867:10:8",
																				"nodeType": "YulLiteral",
																				"src": "15867:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "15858:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "15858:3:8"
																		},
																		"nativeSrc": "15858:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "15858:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15848:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15848:6:8"
																},
																"nativeSrc": "15848:31:8",
																"nodeType": "YulFunctionCall",
																"src": "15848:31:8"
															},
															"nativeSrc": "15848:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "15848:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15895:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15895:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15898:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15898:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15888:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15888:6:8"
																},
																"nativeSrc": "15888:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15888:15:8"
															},
															"nativeSrc": "15888:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15888:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15919:1:8",
																		"nodeType": "YulLiteral",
																		"src": "15919:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15922:4:8",
																		"nodeType": "YulLiteral",
																		"src": "15922:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15912:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "15912:6:8"
																},
																"nativeSrc": "15912:15:8",
																"nodeType": "YulFunctionCall",
																"src": "15912:15:8"
															},
															"nativeSrc": "15912:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "15912:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "15806:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "15806:127:8"
											},
											{
												"body": {
													"nativeSrc": "16029:825:8",
													"nodeType": "YulBlock",
													"src": "16029:825:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "16075:16:8",
																"nodeType": "YulBlock",
																"src": "16075:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16084:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16084:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16087:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16087:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16077:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16077:6:8"
																			},
																			"nativeSrc": "16077:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16077:12:8"
																		},
																		"nativeSrc": "16077:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16077:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16050:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16050:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16059:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "16059:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16046:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16046:3:8"
																		},
																		"nativeSrc": "16046:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16046:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16071:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16071:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16042:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16042:3:8"
																},
																"nativeSrc": "16042:32:8",
																"nodeType": "YulFunctionCall",
																"src": "16042:32:8"
															},
															"nativeSrc": "16039:52:8",
															"nodeType": "YulIf",
															"src": "16039:52:8"
														},
														{
															"nativeSrc": "16100:30:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16100:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16120:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16120:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16114:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "16114:5:8"
																},
																"nativeSrc": "16114:16:8",
																"nodeType": "YulFunctionCall",
																"src": "16114:16:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "16104:6:8",
																	"nodeType": "YulTypedName",
																	"src": "16104:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16173:16:8",
																"nodeType": "YulBlock",
																"src": "16173:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16182:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16182:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16185:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16185:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16175:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16175:6:8"
																			},
																			"nativeSrc": "16175:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16175:12:8"
																		},
																		"nativeSrc": "16175:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16175:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16145:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16145:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16153:18:8",
																		"nodeType": "YulLiteral",
																		"src": "16153:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16142:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16142:2:8"
																},
																"nativeSrc": "16142:30:8",
																"nodeType": "YulFunctionCall",
																"src": "16142:30:8"
															},
															"nativeSrc": "16139:50:8",
															"nodeType": "YulIf",
															"src": "16139:50:8"
														},
														{
															"nativeSrc": "16198:32:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16198:32:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16212:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "16212:9:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "16223:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16223:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16208:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16208:3:8"
																},
																"nativeSrc": "16208:22:8",
																"nodeType": "YulFunctionCall",
																"src": "16208:22:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "16202:2:8",
																	"nodeType": "YulTypedName",
																	"src": "16202:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16278:16:8",
																"nodeType": "YulBlock",
																"src": "16278:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16287:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16287:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16290:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16290:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16280:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16280:6:8"
																			},
																			"nativeSrc": "16280:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16280:12:8"
																		},
																		"nativeSrc": "16280:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16280:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "16257:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "16257:2:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16261:4:8",
																						"nodeType": "YulLiteral",
																						"src": "16261:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16253:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16253:3:8"
																				},
																				"nativeSrc": "16253:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16253:13:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16268:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "16268:7:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "16249:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16249:3:8"
																		},
																		"nativeSrc": "16249:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16249:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16242:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16242:6:8"
																},
																"nativeSrc": "16242:35:8",
																"nodeType": "YulFunctionCall",
																"src": "16242:35:8"
															},
															"nativeSrc": "16239:55:8",
															"nodeType": "YulIf",
															"src": "16239:55:8"
														},
														{
															"nativeSrc": "16303:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16303:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "16323:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "16323:2:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16317:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "16317:5:8"
																},
																"nativeSrc": "16317:9:8",
																"nodeType": "YulFunctionCall",
																"src": "16317:9:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16307:6:8",
																	"nodeType": "YulTypedName",
																	"src": "16307:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16369:22:8",
																"nodeType": "YulBlock",
																"src": "16369:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16371:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "16371:16:8"
																			},
																			"nativeSrc": "16371:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16371:18:8"
																		},
																		"nativeSrc": "16371:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16371:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "16341:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16341:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16349:18:8",
																		"nodeType": "YulLiteral",
																		"src": "16349:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16338:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16338:2:8"
																},
																"nativeSrc": "16338:30:8",
																"nodeType": "YulFunctionCall",
																"src": "16338:30:8"
															},
															"nativeSrc": "16335:56:8",
															"nodeType": "YulIf",
															"src": "16335:56:8"
														},
														{
															"nativeSrc": "16400:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16400:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16420:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16420:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16414:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "16414:5:8"
																},
																"nativeSrc": "16414:9:8",
																"nodeType": "YulFunctionCall",
																"src": "16414:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "16404:6:8",
																	"nodeType": "YulTypedName",
																	"src": "16404:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16432:85:8",
															"nodeType": "YulVariableDeclaration",
															"src": "16432:85:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "16454:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16454:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "16478:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "16478:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16486:4:8",
																										"nodeType": "YulLiteral",
																										"src": "16486:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16474:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "16474:3:8"
																								},
																								"nativeSrc": "16474:17:8",
																								"nodeType": "YulFunctionCall",
																								"src": "16474:17:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "16497:2:8",
																										"nodeType": "YulLiteral",
																										"src": "16497:2:8",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "16493:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "16493:3:8"
																								},
																								"nativeSrc": "16493:7:8",
																								"nodeType": "YulFunctionCall",
																								"src": "16493:7:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "16470:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "16470:3:8"
																						},
																						"nativeSrc": "16470:31:8",
																						"nodeType": "YulFunctionCall",
																						"src": "16470:31:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16503:2:8",
																						"nodeType": "YulLiteral",
																						"src": "16503:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16466:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16466:3:8"
																				},
																				"nativeSrc": "16466:40:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16466:40:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16512:2:8",
																						"nodeType": "YulLiteral",
																						"src": "16512:2:8",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16508:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16508:3:8"
																				},
																				"nativeSrc": "16508:7:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16508:7:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16462:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16462:3:8"
																		},
																		"nativeSrc": "16462:54:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16462:54:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16450:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "16450:3:8"
																},
																"nativeSrc": "16450:67:8",
																"nodeType": "YulFunctionCall",
																"src": "16450:67:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "16436:10:8",
																	"nodeType": "YulTypedName",
																	"src": "16436:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16592:22:8",
																"nodeType": "YulBlock",
																"src": "16592:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "16594:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "16594:16:8"
																			},
																			"nativeSrc": "16594:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16594:18:8"
																		},
																		"nativeSrc": "16594:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16594:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "16535:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "16535:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16547:18:8",
																				"nodeType": "YulLiteral",
																				"src": "16547:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16532:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "16532:2:8"
																		},
																		"nativeSrc": "16532:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16532:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "16571:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "16571:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "16583:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16583:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "16568:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "16568:2:8"
																		},
																		"nativeSrc": "16568:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16568:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16529:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16529:2:8"
																},
																"nativeSrc": "16529:62:8",
																"nodeType": "YulFunctionCall",
																"src": "16529:62:8"
															},
															"nativeSrc": "16526:88:8",
															"nodeType": "YulIf",
															"src": "16526:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16630:2:8",
																		"nodeType": "YulLiteral",
																		"src": "16630:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "16634:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "16634:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16623:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16623:6:8"
																},
																"nativeSrc": "16623:22:8",
																"nodeType": "YulFunctionCall",
																"src": "16623:22:8"
															},
															"nativeSrc": "16623:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "16623:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "16661:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16661:6:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16669:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16669:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16654:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16654:6:8"
																},
																"nativeSrc": "16654:22:8",
																"nodeType": "YulFunctionCall",
																"src": "16654:22:8"
															},
															"nativeSrc": "16654:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "16654:22:8"
														},
														{
															"body": {
																"nativeSrc": "16726:16:8",
																"nodeType": "YulBlock",
																"src": "16726:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16735:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16735:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16738:1:8",
																					"nodeType": "YulLiteral",
																					"src": "16738:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16728:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16728:6:8"
																			},
																			"nativeSrc": "16728:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "16728:12:8"
																		},
																		"nativeSrc": "16728:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "16728:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "16699:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "16699:2:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "16703:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "16703:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16695:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "16695:3:8"
																				},
																				"nativeSrc": "16695:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "16695:15:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16712:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16712:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16691:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16691:3:8"
																		},
																		"nativeSrc": "16691:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16691:24:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "16717:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "16717:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16688:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "16688:2:8"
																},
																"nativeSrc": "16688:37:8",
																"nodeType": "YulFunctionCall",
																"src": "16688:37:8"
															},
															"nativeSrc": "16685:57:8",
															"nodeType": "YulIf",
															"src": "16685:57:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "16790:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "16790:2:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16794:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16794:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16786:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16786:3:8"
																		},
																		"nativeSrc": "16786:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16786:11:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16803:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "16803:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16811:2:8",
																				"nodeType": "YulLiteral",
																				"src": "16811:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16799:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "16799:3:8"
																		},
																		"nativeSrc": "16799:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "16799:15:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16816:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "16816:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16751:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "16751:34:8"
																},
																"nativeSrc": "16751:72:8",
																"nodeType": "YulFunctionCall",
																"src": "16751:72:8"
															},
															"nativeSrc": "16751:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "16751:72:8"
														},
														{
															"nativeSrc": "16832:16:8",
															"nodeType": "YulAssignment",
															"src": "16832:16:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "16842:6:8",
																"nodeType": "YulIdentifier",
																"src": "16842:6:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "16832:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "16832:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "15938:916:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15995:9:8",
														"nodeType": "YulTypedName",
														"src": "15995:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16006:7:8",
														"nodeType": "YulTypedName",
														"src": "16006:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16018:6:8",
														"nodeType": "YulTypedName",
														"src": "16018:6:8",
														"type": ""
													}
												],
												"src": "15938:916:8"
											},
											{
												"body": {
													"nativeSrc": "17033:167:8",
													"nodeType": "YulBlock",
													"src": "17033:167:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17050:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17050:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17061:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17061:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17043:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17043:6:8"
																},
																"nativeSrc": "17043:21:8",
																"nodeType": "YulFunctionCall",
																"src": "17043:21:8"
															},
															"nativeSrc": "17043:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "17043:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17084:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17084:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17095:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17095:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17080:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17080:3:8"
																		},
																		"nativeSrc": "17080:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17080:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17100:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17100:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17073:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17073:6:8"
																},
																"nativeSrc": "17073:30:8",
																"nodeType": "YulFunctionCall",
																"src": "17073:30:8"
															},
															"nativeSrc": "17073:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "17073:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17123:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17134:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17134:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17119:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17119:3:8"
																		},
																		"nativeSrc": "17119:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17119:18:8"
																	},
																	{
																		"hexValue": "5469636b206f7574206f662072616e6765",
																		"kind": "string",
																		"nativeSrc": "17139:19:8",
																		"nodeType": "YulLiteral",
																		"src": "17139:19:8",
																		"type": "",
																		"value": "Tick out of range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17112:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17112:6:8"
																},
																"nativeSrc": "17112:47:8",
																"nodeType": "YulFunctionCall",
																"src": "17112:47:8"
															},
															"nativeSrc": "17112:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "17112:47:8"
														},
														{
															"nativeSrc": "17168:26:8",
															"nodeType": "YulAssignment",
															"src": "17168:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17180:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17180:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17191:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17191:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17176:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17176:3:8"
																},
																"nativeSrc": "17176:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17176:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17168:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17168:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aa7c621a39f9d1cc5f7410468746eb53df077a1592062de7c7ef03b504e8eea2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16859:341:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17010:9:8",
														"nodeType": "YulTypedName",
														"src": "17010:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17024:4:8",
														"nodeType": "YulTypedName",
														"src": "17024:4:8",
														"type": ""
													}
												],
												"src": "16859:341:8"
											},
											{
												"body": {
													"nativeSrc": "17247:142:8",
													"nodeType": "YulBlock",
													"src": "17247:142:8",
													"statements": [
														{
															"nativeSrc": "17257:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "17257:35:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17283:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17283:1:8",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17286:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "17286:5:8"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "17272:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "17272:10:8"
																},
																"nativeSrc": "17272:20:8",
																"nodeType": "YulFunctionCall",
																"src": "17272:20:8"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "17261:7:8",
																	"nodeType": "YulTypedName",
																	"src": "17261:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17330:22:8",
																"nodeType": "YulBlock",
																"src": "17330:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17332:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "17332:16:8"
																			},
																			"nativeSrc": "17332:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17332:18:8"
																		},
																		"nativeSrc": "17332:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17332:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "17307:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "17307:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "17320:7:8",
																				"nodeType": "YulLiteral",
																				"src": "17320:7:8",
																				"type": "",
																				"value": "8388607"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "17316:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17316:3:8"
																		},
																		"nativeSrc": "17316:12:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17316:12:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17304:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "17304:2:8"
																},
																"nativeSrc": "17304:25:8",
																"nodeType": "YulFunctionCall",
																"src": "17304:25:8"
															},
															"nativeSrc": "17301:51:8",
															"nodeType": "YulIf",
															"src": "17301:51:8"
														},
														{
															"nativeSrc": "17361:22:8",
															"nodeType": "YulAssignment",
															"src": "17361:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17372:1:8",
																		"nodeType": "YulLiteral",
																		"src": "17372:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value_1",
																		"nativeSrc": "17375:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "17375:7:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17368:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17368:3:8"
																},
																"nativeSrc": "17368:15:8",
																"nodeType": "YulFunctionCall",
																"src": "17368:15:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17361:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17361:3:8"
																}
															]
														}
													]
												},
												"name": "negate_t_int24",
												"nativeSrc": "17205:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17229:5:8",
														"nodeType": "YulTypedName",
														"src": "17229:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17239:3:8",
														"nodeType": "YulTypedName",
														"src": "17239:3:8",
														"type": ""
													}
												],
												"src": "17205:184:8"
											},
											{
												"body": {
													"nativeSrc": "17446:116:8",
													"nodeType": "YulBlock",
													"src": "17446:116:8",
													"statements": [
														{
															"nativeSrc": "17456:20:8",
															"nodeType": "YulAssignment",
															"src": "17456:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17471:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "17471:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17474:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "17474:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17467:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17467:3:8"
																},
																"nativeSrc": "17467:9:8",
																"nodeType": "YulFunctionCall",
																"src": "17467:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17456:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "17456:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17534:22:8",
																"nodeType": "YulBlock",
																"src": "17534:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17536:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "17536:16:8"
																			},
																			"nativeSrc": "17536:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "17536:18:8"
																		},
																		"nativeSrc": "17536:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "17536:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "17505:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "17505:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "17498:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "17498:6:8"
																				},
																				"nativeSrc": "17498:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17498:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "17512:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "17512:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "17519:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "17519:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "17528:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "17528:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "17515:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "17515:3:8"
																						},
																						"nativeSrc": "17515:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "17515:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "17509:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "17509:2:8"
																				},
																				"nativeSrc": "17509:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "17509:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17495:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "17495:2:8"
																		},
																		"nativeSrc": "17495:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17495:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17488:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17488:6:8"
																},
																"nativeSrc": "17488:45:8",
																"nodeType": "YulFunctionCall",
																"src": "17488:45:8"
															},
															"nativeSrc": "17485:71:8",
															"nodeType": "YulIf",
															"src": "17485:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "17394:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17425:1:8",
														"nodeType": "YulTypedName",
														"src": "17425:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17428:1:8",
														"nodeType": "YulTypedName",
														"src": "17428:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "17434:7:8",
														"nodeType": "YulTypedName",
														"src": "17434:7:8",
														"type": ""
													}
												],
												"src": "17394:168:8"
											},
											{
												"body": {
													"nativeSrc": "17741:164:8",
													"nodeType": "YulBlock",
													"src": "17741:164:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17758:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17758:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17769:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17769:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17751:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17751:6:8"
																},
																"nativeSrc": "17751:21:8",
																"nodeType": "YulFunctionCall",
																"src": "17751:21:8"
															},
															"nativeSrc": "17751:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "17751:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17792:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17792:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17803:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17803:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17788:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17788:3:8"
																		},
																		"nativeSrc": "17788:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17788:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17808:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17808:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17781:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17781:6:8"
																},
																"nativeSrc": "17781:30:8",
																"nodeType": "YulFunctionCall",
																"src": "17781:30:8"
															},
															"nativeSrc": "17781:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "17781:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17831:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "17831:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17842:2:8",
																				"nodeType": "YulLiteral",
																				"src": "17842:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17827:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "17827:3:8"
																		},
																		"nativeSrc": "17827:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "17827:18:8"
																	},
																	{
																		"hexValue": "5072696365206f766572666c6f77",
																		"kind": "string",
																		"nativeSrc": "17847:16:8",
																		"nodeType": "YulLiteral",
																		"src": "17847:16:8",
																		"type": "",
																		"value": "Price overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17820:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "17820:6:8"
																},
																"nativeSrc": "17820:44:8",
																"nodeType": "YulFunctionCall",
																"src": "17820:44:8"
															},
															"nativeSrc": "17820:44:8",
															"nodeType": "YulExpressionStatement",
															"src": "17820:44:8"
														},
														{
															"nativeSrc": "17873:26:8",
															"nodeType": "YulAssignment",
															"src": "17873:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17885:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "17885:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17896:2:8",
																		"nodeType": "YulLiteral",
																		"src": "17896:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17881:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "17881:3:8"
																},
																"nativeSrc": "17881:18:8",
																"nodeType": "YulFunctionCall",
																"src": "17881:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17873:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "17873:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8578a1db42e71a0d8c58dc40be174439f4f08fc99d263720fae7f8a56294a565__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17567:338:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17718:9:8",
														"nodeType": "YulTypedName",
														"src": "17718:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17732:4:8",
														"nodeType": "YulTypedName",
														"src": "17732:4:8",
														"type": ""
													}
												],
												"src": "17567:338:8"
											},
											{
												"body": {
													"nativeSrc": "18084:249:8",
													"nodeType": "YulBlock",
													"src": "18084:249:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18101:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18101:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18112:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18112:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18094:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18094:6:8"
																},
																"nativeSrc": "18094:21:8",
																"nodeType": "YulFunctionCall",
																"src": "18094:21:8"
															},
															"nativeSrc": "18094:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "18094:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18135:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18135:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18146:2:8",
																				"nodeType": "YulLiteral",
																				"src": "18146:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18131:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18131:3:8"
																		},
																		"nativeSrc": "18131:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18131:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18151:2:8",
																		"nodeType": "YulLiteral",
																		"src": "18151:2:8",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18124:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18124:6:8"
																},
																"nativeSrc": "18124:30:8",
																"nodeType": "YulFunctionCall",
																"src": "18124:30:8"
															},
															"nativeSrc": "18124:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "18124:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18174:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18174:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18185:2:8",
																				"nodeType": "YulLiteral",
																				"src": "18185:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18170:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18170:3:8"
																		},
																		"nativeSrc": "18170:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18170:18:8"
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2061676772656761746f72206661696c2069",
																		"kind": "string",
																		"nativeSrc": "18190:34:8",
																		"nodeType": "YulLiteral",
																		"src": "18190:34:8",
																		"type": "",
																		"value": "OracleManager: aggregator fail i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18163:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18163:6:8"
																},
																"nativeSrc": "18163:62:8",
																"nodeType": "YulFunctionCall",
																"src": "18163:62:8"
															},
															"nativeSrc": "18163:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "18163:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18245:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "18245:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18256:2:8",
																				"nodeType": "YulLiteral",
																				"src": "18256:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18241:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "18241:3:8"
																		},
																		"nativeSrc": "18241:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "18241:18:8"
																	},
																	{
																		"hexValue": "6e205f636f6e76657274546f41676772656761746f7256616c7565",
																		"kind": "string",
																		"nativeSrc": "18261:29:8",
																		"nodeType": "YulLiteral",
																		"src": "18261:29:8",
																		"type": "",
																		"value": "n _convertToAggregatorValue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18234:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18234:6:8"
																},
																"nativeSrc": "18234:57:8",
																"nodeType": "YulFunctionCall",
																"src": "18234:57:8"
															},
															"nativeSrc": "18234:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "18234:57:8"
														},
														{
															"nativeSrc": "18300:27:8",
															"nodeType": "YulAssignment",
															"src": "18300:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18312:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "18312:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18323:3:8",
																		"nodeType": "YulLiteral",
																		"src": "18323:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18308:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "18308:3:8"
																},
																"nativeSrc": "18308:19:8",
																"nodeType": "YulFunctionCall",
																"src": "18308:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18300:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18300:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17910:423:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18061:9:8",
														"nodeType": "YulTypedName",
														"src": "18061:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18075:4:8",
														"nodeType": "YulTypedName",
														"src": "18075:4:8",
														"type": ""
													}
												],
												"src": "17910:423:8"
											},
											{
												"body": {
													"nativeSrc": "18407:306:8",
													"nodeType": "YulBlock",
													"src": "18407:306:8",
													"statements": [
														{
															"nativeSrc": "18417:10:8",
															"nodeType": "YulAssignment",
															"src": "18417:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "18426:1:8",
																"nodeType": "YulLiteral",
																"src": "18426:1:8",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "18417:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "18417:5:8"
																}
															]
														},
														{
															"nativeSrc": "18436:13:8",
															"nodeType": "YulAssignment",
															"src": "18436:13:8",
															"value": {
																"name": "_base",
																"nativeSrc": "18444:5:8",
																"nodeType": "YulIdentifier",
																"src": "18444:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "18436:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "18436:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18494:213:8",
																"nodeType": "YulBlock",
																"src": "18494:213:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "18536:22:8",
																			"nodeType": "YulBlock",
																			"src": "18536:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "18538:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "18538:16:8"
																						},
																						"nativeSrc": "18538:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "18538:18:8"
																					},
																					"nativeSrc": "18538:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "18538:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "18514:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "18514:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "18524:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "18524:3:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "18529:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "18529:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "18520:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "18520:3:8"
																					},
																					"nativeSrc": "18520:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "18520:14:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "18511:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "18511:2:8"
																			},
																			"nativeSrc": "18511:24:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18511:24:8"
																		},
																		"nativeSrc": "18508:50:8",
																		"nodeType": "YulIf",
																		"src": "18508:50:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "18591:29:8",
																			"nodeType": "YulBlock",
																			"src": "18591:29:8",
																			"statements": [
																				{
																					"nativeSrc": "18593:25:8",
																					"nodeType": "YulAssignment",
																					"src": "18593:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "18606:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "18606:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "18613:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "18613:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "18602:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "18602:3:8"
																						},
																						"nativeSrc": "18602:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "18602:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "18593:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "18593:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "18578:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "18578:8:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18588:1:8",
																					"nodeType": "YulLiteral",
																					"src": "18588:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "18574:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18574:3:8"
																			},
																			"nativeSrc": "18574:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18574:16:8"
																		},
																		"nativeSrc": "18571:49:8",
																		"nodeType": "YulIf",
																		"src": "18571:49:8"
																	},
																	{
																		"nativeSrc": "18633:23:8",
																		"nodeType": "YulAssignment",
																		"src": "18633:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "18645:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "18645:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "18651:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "18651:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "18641:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18641:3:8"
																			},
																			"nativeSrc": "18641:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18641:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "18633:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "18633:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18669:28:8",
																		"nodeType": "YulAssignment",
																		"src": "18669:28:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "18685:1:8",
																					"nodeType": "YulLiteral",
																					"src": "18685:1:8",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "18688:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "18688:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "18681:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "18681:3:8"
																			},
																			"nativeSrc": "18681:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "18681:16:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "18669:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "18669:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "18469:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "18469:8:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18479:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18479:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18466:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "18466:2:8"
																},
																"nativeSrc": "18466:15:8",
																"nodeType": "YulFunctionCall",
																"src": "18466:15:8"
															},
															"nativeSrc": "18458:249:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18482:3:8",
																"nodeType": "YulBlock",
																"src": "18482:3:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "18462:3:8",
																"nodeType": "YulBlock",
																"src": "18462:3:8",
																"statements": []
															},
															"src": "18458:249:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "18338:375:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "18366:5:8",
														"nodeType": "YulTypedName",
														"src": "18366:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "18373:8:8",
														"nodeType": "YulTypedName",
														"src": "18373:8:8",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "18383:3:8",
														"nodeType": "YulTypedName",
														"src": "18383:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "18391:5:8",
														"nodeType": "YulTypedName",
														"src": "18391:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "18398:4:8",
														"nodeType": "YulTypedName",
														"src": "18398:4:8",
														"type": ""
													}
												],
												"src": "18338:375:8"
											},
											{
												"body": {
													"nativeSrc": "18777:843:8",
													"nodeType": "YulBlock",
													"src": "18777:843:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "18815:52:8",
																"nodeType": "YulBlock",
																"src": "18815:52:8",
																"statements": [
																	{
																		"nativeSrc": "18829:10:8",
																		"nodeType": "YulAssignment",
																		"src": "18829:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "18838:1:8",
																			"nodeType": "YulLiteral",
																			"src": "18838:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "18829:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "18829:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18852:5:8",
																		"nodeType": "YulLeave",
																		"src": "18852:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "18797:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "18797:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18790:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18790:6:8"
																},
																"nativeSrc": "18790:16:8",
																"nodeType": "YulFunctionCall",
																"src": "18790:16:8"
															},
															"nativeSrc": "18787:80:8",
															"nodeType": "YulIf",
															"src": "18787:80:8"
														},
														{
															"body": {
																"nativeSrc": "18900:52:8",
																"nodeType": "YulBlock",
																"src": "18900:52:8",
																"statements": [
																	{
																		"nativeSrc": "18914:10:8",
																		"nodeType": "YulAssignment",
																		"src": "18914:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "18923:1:8",
																			"nodeType": "YulLiteral",
																			"src": "18923:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "18914:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "18914:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "18937:5:8",
																		"nodeType": "YulLeave",
																		"src": "18937:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "18886:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "18886:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "18879:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "18879:6:8"
																},
																"nativeSrc": "18879:12:8",
																"nodeType": "YulFunctionCall",
																"src": "18879:12:8"
															},
															"nativeSrc": "18876:76:8",
															"nodeType": "YulIf",
															"src": "18876:76:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "18988:52:8",
																		"nodeType": "YulBlock",
																		"src": "18988:52:8",
																		"statements": [
																			{
																				"nativeSrc": "19002:10:8",
																				"nodeType": "YulAssignment",
																				"src": "19002:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19011:1:8",
																					"nodeType": "YulLiteral",
																					"src": "19011:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "19002:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "19002:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "19025:5:8",
																				"nodeType": "YulLeave",
																				"src": "19025:5:8"
																			}
																		]
																	},
																	"nativeSrc": "18981:59:8",
																	"nodeType": "YulCase",
																	"src": "18981:59:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18986:1:8",
																		"nodeType": "YulLiteral",
																		"src": "18986:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19056:167:8",
																		"nodeType": "YulBlock",
																		"src": "19056:167:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "19091:22:8",
																					"nodeType": "YulBlock",
																					"src": "19091:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "19093:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "19093:16:8"
																								},
																								"nativeSrc": "19093:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "19093:18:8"
																							},
																							"nativeSrc": "19093:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "19093:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "19076:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "19076:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "19086:3:8",
																							"nodeType": "YulLiteral",
																							"src": "19086:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "19073:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "19073:2:8"
																					},
																					"nativeSrc": "19073:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "19073:17:8"
																				},
																				"nativeSrc": "19070:43:8",
																				"nodeType": "YulIf",
																				"src": "19070:43:8"
																			},
																			{
																				"nativeSrc": "19126:25:8",
																				"nodeType": "YulAssignment",
																				"src": "19126:25:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "19139:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "19139:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "19149:1:8",
																							"nodeType": "YulLiteral",
																							"src": "19149:1:8",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "19135:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "19135:3:8"
																					},
																					"nativeSrc": "19135:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "19135:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "19126:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "19126:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "19164:11:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19164:11:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19174:1:8",
																					"nodeType": "YulLiteral",
																					"src": "19174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "19168:2:8",
																						"nodeType": "YulTypedName",
																						"src": "19168:2:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19188:7:8",
																				"nodeType": "YulAssignment",
																				"src": "19188:7:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19194:1:8",
																					"nodeType": "YulLiteral",
																					"src": "19194:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "19188:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "19188:2:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "19208:5:8",
																				"nodeType": "YulLeave",
																				"src": "19208:5:8"
																			}
																		]
																	},
																	"nativeSrc": "19049:174:8",
																	"nodeType": "YulCase",
																	"src": "19049:174:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19054:1:8",
																		"nodeType": "YulLiteral",
																		"src": "19054:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "18968:4:8",
																"nodeType": "YulIdentifier",
																"src": "18968:4:8"
															},
															"nativeSrc": "18961:262:8",
															"nodeType": "YulSwitch",
															"src": "18961:262:8"
														},
														{
															"body": {
																"nativeSrc": "19321:114:8",
																"nodeType": "YulBlock",
																"src": "19321:114:8",
																"statements": [
																	{
																		"nativeSrc": "19335:28:8",
																		"nodeType": "YulAssignment",
																		"src": "19335:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "19348:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "19348:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "19354:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "19354:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "19344:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "19344:3:8"
																			},
																			"nativeSrc": "19344:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "19344:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "19335:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "19335:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "19376:11:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19376:11:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "19386:1:8",
																			"nodeType": "YulLiteral",
																			"src": "19386:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "19380:2:8",
																				"nodeType": "YulTypedName",
																				"src": "19380:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "19400:7:8",
																		"nodeType": "YulAssignment",
																		"src": "19400:7:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "19406:1:8",
																			"nodeType": "YulLiteral",
																			"src": "19406:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "19400:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "19400:2:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "19420:5:8",
																		"nodeType": "YulLeave",
																		"src": "19420:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "19245:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "19245:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19251:2:8",
																						"nodeType": "YulLiteral",
																						"src": "19251:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "19242:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "19242:2:8"
																				},
																				"nativeSrc": "19242:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "19242:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "19259:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "19259:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19269:2:8",
																						"nodeType": "YulLiteral",
																						"src": "19269:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "19256:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "19256:2:8"
																				},
																				"nativeSrc": "19256:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "19256:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19238:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19238:3:8"
																		},
																		"nativeSrc": "19238:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19238:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "19282:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "19282:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19288:3:8",
																						"nodeType": "YulLiteral",
																						"src": "19288:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "19279:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "19279:2:8"
																				},
																				"nativeSrc": "19279:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "19279:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "19297:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "19297:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19307:2:8",
																						"nodeType": "YulLiteral",
																						"src": "19307:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "19294:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "19294:2:8"
																				},
																				"nativeSrc": "19294:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "19294:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19275:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19275:3:8"
																		},
																		"nativeSrc": "19275:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19275:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19235:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "19235:2:8"
																},
																"nativeSrc": "19235:77:8",
																"nodeType": "YulFunctionCall",
																"src": "19235:77:8"
															},
															"nativeSrc": "19232:203:8",
															"nodeType": "YulIf",
															"src": "19232:203:8"
														},
														{
															"nativeSrc": "19444:65:8",
															"nodeType": "YulVariableDeclaration",
															"src": "19444:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "19486:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19486:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "19492:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "19492:8:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19506:1:8",
																				"nodeType": "YulLiteral",
																				"src": "19506:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "19502:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19502:3:8"
																		},
																		"nativeSrc": "19502:6:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19502:6:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "19467:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "19467:18:8"
																},
																"nativeSrc": "19467:42:8",
																"nodeType": "YulFunctionCall",
																"src": "19467:42:8"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "19448:7:8",
																	"nodeType": "YulTypedName",
																	"src": "19448:7:8",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "19457:6:8",
																	"nodeType": "YulTypedName",
																	"src": "19457:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19554:22:8",
																"nodeType": "YulBlock",
																"src": "19554:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19556:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "19556:16:8"
																			},
																			"nativeSrc": "19556:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "19556:18:8"
																		},
																		"nativeSrc": "19556:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "19556:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "19524:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "19524:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19541:1:8",
																						"nodeType": "YulLiteral",
																						"src": "19541:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "19537:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "19537:3:8"
																				},
																				"nativeSrc": "19537:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "19537:6:8"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "19545:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "19545:6:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "19533:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19533:3:8"
																		},
																		"nativeSrc": "19533:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19533:19:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19521:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "19521:2:8"
																},
																"nativeSrc": "19521:32:8",
																"nodeType": "YulFunctionCall",
																"src": "19521:32:8"
															},
															"nativeSrc": "19518:58:8",
															"nodeType": "YulIf",
															"src": "19518:58:8"
														},
														{
															"nativeSrc": "19585:29:8",
															"nodeType": "YulAssignment",
															"src": "19585:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "19598:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "19598:7:8"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "19607:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "19607:6:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "19594:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "19594:3:8"
																},
																"nativeSrc": "19594:20:8",
																"nodeType": "YulFunctionCall",
																"src": "19594:20:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "19585:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "19585:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "18718:902:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "18748:4:8",
														"nodeType": "YulTypedName",
														"src": "18748:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "18754:8:8",
														"nodeType": "YulTypedName",
														"src": "18754:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "18767:5:8",
														"nodeType": "YulTypedName",
														"src": "18767:5:8",
														"type": ""
													}
												],
												"src": "18718:902:8"
											},
											{
												"body": {
													"nativeSrc": "19693:72:8",
													"nodeType": "YulBlock",
													"src": "19693:72:8",
													"statements": [
														{
															"nativeSrc": "19703:56:8",
															"nodeType": "YulAssignment",
															"src": "19703:56:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "19733:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "19733:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "19743:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "19743:8:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19753:4:8",
																				"nodeType": "YulLiteral",
																				"src": "19753:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19739:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "19739:3:8"
																		},
																		"nativeSrc": "19739:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "19739:19:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "19712:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "19712:20:8"
																},
																"nativeSrc": "19712:47:8",
																"nodeType": "YulFunctionCall",
																"src": "19712:47:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "19703:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "19703:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "19625:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "19664:4:8",
														"nodeType": "YulTypedName",
														"src": "19664:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "19670:8:8",
														"nodeType": "YulTypedName",
														"src": "19670:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "19683:5:8",
														"nodeType": "YulTypedName",
														"src": "19683:5:8",
														"type": ""
													}
												],
												"src": "19625:140:8"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_bool_t_uint8_t_bool__to_t_address_t_address_t_bool_t_uint8_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), and(value3, 0xff))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint8__to_t_uint256_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint8_t_uint8_t_bool__to_t_address_t_address_t_uint8_t_uint8_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint8t_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_uint8(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_uint8(value_4)\n        value4 := value_4\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_boolt_uint8t_bool(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_bool(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_uint8(value_4)\n        value4 := value_4\n        let value_5 := calldataload(add(headStart, 160))\n        validator_revert_bool(value_5)\n        value5 := value_5\n    }\n    function abi_encode_tuple_t_stringliteral_95de5b676a898fea71d31b00d4044892258df276cb87d7002a9fc7e5e962e715__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"OracleManager: no aggregator/vau\")\n        mstore(add(headStart, 96), \"lt logic\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"OracleManager: vault feeds not s\")\n        mstore(add(headStart, 96), \"et\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"OracleManager: invalid vaultToke\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint8_t_uint8__to_t_address_t_address_t_uint8_t_uint8__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"OracleManager: invalid token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"OracleManager: aggregator requir\")\n        mstore(add(headStart, 96), \"ed for non-vault\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"OracleManager: fallback aggregat\")\n        mstore(add(headStart, 96), \"or fail\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"OracleManager: primary aggregato\")\n        mstore(add(headStart, 96), \"r fail\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 96))\n        value3 := value_1\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_uint8(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := mload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"OracleManager: vault totalSupply\")\n        mstore(add(headStart, 96), \"=0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"OracleManager: no NFT in vault\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"OracleManager: invalid positionM\")\n        mstore(add(headStart, 96), \"gr\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address_payable_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_uint24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_int24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function abi_decode_uint128_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint96t_address_payablet_address_payablet_address_payablet_uint24t_int24t_int24t_uint128t_uint256t_uint256t_uint128t_uint128_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11\n    {\n        if slt(sub(dataEnd, headStart), 384) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        value1 := abi_decode_address_payable_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_payable_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_payable_fromMemory(add(headStart, 96))\n        value4 := abi_decode_uint24_fromMemory(add(headStart, 128))\n        value5 := abi_decode_int24_fromMemory(add(headStart, 160))\n        value6 := abi_decode_int24_fromMemory(add(headStart, 192))\n        value7 := abi_decode_uint128_fromMemory(add(headStart, 224))\n        let value_1 := 0\n        value_1 := mload(add(headStart, 256))\n        value8 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 288))\n        value9 := value_2\n        value10 := abi_decode_uint128_fromMemory(add(headStart, 320))\n        value11 := abi_decode_uint128_fromMemory(add(headStart, 352))\n    }\n    function abi_encode_tuple_t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"OracleManager: invalid pool\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_int24_fromMemory(add(headStart, 32))\n        value2 := abi_decode_uint16_fromMemory(add(headStart, 64))\n        value3 := abi_decode_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_uint16_fromMemory(add(headStart, 128))\n        let value_1 := mload(add(headStart, 160))\n        validator_revert_uint8(value_1)\n        value5 := value_1\n        let value_2 := mload(add(headStart, 192))\n        validator_revert_bool(value_2)\n        value6 := value_2\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := mload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), length)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_aa7c621a39f9d1cc5f7410468746eb53df077a1592062de7c7ef03b504e8eea2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Tick out of range\")\n        tail := add(headStart, 96)\n    }\n    function negate_t_int24(value) -> ret\n    {\n        let value_1 := signextend(2, value)\n        if eq(value_1, not(8388607)) { panic_error_0x11() }\n        ret := sub(0, value_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_8578a1db42e71a0d8c58dc40be174439f4f08fc99d263720fae7f8a56294a565__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Price overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"OracleManager: aggregator fail i\")\n        mstore(add(headStart, 96), \"n _convertToAggregatorValue\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x85 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x9B05FC75 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xF2AC1EC5 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x222 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x67A4B06 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x41976E09 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x7F4A3102 EQ PUSH2 0x153 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xDD PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP2 ISZERO ISZERO SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x40D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A7 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ABF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP2 AND SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP3 DIV DUP2 AND SWAP2 PUSH1 0x1 PUSH1 0xA8 SHL DUP2 DIV DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND DUP2 MSTORE SWAP6 SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xFF SWAP3 DUP4 AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE AND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x116 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x116 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE8 JUMP JUMPDEST PUSH2 0x420 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B62 JUMP JUMPDEST PUSH2 0x5B4 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ABF JUMP JUMPDEST PUSH2 0x7C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP5 ADD SLOAD SWAP6 DUP7 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP7 DIV DUP2 AND ISZERO ISZERO SWAP2 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP6 DIV DUP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP5 DIV SWAP1 SWAP4 AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE SWAP1 SWAP2 DUP3 SWAP2 SWAP1 ISZERO ISZERO DUP1 PUSH2 0x2B5 JUMPI POP DUP1 PUSH1 0x80 ADD MLOAD JUMPDEST PUSH2 0x317 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A206E6F2061676772656761746F722F766175 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C74206C6F676963 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD PUSH2 0x333 JUMPI PUSH2 0x329 DUP2 PUSH2 0x83C JUMP JUMPDEST SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x407 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP6 AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP4 DUP5 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL DUP5 DIV DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL DUP4 DIV DUP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP3 DIV AND ISZERO ISZERO PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207661756C74206665656473206E6F742073 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH2 0x400 DUP6 DUP3 PUSH2 0x971 JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x415 PUSH2 0xAE1 JUMP JUMPDEST PUSH2 0x41E PUSH0 PUSH2 0xB3A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x428 PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C6964207661756C74546F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND DUP3 MSTORE DUP6 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0xFF DUP1 DUP9 AND DUP6 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 DUP3 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x80 DUP9 ADD DUP2 DUP2 MSTORE DUP15 DUP9 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP8 MSTORE SWAP6 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP10 SSTORE SWAP6 MLOAD SWAP8 ADD DUP1 SLOAD SWAP3 MLOAD SWAP2 MLOAD SWAP6 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP7 DUP6 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP7 SWAP1 SWAP7 AND PUSH2 0xFFFF PUSH1 0xA8 SHL NOT SWAP3 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP8 SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP7 OR OR SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x2FB5936F285B062770BA9AA206CA7282EBB8F84AD2EDA1C664B3059E9C62C1BA SWAP1 PUSH2 0x5A5 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5BC PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST DUP1 PUSH2 0x686 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2061676772656761746F7220726571756972 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x195908199BDC881B9BDB8B5D985D5B1D PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE DUP8 ISZERO ISZERO DUP5 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0xFF DUP1 DUP10 AND PUSH1 0x60 DUP8 ADD SWAP1 DUP2 MSTORE DUP9 ISZERO ISZERO PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE DUP15 DUP8 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 SWAP7 DUP8 SWAP1 MSTORE DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SLOAD SWAP1 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR DUP10 SSTORE SWAP6 MLOAD SWAP8 SWAP1 SWAP5 ADD DUP1 SLOAD SWAP4 MLOAD SWAP2 MLOAD SWAP5 MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xB0 SHL MUL PUSH1 0xFF PUSH1 0xB0 SHL NOT SWAP6 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0xA8 SHL MUL SWAP5 SWAP1 SWAP5 AND PUSH2 0xFFFF PUSH1 0xA8 SHL NOT SWAP2 ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP5 AND SWAP8 SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP7 OR SWAP2 SWAP1 SWAP2 OR SWAP5 SWAP1 SWAP5 AND SWAP3 SWAP1 SWAP3 OR SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SWAP1 MLOAD PUSH32 0x5BE58A9EEF853F8AE7393174434D0BE93DAAD7445510F6CE6E914B2F297885B8 SWAP1 PUSH2 0x7B3 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 SWAP1 SWAP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7CB PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x830 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH2 0x839 DUP2 PUSH2 0xB3A JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x852 DUP7 PUSH0 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 ISZERO DUP1 ISZERO PUSH2 0x867 JUMPI POP DUP6 PUSH1 0x40 ADD MLOAD JUMPDEST DUP1 ISZERO PUSH2 0x87F JUMPI POP PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x90A JUMPI PUSH0 PUSH0 PUSH0 PUSH2 0x899 DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x60 ADD MLOAD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x8FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2066616C6C6261636B206167677265676174 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x1BDC8819985A5B PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST SWAP1 SWAP9 SWAP1 SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207072696D6172792061676772656761746F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8819985A5B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x97F DUP8 PUSH2 0xD69 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH0 PUSH2 0x990 DUP3 DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH0 PUSH2 0x9FC DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3A924D5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9D3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 PUSH0 PUSH2 0xA1A DUP5 DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0x80 ADD MLOAD PUSH2 0x12C1 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH0 DUP6 PUSH1 0xA0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0xA38 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST SWAP1 POP PUSH0 DUP7 PUSH1 0xC0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP4 PUSH2 0xA54 SWAP2 SWAP1 PUSH2 0x1C0F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP16 PUSH0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH2 0xAAD DUP5 DUP5 DUP5 PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP DUP12 ISZERO PUSH2 0xABB JUMPI DUP12 PUSH2 0xABE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAC8 SWAP1 DUP3 PUSH2 0x1C36 JUMP JUMPDEST SWAP14 POP PUSH1 0x8 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xBA7 JUMPI POP PUSH0 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH2 0xBEB SWAP1 DUP6 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xC28 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0xC3B JUMPI POP PUSH1 0xA0 DUP2 MLOAD LT JUMPDEST ISZERO PUSH2 0xC51 JUMPI PUSH0 PUSH0 PUSH0 SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0xD62 JUMP JUMPDEST PUSH0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xC66 SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0xC85 JUMPI PUSH0 PUSH0 PUSH0 SWAP7 POP SWAP7 POP SWAP7 POP POP POP POP POP PUSH2 0xD62 JUMP JUMPDEST DUP8 PUSH1 0xFF DUP2 AND PUSH0 SUB PUSH2 0xD55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP2 PUSH2 0xCD2 SWAP2 PUSH2 0x1C77 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 ISZERO DUP1 PUSH2 0xD22 JUMPI POP PUSH1 0x20 DUP2 MLOAD LT JUMPDEST ISZERO PUSH2 0xD3C JUMPI PUSH0 PUSH0 PUSH0 SWAP10 POP SWAP10 POP SWAP10 POP POP POP POP POP POP POP POP PUSH2 0xD62 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1CFE JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST PUSH1 0x1 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 DUP5 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDAC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD0 SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP4 POP PUSH0 DUP5 GT PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A207661756C7420746F74616C537570706C79 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3D3 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF657A7FE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE68 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE8C SWAP2 SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP3 POP DUP3 PUSH0 SUB PUSH2 0xEDD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A206E6F204E465420696E207661756C740000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x791B98BC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF19 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xFA0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420706F736974696F6E4D PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x33B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH0 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x99FBAB88 PUSH1 0xE0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1007 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1045 SWAP2 SWAP1 PUSH2 0x1C77 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x107D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1091 DUP3 PUSH2 0x1354 JUMP JUMPDEST SWAP1 PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x1DA6 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 SWAP11 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 SWAP10 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 POP SWAP1 SWAP2 SWAP3 POP SWAP1 SWAP2 POP DUP10 PUSH0 ADD DUP11 PUSH1 0x20 ADD DUP12 PUSH1 0x40 ADD DUP13 PUSH1 0x60 ADD DUP14 PUSH1 0x80 ADD DUP15 PUSH1 0xA0 ADD DUP16 PUSH1 0xC0 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP DUP8 PUSH1 0x2 SIGNEXTEND PUSH1 0x2 SIGNEXTEND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A20696E76616C696420706F6F6C0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP2 MSTORE PUSH1 0x24 DUP2 ADD DUP3 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP1 MLOAD PUSH0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH2 0x1230 SWAP2 PUSH2 0x1C77 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1268 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x126D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x127C DUP3 PUSH2 0x1354 JUMP JUMPDEST SWAP1 PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1D30 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12AF SWAP2 SWAP1 PUSH2 0x1E91 JUMP JUMPDEST POP SWAP5 SWAP11 SWAP4 SWAP10 POP SWAP3 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH0 SUB PUSH2 0x12DD JUMPI POP PUSH0 SWAP1 POP DUP1 PUSH2 0x1309 JUMP JUMPDEST PUSH0 PUSH2 0x12E7 DUP7 PUSH2 0x139F JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x12F3 DUP7 PUSH2 0x139F JUMP JUMPDEST SWAP1 POP PUSH2 0x1301 DUP9 DUP4 DUP4 DUP9 PUSH2 0x17EA JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x1326 DUP6 DUP5 PUSH0 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x133C DUP6 DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP PUSH2 0x1348 DUP2 DUP4 PUSH2 0x1C0F JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x137F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2108 PUSH1 0x24 SWAP2 CODECOPY SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1399 SWAP2 SWAP1 PUSH2 0x1F2F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xD89E7 NOT PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SLT DUP1 ISZERO SWAP1 PUSH2 0x13BF JUMPI POP PUSH3 0xD89E8 PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SGT ISZERO JUMPDEST PUSH2 0x13FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x5469636B206F7574206F662072616E6765 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x1415 JUMPI DUP3 PUSH3 0xFFFFFF AND PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x141E DUP4 PUSH2 0x1FDF JUMP JUMPDEST PUSH3 0xFFFFFF AND JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x80 SHL PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x1455 JUMPI PUSH1 0x80 PUSH2 0x1450 DUP3 PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x147F JUMPI PUSH1 0x80 PUSH2 0x147A DUP3 PUSH16 0xFFF97272373D413259A46990580E213A PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x14A9 JUMPI PUSH1 0x80 PUSH2 0x14A4 DUP3 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x14D3 JUMPI PUSH1 0x80 PUSH2 0x14CE DUP3 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x14FD JUMPI PUSH1 0x80 PUSH2 0x14F8 DUP3 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x1527 JUMPI PUSH1 0x80 PUSH2 0x1522 DUP3 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x1551 JUMPI PUSH1 0x80 PUSH2 0x154C DUP3 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x157B JUMPI PUSH1 0x80 PUSH2 0x1576 DUP3 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x15A6 JUMPI PUSH1 0x80 PUSH2 0x15A1 DUP3 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x80 PUSH2 0x15CC DUP3 PUSH16 0xF987A7253AC413176F2B074CF7815E54 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x15FC JUMPI PUSH1 0x80 PUSH2 0x15F7 DUP3 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x1627 JUMPI PUSH1 0x80 PUSH2 0x1622 DUP3 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x1652 JUMPI PUSH1 0x80 PUSH2 0x164D DUP3 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x167D JUMPI PUSH1 0x80 PUSH2 0x1678 DUP3 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x16A8 JUMPI PUSH1 0x80 PUSH2 0x16A3 DUP3 PUSH16 0x70D869A156D2A1F6A7A2E3FADACB4C9B PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x16D3 JUMPI PUSH1 0x80 PUSH2 0x16CE DUP3 PUSH16 0x31BE135F97D08FD981231505542FCFA6 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x16FF JUMPI PUSH1 0x80 PUSH2 0x16FA DUP3 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x172A JUMPI PUSH1 0x80 PUSH2 0x1725 DUP3 PUSH15 0x5D6AF8DEDB81196699C329225EE604 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x1754 JUMPI PUSH1 0x80 PUSH2 0x174F DUP3 PUSH14 0x2216E584F5FA1EA926041BEDFE98 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x177C JUMPI PUSH1 0x80 PUSH2 0x1777 DUP3 PUSH12 0x48A170391F7DC42444E8FA2 PUSH2 0x1FFF JUMP JUMPDEST SWAP1 SHR SWAP1 POP JUMPDEST PUSH0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1792 DUP2 PUSH0 NOT PUSH2 0x1C36 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x20 DUP2 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 GT ISZERO PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x5072696365206F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x180A JUMPI SWAP3 SWAP4 SWAP3 JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT PUSH2 0x1835 JUMPI PUSH2 0x182E DUP6 DUP6 DUP6 PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP PUSH2 0x1309 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT ISZERO PUSH2 0x186E JUMPI PUSH2 0x185A DUP7 DUP6 DUP6 PUSH2 0x1955 JUMP JUMPDEST SWAP2 POP PUSH2 0x1867 DUP6 DUP8 DUP6 PUSH2 0x19C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1309 JUMP JUMPDEST PUSH2 0x1879 DUP6 DUP6 DUP6 PUSH2 0x19C3 JUMP JUMPDEST SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 ISZERO DUP1 PUSH2 0x1899 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO JUMPDEST ISZERO PUSH2 0x18A5 JUMPI POP PUSH0 PUSH2 0x134D JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x18B2 DUP7 DUP7 PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 PUSH2 0x192B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F7261636C654D616E616765723A2061676772656761746F72206661696C2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E205F636F6E76657274546F41676772656761746F7256616C75650000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30E JUMP JUMPDEST PUSH2 0x1936 DUP2 PUSH1 0xA PUSH2 0x20F9 JUMP JUMPDEST PUSH2 0x1940 DUP4 DUP10 PUSH2 0x1FFF JUMP JUMPDEST PUSH2 0x194A SWAP2 SWAP1 PUSH2 0x1C36 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x1974 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19AD PUSH1 0x60 PUSH1 0xFF AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 SHL DUP7 DUP7 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A01 JUMP JUMPDEST DUP2 PUSH2 0x19BA JUMPI PUSH2 0x19BA PUSH2 0x1C22 JUMP JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x19E2 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST PUSH2 0x17E2 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP6 DUP6 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x60 SHL JUMPDEST PUSH0 DUP1 DUP1 PUSH0 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP DUP1 PUSH0 SUB PUSH2 0x1A35 JUMPI PUSH0 DUP5 GT PUSH2 0x1A2A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP DUP3 SWAP1 DIV SWAP1 POP PUSH2 0x134D JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1A40 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD PUSH0 DUP7 DUP2 SUB DUP8 AND SWAP7 DUP8 SWAP1 DIV SWAP7 PUSH1 0x2 PUSH1 0x3 DUP10 MUL DUP2 XOR DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL DUP3 SUB MUL DUP1 DUP11 MUL SWAP1 SWAP2 SUB MUL SWAP2 DUP2 SWAP1 SUB DUP2 SWAP1 DIV PUSH1 0x1 ADD DUP7 DUP5 GT SWAP1 SWAP6 SUB SWAP5 SWAP1 SWAP5 MUL SWAP2 SWAP1 SWAP5 SUB SWAP3 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 MUL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x839 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x134D DUP2 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x839 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AFC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1B07 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1B17 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x1B27 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x1B37 DUP2 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x1B47 DUP2 PUSH2 0x1ADA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x839 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1B77 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1B82 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1B92 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1BA2 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1BB2 DUP2 PUSH2 0x1B55 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x1BC2 DUP2 PUSH2 0x1ADA JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x1BD2 DUP2 PUSH2 0x1B55 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x134D DUP2 PUSH2 0x1AAB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1399 JUMPI PUSH2 0x1399 PUSH2 0x1BFB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x1C50 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C6F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C57 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x1C88 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1C55 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CC4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1CCD DUP7 PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH1 0x60 DUP10 ADD MLOAD SWAP3 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x1CF2 PUSH1 0x80 DUP8 ADD PUSH2 0x1C92 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D0E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x134D DUP2 PUSH2 0x1ADA JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D29 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D4E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1CAB DUP2 PUSH2 0x1AAB JUMP JUMPDEST DUP1 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x180 DUP14 DUP16 SUB SLT ISZERO PUSH2 0x1DC2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP13 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1DDD JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP12 POP PUSH2 0x1DEB PUSH1 0x20 DUP15 ADD PUSH2 0x1D62 JUMP JUMPDEST SWAP11 POP PUSH2 0x1DF9 PUSH1 0x40 DUP15 ADD PUSH2 0x1D62 JUMP JUMPDEST SWAP10 POP PUSH2 0x1E07 PUSH1 0x60 DUP15 ADD PUSH2 0x1D62 JUMP JUMPDEST SWAP9 POP PUSH2 0x1E15 PUSH1 0x80 DUP15 ADD PUSH2 0x1D6D JUMP JUMPDEST SWAP8 POP PUSH2 0x1E23 PUSH1 0xA0 DUP15 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP7 POP PUSH2 0x1E31 PUSH1 0xC0 DUP15 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP6 POP PUSH2 0x1E3F PUSH1 0xE0 DUP15 ADD PUSH2 0x1D90 JUMP JUMPDEST PUSH2 0x100 DUP15 ADD MLOAD PUSH2 0x120 DUP16 ADD MLOAD SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP PUSH2 0x1E5F PUSH2 0x140 DUP15 ADD PUSH2 0x1D90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E6E PUSH2 0x160 DUP15 ADD PUSH2 0x1D90 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1CAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1EA7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x1EB2 DUP2 PUSH2 0x1AAB JUMP JUMPDEST SWAP7 POP PUSH2 0x1EC0 PUSH1 0x20 DUP10 ADD PUSH2 0x1D7F JUMP JUMPDEST SWAP6 POP PUSH2 0x1ECE PUSH1 0x40 DUP10 ADD PUSH2 0x1E80 JUMP JUMPDEST SWAP5 POP PUSH2 0x1EDC PUSH1 0x60 DUP10 ADD PUSH2 0x1E80 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EEA PUSH1 0x80 DUP10 ADD PUSH2 0x1E80 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH2 0x1EFA DUP2 PUSH2 0x1ADA JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1F0B DUP2 PUSH2 0x1B55 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F3F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F55 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1F65 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F7F JUMPI PUSH2 0x1F7F PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1FAE JUMPI PUSH2 0x1FAE PUSH2 0x1F1B JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP7 LT ISZERO PUSH2 0x1FC5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1FD6 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1C55 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND PUSH3 0x7FFFFF NOT DUP2 SUB PUSH2 0x1FF7 JUMPI PUSH2 0x1FF7 PUSH2 0x1BFB JUMP JUMPDEST PUSH0 SUB SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1399 JUMPI PUSH2 0x1399 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x2051 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x2035 JUMPI PUSH2 0x2035 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x2043 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x201A JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2067 JUMPI POP PUSH1 0x1 PUSH2 0x1399 JUMP JUMPDEST DUP2 PUSH2 0x2073 JUMPI POP PUSH0 PUSH2 0x1399 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2089 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2093 JUMPI PUSH2 0x20AF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1399 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A4 PUSH2 0x1BFB JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1399 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x20D2 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1399 JUMP JUMPDEST PUSH2 0x20DE PUSH0 NOT DUP5 DUP5 PUSH2 0x2016 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x20F1 JUMPI PUSH2 0x20F1 PUSH2 0x1BFB JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x134D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2059 JUMP INVALID 0x4F PUSH19 0x61636C654D616E616765723A2063616C6C2072 PUSH6 0x766572746564 KECCAK256 PUSH24 0x2F6F206D7367A26469706673582212203CF387091B36C8CE SWAP9 PUSH29 0xDEE3FB289EA4D9E0D4E66F345E8A87AB8F4CEC6F8DE464736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "5596:10478:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6020:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6020:51:2;;;;;;;;-1:-1:-1;;;6020:51:2;;;;;-1:-1:-1;;;6020:51:2;;;;;-1:-1:-1;;;6020:51:2;;;;;;;;;;-1:-1:-1;;;;;663:32:8;;;645:51;;732:32;;;;727:2;712:18;;705:60;808:14;;801:22;781:18;;;774:50;;;;872:4;860:17;;;855:2;840:18;;833:45;922:14;915:22;909:3;894:19;;887:51;632:3;617:19;6020:51:2;;;;;;;;8412:587;;;;;;:::i;:::-;;:::i;:::-;;;;1119:25:8;;;1192:4;1180:17;;;1175:2;1160:18;;1153:45;1092:18;8412:587:2;949:255:8;1831:101:3;;;:::i;:::-;;6077:58:2;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6077:58:2;;;;;;;;-1:-1:-1;;;6077:58:2;;;;;-1:-1:-1;;;6077:58:2;;;;;-1:-1:-1;;;6077:58:2;;;;;;;;;;-1:-1:-1;;;;;1472:32:8;;;1454:51;;1541:32;;;;1536:2;1521:18;;1514:60;1622:4;1610:17;;;1590:18;;;1583:45;;;;1664:17;1659:2;1644:18;;1637:45;1726:14;1719:22;1713:3;1698:19;;1691:51;1441:3;1426:19;6077:58:2;1209:539:8;1201:85:3;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:3;;;1899:51:8;;1887:2;1872:18;1201:85:3;1753:203:8;7706:700:2;;;;;;:::i;:::-;;:::i;6750:950::-;;;;;;:::i;:::-;;:::i;2081:198:3:-;;;;;;:::i;:::-;;:::i;8412:587:2:-;-1:-1:-1;;;;;8533:20:2;;;8468:13;8533:20;;;:13;:20;;;;;;;;8509:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8509:44:2;;;;;;;;;;;;;-1:-1:-1;;;8509:44:2;;;;;;;;-1:-1:-1;;;8509:44:2;;;;;;;;;;;;8468:13;;;;8509:44;8571:35;;;:55;;;8610:3;:16;;;8571:55;8563:108;;;;-1:-1:-1;;;8563:108:2;;4159:2:8;8563:108:2;;;4141:21:8;4198:2;4178:18;;;4171:30;4237:34;4217:18;;;4210:62;-1:-1:-1;;;4288:18:8;;;4281:38;4336:19;;8563:108:2;;;;;;;;;8687:3;:16;;;8682:311;;8739:24;8759:3;8739:19;:24::i;:::-;8719:44;;-1:-1:-1;8719:44:2;-1:-1:-1;8682:311:2;;;-1:-1:-1;;;;;8827:17:2;;;8794:30;8827:17;;;:10;:17;;;;;;;;;8794:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8794:50:2;;;;;;;;;;;-1:-1:-1;;;8794:50:2;;;;;;;;-1:-1:-1;;;8794:50:2;;;;;;;;;;;;8858:56;;;;-1:-1:-1;;;8858:56:2;;4568:2:8;8858:56:2;;;4550:21:8;4607:2;4587:18;;;4580:30;4646:34;4626:18;;;4619:62;-1:-1:-1;;;4697:18:8;;;4690:32;4739:19;;8858:56:2;4366:398:8;8858:56:2;8948:34;8972:5;8979:2;8948:23;:34::i;:::-;8928:54;;-1:-1:-1;8928:54:2;-1:-1:-1;;8682:311:2;8499:500;8412:587;;;:::o;1831:101:3:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;7706:700:2:-;1094:13:3;:11;:13::i;:::-;-1:-1:-1;;;;;7914:24:2;::::1;7906:70;;;::::0;-1:-1:-1;;;7906:70:2;;4971:2:8;7906:70:2::1;::::0;::::1;4953:21:8::0;5010:2;4990:18;;;4983:30;5049:34;5029:18;;;5022:62;-1:-1:-1;;;5100:18:8;;;5093:31;5141:19;;7906:70:2::1;4769:397:8::0;7906:70:2::1;8012:218;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;8012:218:2;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;8215:4:::1;8012:218:::0;;;;;;7987:22;;::::1;-1:-1:-1::0;7987:22:2;;;:10:::1;:22:::0;;;;;;;:243;;;;;;::::1;-1:-1:-1::0;;;;;;7987:243:2;;::::1;;::::0;;;;;::::1;::::0;;;;;;;;::::1;;-1:-1:-1::0;;;7987:243:2::1;-1:-1:-1::0;;;;7987:243:2;;::::1;-1:-1:-1::0;;;7987:243:2::1;::::0;;;;-1:-1:-1;;;;7987:243:2;;;::::1;-1:-1:-1::0;;;7987:243:2::1;-1:-1:-1::0;;;;;;7987:243:2;;;;;;::::1;::::0;;;;::::1;::::0;;;;;;;;::::1;::::0;;8246:153;;::::1;::::0;::::1;::::0;8065:9;;8106;;8145;;8184;;-1:-1:-1;;;;;5412:32:8;;;5394:51;;5481:32;;;;5476:2;5461:18;;5454:60;5562:4;5550:17;;;5545:2;5530:18;;5523:45;5604:17;;;;5599:2;5584:18;;5577:45;5381:3;5366:19;;5171:457;8246:153:2::1;;;;;;;;7706:700:::0;;;;;:::o;6750:950::-;1094:13:3;:11;:13::i;:::-;-1:-1:-1;;;;;6997:19:2;::::1;6989:60;;;::::0;-1:-1:-1;;;6989:60:2;;5835:2:8;6989:60:2::1;::::0;::::1;5817:21:8::0;5874:2;5854:18;;;5847:30;5913;5893:18;;;5886:58;5961:18;;6989:60:2::1;5633:352:8::0;6989:60:2::1;7064:12;7059:136;;-1:-1:-1::0;;;;;7100:31:2;::::1;7092:92;;;::::0;-1:-1:-1;;;7092:92:2;;6192:2:8;7092:92:2::1;::::0;::::1;6174:21:8::0;6231:2;6211:18;;;6204:30;6270:34;6250:18;;;6243:62;-1:-1:-1;;;6321:18:8;;;6314:46;6377:19;;7092:92:2::1;5990:412:8::0;7092:92:2::1;7228:257;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;7228:257:2;;::::1;::::0;;;;::::1;;::::0;;::::1;::::0;;;;::::1;;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;;;;::::1;;::::0;;;;;;7205:20;;::::1;-1:-1:-1::0;7205:20:2;;;:13:::1;:20:::0;;;;;;;:280;;;;;;::::1;-1:-1:-1::0;;;;;;7205:280:2;;::::1;;::::0;;;;;;;::::1;::::0;;;;;;;;::::1;;-1:-1:-1::0;;;7205:280:2::1;-1:-1:-1::0;;;;7205:280:2;;;::::1;-1:-1:-1::0;;;7205:280:2::1;::::0;;;;-1:-1:-1;;;;7205:280:2;::::1;;-1:-1:-1::0;;;7205:280:2::1;-1:-1:-1::0;;;;;;7205:280:2;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;::::1;::::0;;7501:192;;::::1;::::0;::::1;::::0;7272:17;;7323:18;;7375:16;;7423:11;;7462:12;;-1:-1:-1;;;;;663:32:8;;;645:51;;732:32;;;;727:2;712:18;;705:60;808:14;;801:22;796:2;781:18;;774:50;872:4;860:17;855:2;840:18;;833:45;922:14;;915:22;909:3;894:19;;887:51;632:3;617:19;;402:542;7501:192:2::1;;;;;;;;6750:950:::0;;;;;;:::o;2081:198:3:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:3;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:3;;6609:2:8;2161:73:3::1;::::0;::::1;6591:21:8::0;6648:2;6628:18;;;6621:30;6687:34;6667:18;;;6660:62;-1:-1:-1;;;6738:18:8;;;6731:36;6784:19;;2161:73:3::1;6407:402:8::0;2161:73:3::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;9176:723:2:-;9275:13;9290:14;9321;9337:9;9348:7;9359:66;9381:3;:21;;;9404:3;:20;;;9359:21;:66::i;:::-;9320:105;;;;;;9440:9;9439:10;:36;;;;;9453:3;:22;;;9439:36;:76;;;;-1:-1:-1;9479:22:2;;;;-1:-1:-1;;;;;9479:36:2;;;9439:76;9435:365;;;9532:15;9549:17;9568:15;9603:67;9625:3;:22;;;9649:3;:20;;;9603:21;:67::i;:::-;9531:139;;;;;;9692:10;9684:62;;;;-1:-1:-1;;;9684:62:2;;7016:2:8;9684:62:2;;;6998:21:8;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:8;;;7138:37;7192:19;;9684:62:2;6814:403:8;9684:62:2;9768:9;;9779;;-1:-1:-1;9176:723:2;-1:-1:-1;;;;;;9176:723:2:o;9435:365::-;9817:9;9809:60;;;;-1:-1:-1;;;9809:60:2;;7424:2:8;9809:60:2;;;7406:21:8;7463:2;7443:18;;;7436:30;7502:34;7482:18;;;7475:62;-1:-1:-1;;;7553:18:8;;;7546:36;7599:19;;9809:60:2;7222:402:8;9809:60:2;9887:1;;9890;;-1:-1:-1;9176:723:2;-1:-1:-1;;;9176:723:2:o;10230:1112::-;10362:13;10377:14;10408:19;10429:15;10446:14;10464:27;10480:10;10464:15;:27::i;:::-;10407:84;;;;;;10502:25;10530:35;10549:6;10557:7;10530:18;:35::i;:::-;10502:63;;10577:20;10599:10;10613:53;10645:10;-1:-1:-1;;;;;10633:30:2;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10613:19;:53::i;:::-;10576:90;;;;10677:18;10697;10719:141;10757:12;10783:3;:13;;;10810:3;:13;;;10837:3;:13;;;10719:24;:141::i;:::-;10676:184;;;;10871:12;10899:3;:9;;;-1:-1:-1;;;;;10886:22:2;:10;:22;;;;:::i;:::-;10871:37;;10918:12;10946:3;:9;;;-1:-1:-1;;;;;10933:22:2;:10;:22;;;;:::i;:::-;10918:37;;10966:24;10993:178;;;;;;;;11028:2;:19;;;-1:-1:-1;;;;;10993:178:2;;;;;11067:2;:19;;;-1:-1:-1;;;;;10993:178:2;;;;;11106:2;:17;;;10993:178;;;;;;11143:2;:17;;;10993:178;;;;;10966:205;;11182:18;11203:42;11230:4;11236;11242:2;11203:26;:42::i;:::-;11182:63;-1:-1:-1;11278:16:2;;:34;;11301:11;11278:34;;;11297:1;11278:34;11264:49;;:10;:49;:::i;:::-;11256:57;;11334:1;11323:12;;10397:945;;;;;;;;;;;;10230:1112;;;;;:::o;1359:130:3:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:3;719:10:5;1422:23:3;1414:68;;;;-1:-1:-1;;;1414:68:3;;8703:2:8;1414:68:3;;;8685:21:8;;;8722:18;;;8715:30;8781:34;8761:18;;;8754:62;8833:18;;1414:68:3;8501:356:8;2433:187:3;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:3;;;-1:-1:-1;;;;;;2541:17:3;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14570:1190:2:-;14687:12;;;-1:-1:-1;;;;;14750:24:2;;14746:75;;-1:-1:-1;14798:5:2;;-1:-1:-1;14798:5:2;;-1:-1:-1;14798:5:2;14790:20;;14746:75;14853:70;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14853:70:2;-1:-1:-1;;;14853:70:2;;;14979:30;;14830:20;;;;-1:-1:-1;;;;;14979:21:2;;;:30;;14853:70;;14979:30;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14933:76;;;;15024:11;15023:12;:39;;;;15059:3;15039:10;:17;:23;15023:39;15019:90;;;15086:5;15093:1;15096;15078:20;;;;;;;;;;;15019:90;15122:13;15156:10;15145:66;;;;;;;;;;;;:::i;:::-;15118:93;;;;;;15235:1;15225:6;:11;15221:62;;15260:5;15267:1;15270;15252:20;;;;;;;;;;;;15221:62;15313:11;15338:16;;;15293:17;15338:16;15334:367;;15451:63;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15451:63:2;-1:-1:-1;;;15451:63:2;;;15412:116;;15371:15;;;;-1:-1:-1;;;;;15412:21:2;;;:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15370:158;;;;15547:10;15546:11;:34;;;;15578:2;15561:7;:14;:19;15546:34;15542:93;;;15608:5;15615:1;15618;15600:20;;;;;;;;;;;;;;;15542:93;15673:7;15662:28;;;;;;;;;;;;:::i;:::-;15648:42;;15356:345;;15334:367;15718:4;;-1:-1:-1;15732:6:2;;-1:-1:-1;15741:11:2;-1:-1:-1;;;;14570:1190:2;;;;;;:::o;11348:533::-;11440:19;11461:15;11478:14;11508:13;11536:10;11508:39;;11571:1;-1:-1:-1;;;;;11571:13:2;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11557:29;;11618:1;11604:11;:15;11596:62;;;;-1:-1:-1;;;11596:62:2;;10858:2:8;11596:62:2;;;10840:21:8;10897:2;10877:18;;;10870:30;10936:34;10916:18;;;10909:62;-1:-1:-1;;;10987:18:8;;;10980:32;11029:19;;11596:62:2;10656:398:8;11596:62:2;11678:1;-1:-1:-1;;;;;11678:14:2;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11668:26;;11712:7;11723:1;11712:12;11704:55;;;;-1:-1:-1;;;11704:55:2;;11261:2:8;11704:55:2;;;11243:21:8;11300:2;11280:18;;;11273:30;11339:32;11319:18;;;11312:60;11389:18;;11704:55:2;11059:354:8;11704:55:2;11778:1;-1:-1:-1;;;;;11778:17:2;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11769:28;-1:-1:-1;;;;;;11815:20:2;;11807:67;;;;-1:-1:-1;;;11807:67:2;;11620:2:8;11807:67:2;;;11602:21:8;11659:2;11639:18;;;11632:30;11698:34;11678:18;;;11671:62;-1:-1:-1;;;11749:18:8;;;11742:32;11791:19;;11807:67:2;11418:398:8;11807:67:2;11498:383;11348:533;;;;;:::o;11887:782::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12037:12:2;12051:17;12072:6;-1:-1:-1;;;;;12072:17:2;12126:46;;;12174:7;12103:79;;;;;;11967:25:8;;11955:2;11940:18;;11821:177;12103:79:2;;;;-1:-1:-1;;12103:79:2;;;;;;;;;;;;;;-1:-1:-1;;;;;12103:79:2;-1:-1:-1;;;;;;12103:79:2;;;;;;;;;;12072:120;;;;12103:79;12072:120;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12036:156;;;;12210:7;12219:19;12233:4;12219:13;:19::i;:::-;12202:37;;;;;-1:-1:-1;;;12202:37:2;;;;;;;;:::i;:::-;;12532:4;12508:154;;;;;;;;;;;;:::i;:::-;12250:412;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12292:3;:10;;12316:3;:10;;12354:3;:13;;12381:3;:13;;12408:3;:13;;12463:3;:9;;12486:3;:9;;12250:412;-1:-1:-1;;;;;12250:412:2;-1:-1:-1;;;;;12250:412:2;;;;;-1:-1:-1;;;;;12250:412:2;-1:-1:-1;;;;;12250:412:2;;;;;-1:-1:-1;;;;;12250:412:2;-1:-1:-1;;;;;12250:412:2;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12250:412:2;-1:-1:-1;;;;;12250:412:2;;;;;-1:-1:-1;;;;;12250:412:2;-1:-1:-1;;;;;12250:412:2;;;;;;;;;;;12026:643;;11887:782;;;;:::o;12675:486::-;12745:20;;-1:-1:-1;;;;;12797:22:2;;12789:62;;;;-1:-1:-1;;;12789:62:2;;14636:2:8;12789:62:2;;;14618:21:8;14675:2;14655:18;;;14648:30;14714:29;14694:18;;;14687:57;14761:18;;12789:62:2;14434:351:8;12789:62:2;12930:53;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12930:53:2;-1:-1:-1;;;12930:53:2;;;12897:96;;12862:12;;;;-1:-1:-1;;;;;12897:19:2;;;:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12861:132;;;;13011:7;13020:19;13034:4;13020:13;:19::i;:::-;13003:37;;;;;-1:-1:-1;;;13003:37:2;;;;;;;;:::i;:::-;;13094:4;13083:71;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13050:104:2;;;;-1:-1:-1;12675:486:2;;-1:-1:-1;;;;;;;;12675:486:2:o;13167:588::-;13337:12;13351;13379:9;-1:-1:-1;;;;;13379:14:2;13392:1;13379:14;13375:58;;-1:-1:-1;13417:1:2;;-1:-1:-1;13417:1:2;13409:13;;13375:58;13442:17;13462:43;13495:9;13462:32;:43::i;:::-;13442:63;;13515:17;13535:43;13568:9;13535:32;:43::i;:::-;13515:63;;13604:144;13657:12;13683:9;13706;13729;13604:39;:144::i;:::-;13589:159;;-1:-1:-1;13589:159:2;-1:-1:-1;;;13167:588:2;;;;;;;;:::o;13761:335::-;13904:7;13923:12;13938:49;13964:4;13970:2;:7;;;13979:2;:7;;;13938:25;:49::i;:::-;13923:64;;13997:12;14012:49;14038:4;14044:2;:7;;;14053:2;:7;;;14012:25;:49::i;:::-;13997:64;-1:-1:-1;14078:11:2;13997:64;14078:4;:11;:::i;:::-;14071:18;;;;13761:335;;;;;;:::o;15766:306::-;15837:13;15887:2;15866:11;:18;:23;15862:74;;;15891:45;;;;;;;;;;;;;;;;;;15766:306;-1:-1:-1;;15766:306:2:o;15862:74::-;16001:4;15988:11;15984:22;15969:37;;16043:11;16032:33;;;;;;;;;;;;:::i;:::-;16025:40;15766:306;-1:-1:-1;;15766:306:2:o;1548:2525::-;1611:20;-1:-1:-1;;1651:16:2;;;;;;;;:36;;-1:-1:-1;1535:6:2;1671:16;;;;;;1651:36;1643:66;;;;-1:-1:-1;;;1643:66:2;;17061:2:8;1643:66:2;;;17043:21:8;17100:2;17080:18;;;17073:30;-1:-1:-1;;;17119:18:8;;;17112:47;17176:18;;1643:66:2;16859:341:8;1643:66:2;1720:15;1746:1;1739:4;:8;;;1738:101;;1832:4;1810:29;;1738:101;;;1786:5;1787:4;1786:5;:::i;:::-;1764:30;;1738:101;1720:119;-1:-1:-1;;;;1938:3:2;1928:13;;:22;1924:87;;2008:3;1961:42;:5;1969:34;1961:42;:::i;:::-;1960:51;;1952:59;;1924:87;2035:3;2025:13;;:22;2021:87;;2105:3;2058:42;:5;2066:34;2058:42;:::i;:::-;2057:51;;2049:59;;2021:87;2132:3;2122:13;;:22;2118:87;;2202:3;2155:42;:5;2163:34;2155:42;:::i;:::-;2154:51;;2146:59;;2118:87;2229:3;2219:13;;:22;2215:87;;2299:3;2252:42;:5;2260:34;2252:42;:::i;:::-;2251:51;;2243:59;;2215:87;2326:4;2316:14;;:22;2312:87;;2396:3;2349:42;:5;2357:34;2349:42;:::i;:::-;2348:51;;2340:59;;2312:87;2423:4;2413:14;;:22;2409:87;;2493:3;2446:42;:5;2454:34;2446:42;:::i;:::-;2445:51;;2437:59;;2409:87;2520:4;2510:14;;:22;2506:87;;2590:3;2543:42;:5;2551:34;2543:42;:::i;:::-;2542:51;;2534:59;;2506:87;2617:4;2607:14;;:22;2603:87;;2687:3;2640:42;:5;2648:34;2640:42;:::i;:::-;2639:51;;2631:59;;2603:87;2714:5;2704:15;;:22;2700:87;;2784:3;2737:42;:5;2745:34;2737:42;:::i;:::-;2736:51;;2728:59;;2700:87;2811:5;2801:15;;:22;2797:87;;2881:3;2834:42;:5;2842:34;2834:42;:::i;:::-;2833:51;;2825:59;;2797:87;2908:5;2898:15;;:22;2894:87;;2978:3;2931:42;:5;2939:34;2931:42;:::i;:::-;2930:51;;2922:59;;2894:87;3005:5;2995:15;;:22;2991:87;;3075:3;3028:42;:5;3036:34;3028:42;:::i;:::-;3027:51;;3019:59;;2991:87;3102:6;3092:16;;:22;3088:87;;3172:3;3125:42;:5;3133:34;3125:42;:::i;:::-;3124:51;;3116:59;;3088:87;3199:6;3189:16;;:22;3185:87;;3269:3;3222:42;:5;3230:34;3222:42;:::i;:::-;3221:51;;3213:59;;3185:87;3296:6;3286:16;;:22;3282:87;;3366:3;3319:42;:5;3327:34;3319:42;:::i;:::-;3318:51;;3310:59;;3282:87;3393:6;3383:16;;:22;3379:87;;3463:3;3416:42;:5;3424:34;3416:42;:::i;:::-;3415:51;;3407:59;;3379:87;3490:7;3480:17;;:22;3476:86;;3559:3;3513:41;:5;3521:33;3513:41;:::i;:::-;3512:50;;3504:58;;3476:86;3586:7;3576:17;;:22;3572:85;;3654:3;3609:40;:5;3617:32;3609:40;:::i;:::-;3608:49;;3600:57;;3572:85;3681:7;3671:17;;:22;3667:83;;3747:3;3704:38;:5;3712:30;3704:38;:::i;:::-;3703:47;;3695:55;;3667:83;3774:7;3764:17;;:22;3760:78;;3835:3;3797:33;:5;3805:25;3797:33;:::i;:::-;3796:42;;3788:50;;3760:78;3860:1;3853:4;:8;;;3849:72;;;3885:25;3905:5;-1:-1:-1;;3885:25:2;:::i;:::-;3877:33;;3849:72;3958:2;3949:11;;;-1:-1:-1;;;;;3978:28:2;;;3970:55;;;;-1:-1:-1;;;3970:55:2;;17769:2:8;3970:55:2;;;17751:21:8;17808:2;17788:18;;;17781:30;-1:-1:-1;;;17827:18:8;;;17820:44;17881:18;;3970:55:2;17567:338:8;3970:55:2;4058:7;1548:2525;-1:-1:-1;;;;1548:2525:2:o;6173:799:6:-;6353:15;6370;6417:13;-1:-1:-1;;;;;6401:29:6;:13;-1:-1:-1;;;;;6401:29:6;;6397:98;;;6466:13;;6481;6397:98;6526:13;-1:-1:-1;;;;;6510:29:6;:12;-1:-1:-1;;;;;6510:29:6;;6506:460;;6565:63;6588:13;6603;6618:9;6565:22;:63::i;:::-;6555:73;;6506:460;;;6664:13;-1:-1:-1;;;;;6649:28:6;:12;-1:-1:-1;;;;;6649:28:6;;6645:321;;;6703:62;6726:12;6740:13;6755:9;6703:22;:62::i;:::-;6693:72;;6789:62;6812:13;6827:12;6841:9;6789:22;:62::i;:::-;6779:72;;6645:321;;;6892:63;6915:13;6930;6945:9;6892:22;:63::i;:::-;6882:73;;6173:799;;;;;;;:::o;14102:462:2:-;14246:7;14269:8;;;:40;;-1:-1:-1;;;;;;14281:28:2;;;14269:40;14265:79;;;-1:-1:-1;14332:1:2;14325:8;;14265:79;14354:7;14363:9;14374:7;14385:50;14407:14;14423:11;14385:21;:50::i;:::-;14353:82;;;;;;14453:2;14445:74;;;;-1:-1:-1;;;14445:74:2;;18112:2:8;14445:74:2;;;18094:21:8;18151:2;18131:18;;;18124:30;18190:34;18170:18;;;18163:62;18261:29;18241:18;;;18234:57;18308:19;;14445:74:2;17910:423:8;14445:74:2;14549:7;14555:1;14549:2;:7;:::i;:::-;14537;14543:1;14537:3;:7;:::i;:::-;14536:21;;;;:::i;:::-;14529:28;14102:462;-1:-1:-1;;;;;;;14102:462:2:o;4309:556:6:-;4459:15;4530:13;-1:-1:-1;;;;;4514:29:6;:13;-1:-1:-1;;;;;4514:29:6;;4510:98;;;4579:13;;4594;4510:98;4835:13;-1:-1:-1;;;;;4646:202:6;:186;309:2:0;4683:45:6;;4691:9;-1:-1:-1;;;;;4683:18:6;:45;;4766:13;4750;:29;-1:-1:-1;;;;;4646:186:6;4801:13;-1:-1:-1;;;;;4646:186:6;:15;:186::i;:::-;:202;;;;;:::i;:::-;;;4309:556;-1:-1:-1;;;;4309:556:6:o;5223:409::-;5373:15;5420:13;-1:-1:-1;;;;;5404:29:6;:13;-1:-1:-1;;;;;5404:29:6;;5400:98;;;5469:13;;5484;5400:98;5540:75;5556:9;-1:-1:-1;;;;;5540:75:6;5583:13;5567;:29;-1:-1:-1;;;;;5540:75:6;-1:-1:-1;;;741:4127:1;853:14;;;-1:-1:-1;;1416:1:1;1413;1406:20;1459:1;1456;1452:9;1443:18;;1514:5;1510:2;1507:13;1499:5;1495:2;1491:14;1487:34;1478:43;;;1615:5;1624:1;1615:10;1611:203;;1667:1;1653:11;:15;1645:24;;;;;;-1:-1:-1;1728:23:1;;;;-1:-1:-1;1786:13:1;;1611:203;1953:5;1939:11;:19;1931:28;;;;;;2260:17;2344:11;2341:1;2338;2331:25;2736:12;2752:15;;;2751:31;;2888:22;;;;;3763:1;3744;:15;;3743:21;;4006:17;;;4002:21;;3995:28;4068:17;;;4064:21;;4057:28;4131:17;;;4127:21;;4120:28;4194:17;;;4190:21;;4183:28;4257:17;;;4253:21;;4246:28;4321:17;;;4317:21;;;4310:28;3300:12;;;;3296:23;;;3321:1;3292:31;2489:20;;;2478:32;;;3359:12;;;;2536:21;;;;3032:16;;;;3350:21;;;;4813:11;;;;;-1:-1:-1;;741:4127:1;;;;;:::o;14:131:8:-;-1:-1:-1;;;;;89:31:8;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;1961:114::-;2045:4;2038:5;2034:16;2027:5;2024:27;2014:55;;2065:1;2062;2055:12;2080:805;2171:6;2179;2187;2195;2203;2256:3;2244:9;2235:7;2231:23;2227:33;2224:53;;;2273:1;2270;2263:12;2224:53;2312:9;2299:23;2331:31;2356:5;2331:31;:::i;:::-;2381:5;-1:-1:-1;2438:2:8;2423:18;;2410:32;2451:33;2410:32;2451:33;:::i;:::-;2503:7;-1:-1:-1;2562:2:8;2547:18;;2534:32;2575:33;2534:32;2575:33;:::i;:::-;2627:7;-1:-1:-1;2686:2:8;2671:18;;2658:32;2699:31;2658:32;2699:31;:::i;:::-;2749:7;-1:-1:-1;2808:3:8;2793:19;;2780:33;2822:31;2780:33;2822:31;:::i;:::-;2872:7;2862:17;;;2080:805;;;;;;;;:::o;2890:118::-;2976:5;2969:13;2962:21;2955:5;2952:32;2942:60;;2998:1;2995;2988:12;3013:939;3109:6;3117;3125;3133;3141;3149;3202:3;3190:9;3181:7;3177:23;3173:33;3170:53;;;3219:1;3216;3209:12;3170:53;3258:9;3245:23;3277:31;3302:5;3277:31;:::i;:::-;3327:5;-1:-1:-1;3384:2:8;3369:18;;3356:32;3397:33;3356:32;3397:33;:::i;:::-;3449:7;-1:-1:-1;3508:2:8;3493:18;;3480:32;3521:33;3480:32;3521:33;:::i;:::-;3573:7;-1:-1:-1;3632:2:8;3617:18;;3604:32;3645:30;3604:32;3645:30;:::i;:::-;3694:7;-1:-1:-1;3753:3:8;3738:19;;3725:33;3767:31;3725:33;3767:31;:::i;:::-;3817:7;-1:-1:-1;3876:3:8;3861:19;;3848:33;3890:30;3848:33;3890:30;:::i;:::-;3939:7;3929:17;;;3013:939;;;;;;;;:::o;7629:251::-;7699:6;7752:2;7740:9;7731:7;7727:23;7723:32;7720:52;;;7768:1;7765;7758:12;7720:52;7800:9;7794:16;7819:31;7844:5;7819:31;:::i;7885:127::-;7946:10;7941:3;7937:20;7934:1;7927:31;7977:4;7974:1;7967:15;8001:4;7998:1;7991:15;8017:125;8082:9;;;8103:10;;;8100:36;;;8116:18;;:::i;8147:127::-;8208:10;8203:3;8199:20;8196:1;8189:31;8239:4;8236:1;8229:15;8263:4;8260:1;8253:15;8279:217;8319:1;8345;8335:132;;8389:10;8384:3;8380:20;8377:1;8370:31;8424:4;8421:1;8414:15;8452:4;8449:1;8442:15;8335:132;-1:-1:-1;8481:9:8;;8279:217::o;8862:250::-;8947:1;8957:113;8971:6;8968:1;8965:13;8957:113;;;9047:11;;;9041:18;9028:11;;;9021:39;8993:2;8986:10;8957:113;;;-1:-1:-1;;9104:1:8;9086:16;;9079:27;8862:250::o;9117:287::-;9246:3;9284:6;9278:13;9300:66;9359:6;9354:3;9347:4;9339:6;9335:17;9300:66;:::i;:::-;9382:16;;;;;9117:287;-1:-1:-1;;9117:287:8:o;9409:179::-;9487:13;;9540:22;9529:34;;9519:45;;9509:73;;9578:1;9575;9568:12;9509:73;9409:179;;;:::o;9593:571::-;9696:6;9704;9712;9720;9728;9781:3;9769:9;9760:7;9756:23;9752:33;9749:53;;;9798:1;9795;9788:12;9749:53;9821:39;9850:9;9821:39;:::i;:::-;9900:2;9885:18;;9879:25;9966:2;9951:18;;9945:25;10060:2;10045:18;;10039:25;9811:49;;-1:-1:-1;9879:25:8;;-1:-1:-1;9945:25:8;-1:-1:-1;10039:25:8;-1:-1:-1;10109:49:8;10153:3;10138:19;;10109:49;:::i;:::-;10099:59;;9593:571;;;;;;;;:::o;10169:247::-;10237:6;10290:2;10278:9;10269:7;10265:23;10261:32;10258:52;;;10306:1;10303;10296:12;10258:52;10338:9;10332:16;10357:29;10380:5;10357:29;:::i;10421:230::-;10491:6;10544:2;10532:9;10523:7;10519:23;10515:32;10512:52;;;10560:1;10557;10550:12;10512:52;-1:-1:-1;10605:16:8;;10421:230;-1:-1:-1;10421:230:8:o;12003:396::-;12152:2;12141:9;12134:21;12115:4;12184:6;12178:13;12227:6;12222:2;12211:9;12207:18;12200:34;12243:79;12315:6;12310:2;12299:9;12295:18;12290:2;12282:6;12278:15;12243:79;:::i;:::-;12383:2;12362:15;-1:-1:-1;;12358:29:8;12343:45;;;;12390:2;12339:54;;12003:396;-1:-1:-1;;12003:396:8:o;12404:146::-;12491:13;;12513:31;12491:13;12513:31;:::i;12555:165::-;12633:13;;12686:8;12675:20;;12665:31;;12655:59;;12710:1;12707;12700:12;12725:164;12802:13;;12855:1;12844:20;;;12834:31;;12824:59;;12879:1;12876;12869:12;12894:192;12973:13;;-1:-1:-1;;;;;13015:46:8;;13005:57;;12995:85;;13076:1;13073;13066:12;13091:1338;13278:6;13286;13294;13302;13310;13318;13326;13334;13342;13350;13358:7;13367;13421:3;13409:9;13400:7;13396:23;13392:33;13389:53;;;13438:1;13435;13428:12;13389:53;13470:9;13464:16;13520:26;13513:5;13509:38;13502:5;13499:49;13489:77;;13562:1;13559;13552:12;13489:77;13585:5;-1:-1:-1;13609:57:8;13662:2;13647:18;;13609:57;:::i;:::-;13599:67;;13685:57;13738:2;13727:9;13723:18;13685:57;:::i;:::-;13675:67;;13761:57;13814:2;13803:9;13799:18;13761:57;:::i;:::-;13751:67;;13837:49;13881:3;13870:9;13866:19;13837:49;:::i;:::-;13827:59;;13905:48;13948:3;13937:9;13933:19;13905:48;:::i;:::-;13895:58;;13972:48;14015:3;14004:9;14000:19;13972:48;:::i;:::-;13962:58;;14039:50;14084:3;14073:9;14069:19;14039:50;:::i;:::-;14155:3;14140:19;;14134:26;14252:3;14237:19;;14231:26;14029:60;;-1:-1:-1;14134:26:8;-1:-1:-1;14231:26:8;-1:-1:-1;14303:50:8;14348:3;14333:19;;14303:50;:::i;:::-;14292:61;;14373:50;14418:3;14407:9;14403:19;14373:50;:::i;:::-;14362:61;;13091:1338;;;;;;;;;;;;;;:::o;14790:163::-;14868:13;;14921:6;14910:18;;14900:29;;14890:57;;14943:1;14940;14933:12;14958:843;15072:6;15080;15088;15096;15104;15112;15120;15173:3;15161:9;15152:7;15148:23;15144:33;15141:53;;;15190:1;15187;15180:12;15141:53;15222:9;15216:16;15241:31;15266:5;15241:31;:::i;:::-;15291:5;-1:-1:-1;15315:47:8;15358:2;15343:18;;15315:47;:::i;:::-;15305:57;;15381:48;15425:2;15414:9;15410:18;15381:48;:::i;:::-;15371:58;;15448:48;15492:2;15481:9;15477:18;15448:48;:::i;:::-;15438:58;;15515:49;15559:3;15548:9;15544:19;15515:49;:::i;:::-;15505:59;;15609:3;15598:9;15594:19;15588:26;15623:31;15646:7;15623:31;:::i;:::-;15725:3;15710:19;;15704:26;15673:7;;-1:-1:-1;15739:30:8;15704:26;15739:30;:::i;:::-;15788:7;15778:17;;;14958:843;;;;;;;;;;:::o;15806:127::-;15867:10;15862:3;15858:20;15855:1;15848:31;15898:4;15895:1;15888:15;15922:4;15919:1;15912:15;15938:916;16018:6;16071:2;16059:9;16050:7;16046:23;16042:32;16039:52;;;16087:1;16084;16077:12;16039:52;16120:9;16114:16;16153:18;16145:6;16142:30;16139:50;;;16185:1;16182;16175:12;16139:50;16208:22;;16261:4;16253:13;;16249:27;-1:-1:-1;16239:55:8;;16290:1;16287;16280:12;16239:55;16323:2;16317:9;16349:18;16341:6;16338:30;16335:56;;;16371:18;;:::i;:::-;16420:2;16414:9;16512:2;16474:17;;-1:-1:-1;;16470:31:8;;;16503:2;16466:40;16462:54;16450:67;;16547:18;16532:34;;16568:22;;;16529:62;16526:88;;;16594:18;;:::i;:::-;16630:2;16623:22;16654;;;16695:15;;;16712:2;16691:24;16688:37;-1:-1:-1;16685:57:8;;;16738:1;16735;16728:12;16685:57;16751:72;16816:6;16811:2;16803:6;16799:15;16794:2;16790;16786:11;16751:72;:::i;:::-;16842:6;15938:916;-1:-1:-1;;;;;15938:916:8:o;17205:184::-;17239:3;17286:5;17283:1;17272:20;17320:7;17316:12;17307:7;17304:25;17301:51;;17332:18;;:::i;:::-;17372:1;17368:15;;17205:184;-1:-1:-1;;17205:184:8:o;17394:168::-;17467:9;;;17498;;17515:15;;;17509:22;;17495:37;17485:71;;17536:18;;:::i;18338:375::-;18426:1;18444:5;18458:249;18479:1;18469:8;18466:15;18458:249;;;18529:4;18524:3;18520:14;18514:4;18511:24;18508:50;;;18538:18;;:::i;:::-;18588:1;18578:8;18574:16;18571:49;;;18602:16;;;;18571:49;18685:1;18681:16;;;;;18641:15;;18458:249;;;18338:375;;;;;;:::o;18718:902::-;18767:5;18797:8;18787:80;;-1:-1:-1;18838:1:8;18852:5;;18787:80;18886:4;18876:76;;-1:-1:-1;18923:1:8;18937:5;;18876:76;18968:4;18986:1;18981:59;;;;19054:1;19049:174;;;;18961:262;;18981:59;19011:1;19002:10;;19025:5;;;19049:174;19086:3;19076:8;19073:17;19070:43;;;19093:18;;:::i;:::-;-1:-1:-1;;19149:1:8;19135:16;;19208:5;;18961:262;;19307:2;19297:8;19294:16;19288:3;19282:4;19279:13;19275:36;19269:2;19259:8;19256:16;19251:2;19245:4;19242:12;19238:35;19235:77;19232:203;;;-1:-1:-1;19344:19:8;;;19420:5;;19232:203;19467:42;-1:-1:-1;;19492:8:8;19486:4;19467:42;:::i;:::-;19545:6;19541:1;19537:6;19533:19;19524:7;19521:32;19518:58;;;19556:18;;:::i;:::-;19594:20;;18718:902;-1:-1:-1;;;18718:902:8:o;19625:140::-;19683:5;19712:47;19753:4;19743:8;19739:19;19733:4;19712:47;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1709000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getPrice(address)": "infinite",
								"oracleConfigs(address)": "4864",
								"owner()": "2299",
								"renounceOwnership()": "infinite",
								"setOracleConfig(address,address,address,bool,uint8,bool)": "infinite",
								"setVaultUnderlyingFeeds(address,address,address,uint8,uint8)": "infinite",
								"transferOwnership(address)": "infinite",
								"vaultFeeds(address)": "4932"
							},
							"internal": {
								"_computeLiquidityAmounts(uint160,int24,int24,uint128)": "infinite",
								"_computeVaultTokenPrice(address,struct OracleManager.VaultUnderlyingFeeds memory)": "infinite",
								"_convertToAggregatorValue(uint256,address,uint8)": "infinite",
								"_convertVaultTokensToValue(uint256,uint256,struct OracleManager.AggregatorPair memory)": "infinite",
								"_fetchPositionData(address,uint256)": "infinite",
								"_fetchVaultInfo(address)": "infinite",
								"_getPoolSqrtAndTick(address)": "infinite",
								"_getPriceFromConfig(struct OracleManager.OracleData memory)": "infinite",
								"_getRevertMsg(bytes memory)": "infinite",
								"_tryGetChainlinkPrice(address,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5596,
									"end": 16074,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 6584,
									"end": 6744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6636,
									"end": 6662,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6636,
									"end": 6662,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 8,
									"value": "1C"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 589,
									"end": 619,
									"name": "PUSH",
									"source": 8,
									"value": "4F7261636C654D616E616765723A20696E76616C6964206F776E657200000000"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 562,
									"end": 620,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 637,
									"end": 655,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 637,
									"end": 655,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 6628,
									"end": 6695,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6705,
									"end": 6737,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 6724,
									"end": 6736,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6705,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 6705,
									"end": 6737,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6705,
									"end": 6737,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 6705,
									"end": 6737,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6584,
									"end": 6744,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 309,
									"end": 661,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 309,
									"end": 661,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5596,
									"end": 16074,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203cf387091b36c8ce987cdee3fb289ea4d9e0d4e66f345e8a87ab8f4cec6f8de464736f6c634300081c0033",
									".code": [
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "9B05FC75"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "F2AC1EC5"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "67A4B06"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "41976E09"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "7F4A3102"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5596,
											"end": 16074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 6020,
											"end": 6071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 663,
											"end": 695,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 663,
											"end": 695,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 663,
											"end": 695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 645,
											"end": 696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 732,
											"end": 764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 730,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 705,
											"end": 765,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 808,
											"end": 822,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 808,
											"end": 822,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 801,
											"end": 823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 781,
											"end": 799,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 781,
											"end": 799,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 774,
											"end": 824,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 774,
											"end": 824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 774,
											"end": 824,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 774,
											"end": 824,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 872,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 860,
											"end": 877,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 860,
											"end": 877,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 855,
											"end": 857,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 840,
											"end": 858,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 840,
											"end": 858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 936,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 915,
											"end": 937,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 909,
											"end": 912,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 894,
											"end": 913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 894,
											"end": 913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 887,
											"end": 938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 632,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 617,
											"end": 636,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6020,
											"end": 6071,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 8412,
											"end": 8999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8412,
											"end": 8999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1119,
											"end": 1144,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1119,
											"end": 1144,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1119,
											"end": 1144,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1192,
											"end": 1196,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1180,
											"end": 1197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1180,
											"end": 1197,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1180,
											"end": 1197,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1160,
											"end": 1178,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1160,
											"end": 1178,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1153,
											"end": 1198,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1092,
											"end": 1110,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 949,
											"end": 1204,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 6077,
											"end": 6135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1472,
											"end": 1504,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1505,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1454,
											"end": 1505,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1573,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1573,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1573,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1514,
											"end": 1574,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1622,
											"end": 1626,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1610,
											"end": 1627,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1627,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1610,
											"end": 1627,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1590,
											"end": 1608,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1583,
											"end": 1628,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1664,
											"end": 1681,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1661,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1662,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1637,
											"end": 1682,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1740,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1719,
											"end": 1741,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1691,
											"end": 1742,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1444,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 1426,
											"end": 1445,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6077,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1209,
											"end": 1748,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1899,
											"end": 1950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1899,
											"end": 1950,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1753,
											"end": 1956,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7706,
											"end": 8406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7706,
											"end": 8406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6750,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 6750,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8468,
											"end": 8481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8546,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8533,
											"end": 8553,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8468,
											"end": 8481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8468,
											"end": 8481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8468,
											"end": 8481,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8468,
											"end": 8481,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8509,
											"end": 8553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8606,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8606,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 8571,
											"end": 8626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8610,
											"end": 8613,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8610,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8610,
											"end": 8626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8610,
											"end": 8626,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8626,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 8571,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4162,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4198,
											"end": 4200,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4178,
											"end": 4196,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4201,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4237,
											"end": 4271,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A206E6F2061676772656761746F722F766175"
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4217,
											"end": 4235,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4272,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C74206C6F676963"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4281,
											"end": 4319,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4355,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4336,
											"end": 4355,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 8563,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8687,
											"end": 8690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8687,
											"end": 8703,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8687,
											"end": 8703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8687,
											"end": 8703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8682,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 8682,
											"end": 8993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 8739,
											"end": 8763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8763,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 8739,
											"end": 8763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8719,
											"end": 8763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8719,
											"end": 8763,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8719,
											"end": 8763,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8682,
											"end": 8993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 8682,
											"end": 8993,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8682,
											"end": 8993,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 8682,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8837,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8827,
											"end": 8844,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4570,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4550,
											"end": 4571,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4607,
											"end": 4609,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 4587,
											"end": 4605,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4587,
											"end": 4605,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4587,
											"end": 4605,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4580,
											"end": 4610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4646,
											"end": 4680,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A207661756C74206665656473206E6F742073"
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4626,
											"end": 4644,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4619,
											"end": 4681,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4697,
											"end": 4715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4739,
											"end": 4758,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 4739,
											"end": 4758,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4366,
											"end": 4764,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 8858,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 8972,
											"end": 8977,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8979,
											"end": 8981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 8948,
											"end": 8982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8948,
											"end": 8982,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 8948,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8928,
											"end": 8982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8928,
											"end": 8982,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8928,
											"end": 8982,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8682,
											"end": 8993,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 8682,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8499,
											"end": 8999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7914,
											"end": 7938,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7914,
											"end": 7938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7906,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7906,
											"end": 7976,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7906,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7906,
											"end": 7976,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7906,
											"end": 7976,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7906,
											"end": 7976,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7906,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7906,
											"end": 7976,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7906,
											"end": 7976,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4953,
											"end": 4974,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5012,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4983,
											"end": 5013,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5049,
											"end": 5083,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A20696E76616C6964207661756C74546F6B65"
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5029,
											"end": 5047,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5084,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5118,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5100,
											"end": 5118,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5100,
											"end": 5118,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5093,
											"end": 5124,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5141,
											"end": 5160,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 5141,
											"end": 5160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4769,
											"end": 5166,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 7976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7906,
											"end": 7976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8215,
											"end": 8219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8012,
											"end": 8230,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 7997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8009,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8230,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2FB5936F285B062770BA9AA206CA7282EBB8F84AD2EDA1C664B3059E9C62C1BA"
										},
										{
											"begin": 8246,
											"end": 8399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8246,
											"end": 8399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8065,
											"end": 8074,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8065,
											"end": 8074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8115,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8145,
											"end": 8154,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8145,
											"end": 8154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8184,
											"end": 8193,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5412,
											"end": 5444,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 5445,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5394,
											"end": 5445,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5513,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5513,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5513,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5513,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5476,
											"end": 5478,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5461,
											"end": 5479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5454,
											"end": 5514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5562,
											"end": 5566,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5550,
											"end": 5567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5550,
											"end": 5567,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5550,
											"end": 5567,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5545,
											"end": 5547,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5523,
											"end": 5568,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5604,
											"end": 5621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5604,
											"end": 5621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5604,
											"end": 5621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5604,
											"end": 5621,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5599,
											"end": 5601,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5584,
											"end": 5602,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5584,
											"end": 5602,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5577,
											"end": 5622,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5381,
											"end": 5384,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 5366,
											"end": 5385,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5366,
											"end": 5385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5171,
											"end": 5628,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8246,
											"end": 8399,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7706,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6997,
											"end": 7016,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6997,
											"end": 7016,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 7049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 6989,
											"end": 7049,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 7049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5835,
											"end": 5837,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6989,
											"end": 7049,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6989,
											"end": 7049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6989,
											"end": 7049,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5838,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5876,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5854,
											"end": 5872,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5847,
											"end": 5877,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5913,
											"end": 5943,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A20696E76616C696420746F6B656E00000000"
										},
										{
											"begin": 5893,
											"end": 5911,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5893,
											"end": 5911,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5893,
											"end": 5911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5961,
											"end": 5979,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5961,
											"end": 5979,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5633,
											"end": 5985,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6989,
											"end": 7049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 6989,
											"end": 7049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7076,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7059,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7059,
											"end": 7195,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7100,
											"end": 7131,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7131,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7092,
											"end": 7184,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7092,
											"end": 7184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7092,
											"end": 7184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7184,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6192,
											"end": 6194,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7092,
											"end": 7184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7092,
											"end": 7184,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7184,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6195,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6233,
											"name": "PUSH",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6270,
											"end": 6304,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A2061676772656761746F7220726571756972"
										},
										{
											"begin": 6250,
											"end": 6268,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6250,
											"end": 6268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6305,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195908199BDC881B9BDB8B5D985D5B1D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6321,
											"end": 6339,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6321,
											"end": 6339,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6321,
											"end": 6339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6314,
											"end": 6360,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6377,
											"end": 6396,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5990,
											"end": 6402,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7092,
											"end": 7184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7485,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7225,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7485,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5BE58A9EEF853F8AE7393174434D0BE93DAAD7445510F6CE6E914B2F297885B8"
										},
										{
											"begin": 7501,
											"end": 7693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7501,
											"end": 7693,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7289,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7323,
											"end": 7341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7391,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7375,
											"end": 7391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7423,
											"end": 7434,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7423,
											"end": 7434,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7474,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 663,
											"end": 695,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 663,
											"end": 695,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 663,
											"end": 695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 645,
											"end": 696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 645,
											"end": 696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 732,
											"end": 764,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 732,
											"end": 764,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 727,
											"end": 729,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 712,
											"end": 730,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 712,
											"end": 730,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 705,
											"end": 765,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 808,
											"end": 822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 822,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 801,
											"end": 823,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 799,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 781,
											"end": 799,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 774,
											"end": 824,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 872,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 860,
											"end": 877,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 855,
											"end": 857,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 840,
											"end": 858,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 840,
											"end": 858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 833,
											"end": 878,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 922,
											"end": 936,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 922,
											"end": 936,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 915,
											"end": 937,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 909,
											"end": 912,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 894,
											"end": 913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 894,
											"end": 913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 887,
											"end": 938,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 632,
											"end": 635,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 617,
											"end": 636,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 617,
											"end": 636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 402,
											"end": 944,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7501,
											"end": 7693,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6750,
											"end": 7700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6611,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6591,
											"end": 6612,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6648,
											"end": 6650,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6646,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6621,
											"end": 6651,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6687,
											"end": 6721,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6667,
											"end": 6685,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6738,
											"end": 6756,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6731,
											"end": 6767,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6784,
											"end": 6803,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 6784,
											"end": 6803,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 6407,
											"end": 6809,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9176,
											"end": 9899,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 9176,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9275,
											"end": 9288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9290,
											"end": 9304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9335,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9348,
											"end": 9355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9359,
											"end": 9425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9381,
											"end": 9384,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9381,
											"end": 9402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9381,
											"end": 9402,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9381,
											"end": 9402,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9407,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9424,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9404,
											"end": 9424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9424,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9359,
											"end": 9380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9359,
											"end": 9425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9359,
											"end": 9425,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9359,
											"end": 9425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9425,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9425,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9425,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9320,
											"end": 9425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9449,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9475,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9475,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9475,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 9439,
											"end": 9475,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9475,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9453,
											"end": 9456,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9453,
											"end": 9475,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9453,
											"end": 9475,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9453,
											"end": 9475,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9475,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 9439,
											"end": 9475,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9439,
											"end": 9515,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9479,
											"end": 9501,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9479,
											"end": 9501,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9479,
											"end": 9501,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9479,
											"end": 9501,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9479,
											"end": 9515,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9479,
											"end": 9515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9479,
											"end": 9515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9439,
											"end": 9515,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 9439,
											"end": 9515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9800,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 9435,
											"end": 9800,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9532,
											"end": 9547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9583,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9603,
											"end": 9670,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 9625,
											"end": 9628,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9625,
											"end": 9647,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9625,
											"end": 9647,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9625,
											"end": 9647,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9652,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9669,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9649,
											"end": 9669,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9669,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9603,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9603,
											"end": 9670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9603,
											"end": 9670,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 9603,
											"end": 9670,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9670,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9670,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9670,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9670,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9692,
											"end": 9702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7016,
											"end": 7018,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6998,
											"end": 7019,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7057,
											"name": "PUSH",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7028,
											"end": 7058,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7094,
											"end": 7128,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A2066616C6C6261636B206167677265676174"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7067,
											"end": 7129,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDC8819985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7138,
											"end": 7175,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7211,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7192,
											"end": 7211,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6814,
											"end": 7217,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 9684,
											"end": 9746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9768,
											"end": 9777,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9768,
											"end": 9777,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 9779,
											"end": 9788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9779,
											"end": 9788,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9176,
											"end": 9899,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9176,
											"end": 9899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9800,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 9435,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9817,
											"end": 9826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7424,
											"end": 7426,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7463,
											"end": 7465,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 7443,
											"end": 7461,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7443,
											"end": 7461,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7443,
											"end": 7461,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7436,
											"end": 7466,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A207072696D6172792061676772656761746F"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7475,
											"end": 7537,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8819985A5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7546,
											"end": 7582,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 7222,
											"end": 7624,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 9809,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 9890,
											"end": 9891,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9890,
											"end": 9891,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9176,
											"end": 9899,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9176,
											"end": 9899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10230,
											"end": 11342,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 10230,
											"end": 11342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10362,
											"end": 10375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10377,
											"end": 10391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10408,
											"end": 10427,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10429,
											"end": 10444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10446,
											"end": 10460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10464,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 10480,
											"end": 10490,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10464,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 10464,
											"end": 10491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10464,
											"end": 10491,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 10464,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10407,
											"end": 10491,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10407,
											"end": 10491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10407,
											"end": 10491,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10407,
											"end": 10491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10407,
											"end": 10491,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10407,
											"end": 10491,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10502,
											"end": 10527,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10530,
											"end": 10565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 10549,
											"end": 10555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10564,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10530,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10530,
											"end": 10565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10530,
											"end": 10565,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 10530,
											"end": 10565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10502,
											"end": 10565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10502,
											"end": 10565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10577,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10599,
											"end": 10609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10613,
											"end": 10666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 10645,
											"end": 10655,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10633,
											"end": 10663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10663,
											"name": "PUSH",
											"source": 2,
											"value": "3A924D5B"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 10633,
											"end": 10665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10633,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 10613,
											"end": 10666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10666,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 10613,
											"end": 10666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10666,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10677,
											"end": 10695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10697,
											"end": 10715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10719,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 10757,
											"end": 10769,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10783,
											"end": 10786,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10783,
											"end": 10796,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10783,
											"end": 10796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10783,
											"end": 10796,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10810,
											"end": 10813,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10810,
											"end": 10823,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 10810,
											"end": 10823,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10810,
											"end": 10823,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10840,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10850,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10837,
											"end": 10850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10837,
											"end": 10850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10719,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 10719,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10719,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 10719,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10676,
											"end": 10860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10676,
											"end": 10860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10676,
											"end": 10860,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10676,
											"end": 10860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10871,
											"end": 10883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10899,
											"end": 10902,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10899,
											"end": 10908,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 10899,
											"end": 10908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10899,
											"end": 10908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 10896,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10886,
											"end": 10908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 10886,
											"end": 10908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10871,
											"end": 10908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10871,
											"end": 10908,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10918,
											"end": 10930,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10946,
											"end": 10949,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10946,
											"end": 10955,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 10946,
											"end": 10955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10946,
											"end": 10955,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 10933,
											"end": 10955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10918,
											"end": 10955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10918,
											"end": 10955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10966,
											"end": 10990,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11028,
											"end": 11030,
											"name": "DUP16",
											"source": 2
										},
										{
											"begin": 11028,
											"end": 11047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11028,
											"end": 11047,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11069,
											"name": "DUP16",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11086,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11067,
											"end": 11086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11086,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11106,
											"end": 11108,
											"name": "DUP16",
											"source": 2
										},
										{
											"begin": 11106,
											"end": 11123,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11106,
											"end": 11123,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11106,
											"end": 11123,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11143,
											"end": 11145,
											"name": "DUP16",
											"source": 2
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10993,
											"end": 11171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10966,
											"end": 11171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10966,
											"end": 11171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11182,
											"end": 11200,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11203,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 11230,
											"end": 11234,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11236,
											"end": 11240,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11242,
											"end": 11244,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11203,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11203,
											"end": 11245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11203,
											"end": 11245,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 11203,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11182,
											"end": 11245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11278,
											"end": 11294,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 11278,
											"end": 11294,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11278,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 11278,
											"end": 11312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11301,
											"end": 11312,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 11278,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 11278,
											"end": 11312,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11278,
											"end": 11312,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 11278,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11298,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11278,
											"end": 11312,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 11278,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 11264,
											"end": 11313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 11264,
											"end": 11313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11264,
											"end": 11313,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 11264,
											"end": 11313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11313,
											"name": "SWAP14",
											"source": 2
										},
										{
											"begin": 11256,
											"end": 11313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "SWAP13",
											"source": 2
										},
										{
											"begin": 11323,
											"end": 11335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10397,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10230,
											"end": 11342,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10230,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10230,
											"end": 11342,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10230,
											"end": 11342,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10230,
											"end": 11342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10230,
											"end": 11342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8703,
											"end": 8705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8685,
											"end": 8706,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8685,
											"end": 8706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8685,
											"end": 8706,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8722,
											"end": 8740,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8715,
											"end": 8745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8781,
											"end": 8815,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8761,
											"end": 8779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8754,
											"end": 8816,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 8833,
											"end": 8851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 8501,
											"end": 8857,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14570,
											"end": 15760,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 14570,
											"end": 15760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14687,
											"end": 14699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14687,
											"end": 14699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14687,
											"end": 14699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14750,
											"end": 14774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14750,
											"end": 14774,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14746,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 14746,
											"end": 14821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14798,
											"end": 14803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14798,
											"end": 14803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14798,
											"end": 14803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14798,
											"end": 14803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14798,
											"end": 14803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14790,
											"end": 14810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 14790,
											"end": 14810,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14746,
											"end": 14821,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 14746,
											"end": 14821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3FABE5A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 14850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14830,
											"end": 14850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 14850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14830,
											"end": 14850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14979,
											"end": 15000,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14853,
											"end": 14923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 14979,
											"end": 15009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14979,
											"end": 15009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14933,
											"end": 15009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14933,
											"end": 15009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14933,
											"end": 15009,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14933,
											"end": 15009,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15024,
											"end": 15035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15023,
											"end": 15035,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15023,
											"end": 15062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15023,
											"end": 15062,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 15023,
											"end": 15062,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15023,
											"end": 15062,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15059,
											"end": 15062,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 15039,
											"end": 15049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15039,
											"end": 15056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15039,
											"end": 15062,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15023,
											"end": 15062,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 15023,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15019,
											"end": 15109,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15019,
											"end": 15109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 15019,
											"end": 15109,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15086,
											"end": 15091,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15096,
											"end": 15097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 15078,
											"end": 15098,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15019,
											"end": 15109,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 15019,
											"end": 15109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15122,
											"end": 15135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15156,
											"end": 15166,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 15145,
											"end": 15211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 15145,
											"end": 15211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15118,
											"end": 15211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15118,
											"end": 15211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15118,
											"end": 15211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15118,
											"end": 15211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15118,
											"end": 15211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15118,
											"end": 15211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15235,
											"end": 15236,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15225,
											"end": 15231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15225,
											"end": 15236,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 15221,
											"end": 15283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 15221,
											"end": 15283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15260,
											"end": 15265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15267,
											"end": 15268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15270,
											"end": 15271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 15252,
											"end": 15272,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15221,
											"end": 15283,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 15221,
											"end": 15283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15313,
											"end": 15324,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15338,
											"end": 15354,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 15338,
											"end": 15354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15338,
											"end": 15354,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15293,
											"end": 15310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15338,
											"end": 15354,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15334,
											"end": 15701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 15334,
											"end": 15701,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "313CE567"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15451,
											"end": 15514,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15371,
											"end": 15386,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15371,
											"end": 15386,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15371,
											"end": 15386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15371,
											"end": 15386,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15412,
											"end": 15433,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15433,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15433,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 15412,
											"end": 15528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15412,
											"end": 15528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15370,
											"end": 15528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15370,
											"end": 15528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15370,
											"end": 15528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15370,
											"end": 15528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15547,
											"end": 15557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15557,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 15546,
											"end": 15580,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15580,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15578,
											"end": 15580,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15561,
											"end": 15568,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15561,
											"end": 15575,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15561,
											"end": 15580,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15546,
											"end": 15580,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 15546,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15608,
											"end": 15613,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15615,
											"end": 15616,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15618,
											"end": 15619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 15600,
											"end": 15620,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15673,
											"end": 15680,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 15662,
											"end": 15690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 15662,
											"end": 15690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15648,
											"end": 15690,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15648,
											"end": 15690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15356,
											"end": 15701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15356,
											"end": 15701,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15334,
											"end": 15701,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 15334,
											"end": 15701,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15718,
											"end": 15722,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15718,
											"end": 15722,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15732,
											"end": 15738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15732,
											"end": 15738,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15741,
											"end": 15752,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14570,
											"end": 15760,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 14570,
											"end": 15760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14570,
											"end": 15760,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14570,
											"end": 15760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14570,
											"end": 15760,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14570,
											"end": 15760,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14570,
											"end": 15760,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14570,
											"end": 15760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11348,
											"end": 11881,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 11348,
											"end": 11881,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11440,
											"end": 11459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11461,
											"end": 11476,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11478,
											"end": 11492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11508,
											"end": 11521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11536,
											"end": 11546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11508,
											"end": 11547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11571,
											"end": 11584,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11584,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 11571,
											"end": 11586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 11571,
											"end": 11586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11586,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11586,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11618,
											"end": 11619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11604,
											"end": 11615,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11604,
											"end": 11619,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10858,
											"end": 10860,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10861,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10897,
											"end": 10899,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10877,
											"end": 10895,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10870,
											"end": 10900,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10970,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A207661756C7420746F74616C537570706C79"
										},
										{
											"begin": 10916,
											"end": 10934,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 10916,
											"end": 10934,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10916,
											"end": 10934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10909,
											"end": 10971,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 11005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10980,
											"end": 11012,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11029,
											"end": 11048,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11029,
											"end": 11048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 10656,
											"end": 11054,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 11596,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11678,
											"end": 11692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11692,
											"name": "PUSH",
											"source": 2,
											"value": "F657A7FE"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 11678,
											"end": 11694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 11678,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11668,
											"end": 11694,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11668,
											"end": 11694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11712,
											"end": 11719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11723,
											"end": 11724,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11712,
											"end": 11724,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11261,
											"end": 11263,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11264,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11300,
											"end": 11302,
											"name": "PUSH",
											"source": 8,
											"value": "1E"
										},
										{
											"begin": 11280,
											"end": 11298,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11280,
											"end": 11298,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11280,
											"end": 11298,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11273,
											"end": 11303,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11339,
											"end": 11371,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A206E6F204E465420696E207661756C740000"
										},
										{
											"begin": 11319,
											"end": 11337,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11319,
											"end": 11337,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11319,
											"end": 11337,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11312,
											"end": 11372,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11389,
											"end": 11407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 11059,
											"end": 11413,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 11704,
											"end": 11759,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11778,
											"end": 11795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11795,
											"name": "PUSH",
											"source": 2,
											"value": "791B98BC"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 11778,
											"end": 11797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11769,
											"end": 11797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11815,
											"end": 11835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11815,
											"end": 11835,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11620,
											"end": 11622,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11602,
											"end": 11623,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11659,
											"end": 11661,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11639,
											"end": 11657,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11632,
											"end": 11662,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11698,
											"end": 11732,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A20696E76616C696420706F736974696F6E4D"
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11678,
											"end": 11696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11671,
											"end": 11733,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "33B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11749,
											"end": 11767,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11742,
											"end": 11774,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11791,
											"end": 11810,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 11791,
											"end": 11810,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 11418,
											"end": 11816,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11807,
											"end": 11874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11498,
											"end": 11881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11348,
											"end": 11881,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11348,
											"end": 11881,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11348,
											"end": 11881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11348,
											"end": 11881,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11348,
											"end": 11881,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11348,
											"end": 11881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12669,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 11887,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 12037,
											"end": 12049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12051,
											"end": 12068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12072,
											"end": 12089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12126,
											"end": 12172,
											"name": "PUSH",
											"source": 2,
											"value": "99FBAB88"
										},
										{
											"begin": 12126,
											"end": 12172,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 12126,
											"end": 12172,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12181,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11967,
											"end": 11992,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11967,
											"end": 11992,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11955,
											"end": 11957,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11940,
											"end": 11958,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11940,
											"end": 11958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11821,
											"end": 11998,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12103,
											"end": 12182,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 12072,
											"end": 12192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12072,
											"end": 12192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12192,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12192,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12036,
											"end": 12192,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12210,
											"end": 12217,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 12233,
											"end": 12237,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 12219,
											"end": 12238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12238,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 12219,
											"end": 12238,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 12202,
											"end": 12239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12202,
											"end": 12239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12532,
											"end": 12536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 12508,
											"end": 12662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 12508,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP9",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12292,
											"end": 12295,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 12292,
											"end": 12302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12292,
											"end": 12302,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12316,
											"end": 12319,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 12316,
											"end": 12326,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12316,
											"end": 12326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12354,
											"end": 12357,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 12354,
											"end": 12367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12354,
											"end": 12367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12381,
											"end": 12384,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 12381,
											"end": 12394,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12381,
											"end": 12394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12411,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 12408,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 12408,
											"end": 12421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12463,
											"end": 12466,
											"name": "DUP15",
											"source": 2
										},
										{
											"begin": 12463,
											"end": 12472,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 12463,
											"end": 12472,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12486,
											"end": 12489,
											"name": "DUP16",
											"source": 2
										},
										{
											"begin": 12486,
											"end": 12495,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 12486,
											"end": 12495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12250,
											"end": 12662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12026,
											"end": 12669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12026,
											"end": 12669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12669,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12669,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 12669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12675,
											"end": 13161,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 12675,
											"end": 13161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12745,
											"end": 12765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12765,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12797,
											"end": 12819,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12797,
											"end": 12819,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14636,
											"end": 14638,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14618,
											"end": 14639,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14675,
											"end": 14677,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 14655,
											"end": 14673,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 14655,
											"end": 14673,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14655,
											"end": 14673,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14648,
											"end": 14678,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14714,
											"end": 14743,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A20696E76616C696420706F6F6C0000000000"
										},
										{
											"begin": 14694,
											"end": 14712,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 14694,
											"end": 14712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14694,
											"end": 14712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14687,
											"end": 14744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 14761,
											"end": 14779,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 14434,
											"end": 14785,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 12789,
											"end": 12851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3850C7BD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12930,
											"end": 12983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12862,
											"end": 12874,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12862,
											"end": 12874,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12862,
											"end": 12874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12897,
											"end": 12916,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12916,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12916,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 12897,
											"end": 12993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12897,
											"end": 12993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12861,
											"end": 12993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12861,
											"end": 12993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12861,
											"end": 12993,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12861,
											"end": 12993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13011,
											"end": 13018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13020,
											"end": 13039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13034,
											"end": 13038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13020,
											"end": 13033,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 13020,
											"end": 13039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13020,
											"end": 13039,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 13020,
											"end": 13039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 13003,
											"end": 13040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13003,
											"end": 13040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13094,
											"end": 13098,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 13083,
											"end": 13154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 13083,
											"end": 13154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13050,
											"end": 13154,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13154,
											"name": "SWAP11",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13154,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13050,
											"end": 13154,
											"name": "SWAP10",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12675,
											"end": 13161,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12675,
											"end": 13161,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12675,
											"end": 13161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13337,
											"end": 13349,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13351,
											"end": 13363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13379,
											"end": 13388,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13379,
											"end": 13393,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13392,
											"end": 13393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13379,
											"end": 13393,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 13375,
											"end": 13433,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13417,
											"end": 13418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13417,
											"end": 13418,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13417,
											"end": 13418,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13409,
											"end": 13422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 13409,
											"end": 13422,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13433,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 13375,
											"end": 13433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13442,
											"end": 13459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13462,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 13495,
											"end": 13504,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13462,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 13462,
											"end": 13505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13462,
											"end": 13505,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 13462,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13442,
											"end": 13505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13442,
											"end": 13505,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13532,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13535,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 13568,
											"end": 13577,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 13535,
											"end": 13578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13578,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 13535,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13515,
											"end": 13578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13604,
											"end": 13748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 13657,
											"end": 13669,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13683,
											"end": 13692,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13706,
											"end": 13715,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13729,
											"end": 13738,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13604,
											"end": 13643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 13604,
											"end": 13748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13604,
											"end": 13748,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 13604,
											"end": 13748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13589,
											"end": 13748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13589,
											"end": 13748,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13589,
											"end": 13748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13755,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13167,
											"end": 13755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14096,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 13761,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13904,
											"end": 13911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13923,
											"end": 13935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13938,
											"end": 13987,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 13964,
											"end": 13968,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13970,
											"end": 13972,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13970,
											"end": 13977,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13970,
											"end": 13977,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13970,
											"end": 13977,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13979,
											"end": 13981,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13979,
											"end": 13986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13979,
											"end": 13986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13979,
											"end": 13986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13938,
											"end": 13963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 13938,
											"end": 13987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13938,
											"end": 13987,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 13938,
											"end": 13987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13923,
											"end": 13987,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13923,
											"end": 13987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13997,
											"end": 14009,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14012,
											"end": 14061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 14038,
											"end": 14042,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14044,
											"end": 14046,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14044,
											"end": 14051,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14044,
											"end": 14051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14044,
											"end": 14051,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14053,
											"end": 14055,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14053,
											"end": 14060,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14053,
											"end": 14060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14053,
											"end": 14060,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14012,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 14012,
											"end": 14061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14012,
											"end": 14061,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 14012,
											"end": 14061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13997,
											"end": 14061,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14078,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 13997,
											"end": 14061,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14078,
											"end": 14082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14078,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 14078,
											"end": 14089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14078,
											"end": 14089,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 14078,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14096,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 13761,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14096,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15766,
											"end": 16072,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 15766,
											"end": 16072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15837,
											"end": 15850,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15887,
											"end": 15889,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 15866,
											"end": 15877,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15866,
											"end": 15884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15866,
											"end": 15889,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 15862,
											"end": 15936,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15862,
											"end": 15936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 15862,
											"end": 15936,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "PUSH data",
											"source": 2,
											"value": "3E1E6533146503DDCD57727C5002D69321677D0539DF318AD90F03963B3C334F"
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 15891,
											"end": 15936,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15766,
											"end": 16072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15766,
											"end": 16072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15862,
											"end": 15936,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 15862,
											"end": 15936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16001,
											"end": 16005,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15988,
											"end": 15999,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15984,
											"end": 16006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15969,
											"end": 16006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15969,
											"end": 16006,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16043,
											"end": 16054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 16032,
											"end": 16065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 16032,
											"end": 16065,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16025,
											"end": 16065,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15766,
											"end": 16072,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15766,
											"end": 16072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 4073,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1548,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D89E7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1651,
											"end": 1667,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1651,
											"end": 1667,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1667,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1667,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1651,
											"end": 1687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1535,
											"end": 1541,
											"name": "PUSH",
											"source": 2,
											"value": "D89E8"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1687,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1651,
											"end": 1687,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1651,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17061,
											"end": 17063,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17043,
											"end": 17064,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17100,
											"end": 17102,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 17080,
											"end": 17098,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17080,
											"end": 17098,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17080,
											"end": 17098,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17073,
											"end": 17103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5469636B206F7574206F662072616E6765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17119,
											"end": 17137,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 17119,
											"end": 17137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17119,
											"end": 17137,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17112,
											"end": 17159,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17176,
											"end": 17194,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 17176,
											"end": 17194,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 16859,
											"end": 17200,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1643,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1739,
											"end": 1747,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 1739,
											"end": 1747,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1738,
											"end": 1839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1832,
											"end": 1836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1810,
											"end": 1839,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 1810,
											"end": 1839,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1738,
											"end": 1839,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1839,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1738,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1787,
											"end": 1791,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1786,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1786,
											"end": 1791,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1786,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1794,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 1764,
											"end": 1794,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1839,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1738,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1928,
											"end": 1941,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1941,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1950,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 1924,
											"end": 2011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2011,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1961,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 1961,
											"end": 1966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1969,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1961,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 1961,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 2003,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 1961,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 2011,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 2011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 2011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1924,
											"end": 2011,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 1924,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2038,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2025,
											"end": 2038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2038,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2047,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2021,
											"end": 2108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2058,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2100,
											"name": "PUSH",
											"source": 2,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 2058,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2058,
											"end": 2100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2100,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2058,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2057,
											"end": 2108,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2049,
											"end": 2108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2108,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 2021,
											"end": 2108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2122,
											"end": 2135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2144,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2118,
											"end": 2205,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2202,
											"end": 2205,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2155,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2163,
											"end": 2197,
											"name": "PUSH",
											"source": 2,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 2155,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2155,
											"end": 2197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2155,
											"end": 2197,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2155,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2205,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2205,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2205,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2205,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2118,
											"end": 2205,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2118,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2229,
											"end": 2232,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2219,
											"end": 2232,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2232,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2219,
											"end": 2241,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2215,
											"end": 2302,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2299,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2252,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2252,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2260,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 2252,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2252,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2294,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2252,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2251,
											"end": 2302,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2243,
											"end": 2302,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2215,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2215,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2330,
											"name": "PUSH",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2316,
											"end": 2330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2312,
											"end": 2399,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2396,
											"end": 2399,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2349,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2391,
											"name": "PUSH",
											"source": 2,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2349,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2349,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2349,
											"end": 2391,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 2349,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2399,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2340,
											"end": 2399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2312,
											"end": 2399,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2312,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2423,
											"end": 2427,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2427,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2427,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2413,
											"end": 2435,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2409,
											"end": 2496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2496,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2446,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 2446,
											"end": 2451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2454,
											"end": 2488,
											"name": "PUSH",
											"source": 2,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2446,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2446,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2446,
											"end": 2488,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 2446,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2445,
											"end": 2496,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2437,
											"end": 2496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2437,
											"end": 2496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2496,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 2409,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2520,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2510,
											"end": 2532,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 2506,
											"end": 2593,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2590,
											"end": 2593,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2543,
											"end": 2548,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2543,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2543,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2543,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2593,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2593,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 2506,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2621,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2607,
											"end": 2621,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2621,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2607,
											"end": 2629,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2603,
											"end": 2690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2687,
											"end": 2690,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2648,
											"end": 2682,
											"name": "PUSH",
											"source": 2,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2640,
											"end": 2682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2640,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2639,
											"end": 2690,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2690,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2631,
											"end": 2690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2690,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 2603,
											"end": 2690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2719,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2726,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2700,
											"end": 2787,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2784,
											"end": 2787,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2737,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2745,
											"end": 2779,
											"name": "PUSH",
											"source": 2,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2737,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2737,
											"end": 2779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2779,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 2737,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 2787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 2787,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2787,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 2700,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2816,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2823,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2797,
											"end": 2884,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2884,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2834,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2834,
											"end": 2839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2842,
											"end": 2876,
											"name": "PUSH",
											"source": 2,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2834,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2834,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2834,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2833,
											"end": 2884,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2884,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2797,
											"end": 2884,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2913,
											"name": "PUSH",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 2898,
											"end": 2913,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2920,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2894,
											"end": 2981,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2978,
											"end": 2981,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2931,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 2931,
											"end": 2936,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2939,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2931,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2931,
											"end": 2973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 2973,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 2931,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2981,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2894,
											"end": 2981,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2894,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3005,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "800"
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3010,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3017,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2991,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2991,
											"end": 3078,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3078,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3028,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3036,
											"end": 3070,
											"name": "PUSH",
											"source": 2,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 3028,
											"end": 3070,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3028,
											"end": 3070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3028,
											"end": 3070,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 3028,
											"end": 3070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3078,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3019,
											"end": 3078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2991,
											"end": 3078,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2991,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3102,
											"end": 3108,
											"name": "PUSH",
											"source": 2,
											"value": "1000"
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3114,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 3088,
											"end": 3175,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3172,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3125,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 3125,
											"end": 3130,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3133,
											"end": 3167,
											"name": "PUSH",
											"source": 2,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 3125,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3125,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3125,
											"end": 3167,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 3125,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3124,
											"end": 3175,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 3088,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "PUSH",
											"source": 2,
											"value": "2000"
										},
										{
											"begin": 3189,
											"end": 3205,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3189,
											"end": 3205,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3189,
											"end": 3211,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 3185,
											"end": 3272,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3272,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3222,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 3222,
											"end": 3227,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3230,
											"end": 3264,
											"name": "PUSH",
											"source": 2,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 3222,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3222,
											"end": 3264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3264,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 3222,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3221,
											"end": 3272,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3213,
											"end": 3272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3185,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 3185,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3302,
											"name": "PUSH",
											"source": 2,
											"value": "4000"
										},
										{
											"begin": 3286,
											"end": 3302,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3302,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3286,
											"end": 3308,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 3282,
											"end": 3369,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3319,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3319,
											"end": 3324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "70D869A156D2A1F6A7A2E3FADACB4C9B"
										},
										{
											"begin": 3319,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3319,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 3319,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3318,
											"end": 3369,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3369,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 3282,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3393,
											"end": 3399,
											"name": "PUSH",
											"source": 2,
											"value": "8000"
										},
										{
											"begin": 3383,
											"end": 3399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3405,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3379,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 3379,
											"end": 3466,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3466,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3416,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 3416,
											"end": 3421,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3424,
											"end": 3458,
											"name": "PUSH",
											"source": 2,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3416,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3416,
											"end": 3458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3458,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 3416,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3415,
											"end": 3466,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3379,
											"end": 3466,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 3379,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3490,
											"end": 3497,
											"name": "PUSH",
											"source": 2,
											"value": "10000"
										},
										{
											"begin": 3480,
											"end": 3497,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3497,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3502,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 3476,
											"end": 3562,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3559,
											"end": 3562,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3513,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 3513,
											"end": 3518,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "PUSH",
											"source": 2,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3513,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3513,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3513,
											"end": 3554,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 3513,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3562,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3476,
											"end": 3562,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 3476,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "PUSH",
											"source": 2,
											"value": "20000"
										},
										{
											"begin": 3576,
											"end": 3593,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3593,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3598,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 3572,
											"end": 3657,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3654,
											"end": 3657,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3609,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 3609,
											"end": 3614,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3617,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3609,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3609,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3609,
											"end": 3649,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 3609,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3657,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3600,
											"end": 3657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3600,
											"end": 3657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3572,
											"end": 3657,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 3572,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3688,
											"name": "PUSH",
											"source": 2,
											"value": "40000"
										},
										{
											"begin": 3671,
											"end": 3688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3671,
											"end": 3693,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 3667,
											"end": 3750,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3704,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 3704,
											"end": 3709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3712,
											"end": 3742,
											"name": "PUSH",
											"source": 2,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3704,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3704,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3742,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 3704,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3750,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3750,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 3667,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "80000"
										},
										{
											"begin": 3764,
											"end": 3781,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3764,
											"end": 3786,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 3760,
											"end": 3838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3835,
											"end": 3838,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3797,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 3797,
											"end": 3802,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3805,
											"end": 3830,
											"name": "PUSH",
											"source": 2,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3797,
											"end": 3830,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3797,
											"end": 3830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3797,
											"end": 3830,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 3797,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3838,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3788,
											"end": 3838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3760,
											"end": 3838,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 3760,
											"end": 3838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3857,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3861,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3853,
											"end": 3861,
											"name": "SIGNEXTEND",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3861,
											"name": "SGT",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3921,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 3849,
											"end": 3921,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 3905,
											"end": 3910,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3885,
											"end": 3910,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3885,
											"end": 3910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3885,
											"end": 3910,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 3885,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3910,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3921,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 3849,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3958,
											"end": 3960,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3949,
											"end": 3960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3949,
											"end": 3960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3949,
											"end": 3960,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17769,
											"end": 17771,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17751,
											"end": 17772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17808,
											"end": 17810,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 17788,
											"end": 17806,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17788,
											"end": 17806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17788,
											"end": 17806,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17781,
											"end": 17811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5072696365206F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17827,
											"end": 17845,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 17827,
											"end": 17845,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17827,
											"end": 17845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17881,
											"end": 17899,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 17881,
											"end": 17899,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 17567,
											"end": 17905,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 3970,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4058,
											"end": 4065,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 4073,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 4073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6401,
											"end": 6430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6414,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6401,
											"end": 6430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6401,
											"end": 6430,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6466,
											"end": 6479,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6466,
											"end": 6479,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6481,
											"end": 6494,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6397,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6539,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6510,
											"end": 6539,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6522,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6510,
											"end": 6539,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6510,
											"end": 6539,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6588,
											"end": 6601,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6616,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6627,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6565,
											"end": 6628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6565,
											"end": 6628,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6565,
											"end": 6628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6628,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6555,
											"end": 6628,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6506,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6677,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6677,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6661,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6677,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6677,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6726,
											"end": 6738,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6740,
											"end": 6753,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6755,
											"end": 6764,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6703,
											"end": 6765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6703,
											"end": 6765,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6703,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6765,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 6812,
											"end": 6825,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6827,
											"end": 6839,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6850,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6789,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6851,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 6789,
											"end": 6851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6779,
											"end": 6851,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6779,
											"end": 6851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6645,
											"end": 6966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6915,
											"end": 6928,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6930,
											"end": 6943,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6945,
											"end": 6954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6892,
											"end": 6955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6892,
											"end": 6955,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6892,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 6955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 6955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14102,
											"end": 14564,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 14102,
											"end": 14564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14246,
											"end": 14253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14269,
											"end": 14277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14269,
											"end": 14277,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14269,
											"end": 14277,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14269,
											"end": 14309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 14269,
											"end": 14309,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14281,
											"end": 14309,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14281,
											"end": 14309,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14281,
											"end": 14309,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14269,
											"end": 14309,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 14269,
											"end": 14309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14265,
											"end": 14344,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14265,
											"end": 14344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 14265,
											"end": 14344,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14332,
											"end": 14333,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14325,
											"end": 14333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 14325,
											"end": 14333,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14265,
											"end": 14344,
											"name": "tag",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 14265,
											"end": 14344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14354,
											"end": 14361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14363,
											"end": 14372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14374,
											"end": 14381,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 14407,
											"end": 14421,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14423,
											"end": 14434,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14385,
											"end": 14406,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 14385,
											"end": 14435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14385,
											"end": 14435,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 14385,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14353,
											"end": 14435,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14353,
											"end": 14435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14353,
											"end": 14435,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14353,
											"end": 14435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14353,
											"end": 14435,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14353,
											"end": 14435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14453,
											"end": 14455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18112,
											"end": 18114,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18094,
											"end": 18115,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18151,
											"end": 18153,
											"name": "PUSH",
											"source": 8,
											"value": "3B"
										},
										{
											"begin": 18131,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 18131,
											"end": 18149,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18131,
											"end": 18149,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18124,
											"end": 18154,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18190,
											"end": 18224,
											"name": "PUSH",
											"source": 8,
											"value": "4F7261636C654D616E616765723A2061676772656761746F72206661696C2069"
										},
										{
											"begin": 18170,
											"end": 18188,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 18170,
											"end": 18188,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18170,
											"end": 18188,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18163,
											"end": 18225,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18261,
											"end": 18290,
											"name": "PUSH",
											"source": 8,
											"value": "6E205F636F6E76657274546F41676772656761746F7256616C75650000000000"
										},
										{
											"begin": 18241,
											"end": 18259,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 18241,
											"end": 18259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18241,
											"end": 18259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18234,
											"end": 18291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18308,
											"end": 18327,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 18308,
											"end": 18327,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 17910,
											"end": 18333,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 14445,
											"end": 14519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14555,
											"end": 14556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14551,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 14549,
											"end": 14556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 14549,
											"end": 14556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14549,
											"end": 14556,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14549,
											"end": 14556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14537,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 14543,
											"end": 14544,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14537,
											"end": 14540,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 14537,
											"end": 14544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 14537,
											"end": 14544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14537,
											"end": 14544,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 14537,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14536,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14536,
											"end": 14557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14536,
											"end": 14557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14536,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 14536,
											"end": 14557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14536,
											"end": 14557,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14536,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14529,
											"end": 14557,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 14102,
											"end": 14564,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14102,
											"end": 14564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 4865,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 4309,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4459,
											"end": 4474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4543,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4543,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 4527,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4543,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4514,
											"end": 4543,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4592,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4594,
											"end": 4607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4510,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4848,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 309,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4683,
											"end": 4728,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4683,
											"end": 4728,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4691,
											"end": 4700,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4683,
											"end": 4701,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4683,
											"end": 4728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4683,
											"end": 4728,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4766,
											"end": 4779,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4763,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4779,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4814,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 4646,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4646,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4646,
											"end": 4848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4646,
											"end": 4848,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4865,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 4865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5223,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5373,
											"end": 5388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5433,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5417,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5404,
											"end": 5433,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5433,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5482,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5484,
											"end": 5497,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5400,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5556,
											"end": 5565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5540,
											"end": 5615,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5583,
											"end": 5596,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5580,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5567,
											"end": 5596,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5540,
											"end": 5615,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 867,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1406,
											"end": 1426,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1461,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1514,
											"end": 1519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1510,
											"end": 1512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1520,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1504,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1521,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1625,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1611,
											"end": 1814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1664,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1668,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1814,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1611,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1958,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1950,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1958,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1931,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2355,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2342,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2339,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2356,
											"name": "MULMOD",
											"source": 1
										},
										{
											"begin": 2736,
											"end": 2748,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2752,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2782,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2751,
											"end": 2782,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 2910,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3744,
											"end": 3745,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3744,
											"end": 3759,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3764,
											"name": "XOR",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4006,
											"end": 4023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4023,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 4023,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4085,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4085,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4085,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4085,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4148,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4148,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4148,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4120,
											"end": 4148,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4211,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4211,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4211,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4211,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4211,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4274,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4274,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4274,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4338,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4338,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4317,
											"end": 4338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4338,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3312,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3322,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3292,
											"end": 3323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2509,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2509,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2509,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2510,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3371,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2557,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 741,
											"end": 4868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 8,
											"value": "332"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 336,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2075,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1961,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2045,
											"end": 2049,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2038,
											"end": 2043,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2034,
											"end": 2050,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2032,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2024,
											"end": 2051,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2014,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2014,
											"end": 2069,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2066,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2067,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2259,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 2244,
											"end": 2253,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2235,
											"end": 2242,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 2231,
											"end": 2254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2227,
											"end": 2260,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2273,
											"end": 2274,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2275,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "tag",
											"source": 8,
											"value": "341"
										},
										{
											"begin": 2224,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2299,
											"end": 2322,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2356,
											"end": 2361,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2331,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 2331,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2381,
											"end": 2386,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2438,
											"end": 2440,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2441,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2423,
											"end": 2441,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 2410,
											"end": 2442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2451,
											"end": 2484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2451,
											"end": 2484,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 2451,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2562,
											"end": 2564,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2547,
											"end": 2565,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2534,
											"end": 2566,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2534,
											"end": 2566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 2575,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 2575,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2627,
											"end": 2634,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2686,
											"end": 2688,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2689,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2658,
											"end": 2690,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2699,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 2699,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 2756,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2808,
											"end": 2811,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 2793,
											"end": 2812,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2793,
											"end": 2812,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2780,
											"end": 2813,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2780,
											"end": 2813,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 2822,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2879,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2862,
											"end": 2879,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2862,
											"end": 2879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2862,
											"end": 2879,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2080,
											"end": 2885,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 2981,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 2982,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 2983,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2955,
											"end": 2960,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2952,
											"end": 2984,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2942,
											"end": 3002,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 2996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 3000,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "tag",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3139,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3147,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3149,
											"end": 3155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3205,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3181,
											"end": 3188,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 3177,
											"end": 3200,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3173,
											"end": 3206,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3221,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3170,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3267,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3245,
											"end": 3268,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 3302,
											"end": 3307,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3277,
											"end": 3308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3277,
											"end": 3308,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 3277,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3327,
											"end": 3332,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3387,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3369,
											"end": 3387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3356,
											"end": 3388,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3356,
											"end": 3388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3397,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3397,
											"end": 3430,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3397,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3449,
											"end": 3456,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3510,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3493,
											"end": 3511,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3480,
											"end": 3512,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 3480,
											"end": 3512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 3521,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 3521,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3573,
											"end": 3580,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3632,
											"end": 3634,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3617,
											"end": 3635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3604,
											"end": 3636,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3604,
											"end": 3636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3645,
											"end": 3675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3645,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3694,
											"end": 3701,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3753,
											"end": 3756,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3738,
											"end": 3757,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3738,
											"end": 3757,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3725,
											"end": 3758,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 3725,
											"end": 3758,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 3767,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3767,
											"end": 3798,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 3767,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3817,
											"end": 3824,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 3861,
											"end": 3880,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3861,
											"end": 3880,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3848,
											"end": 3881,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3890,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3848,
											"end": 3881,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3890,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 3890,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3890,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3890,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3939,
											"end": 3946,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 3946,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3929,
											"end": 3946,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3013,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7629,
											"end": 7880,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 7629,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 7705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7754,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7740,
											"end": 7749,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7731,
											"end": 7738,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7727,
											"end": 7750,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7723,
											"end": 7755,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7772,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 7720,
											"end": 7772,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7768,
											"end": 7769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7766,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7758,
											"end": 7770,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7772,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 7720,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7800,
											"end": 7809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7794,
											"end": 7810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7819,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 7844,
											"end": 7849,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7819,
											"end": 7850,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 7819,
											"end": 7850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7885,
											"end": 8012,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 7885,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7946,
											"end": 7956,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 7941,
											"end": 7944,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 7937,
											"end": 7957,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 7934,
											"end": 7935,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7977,
											"end": 7981,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7974,
											"end": 7975,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7967,
											"end": 7982,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8001,
											"end": 8005,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7998,
											"end": 7999,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8006,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8017,
											"end": 8142,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 8017,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 8091,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 8091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 8091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8113,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8113,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8103,
											"end": 8113,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8136,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8100,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 8100,
											"end": 8136,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 8116,
											"end": 8134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8147,
											"end": 8274,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 8147,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 8203,
											"end": 8206,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8199,
											"end": 8219,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8196,
											"end": 8197,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8220,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8243,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8236,
											"end": 8237,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8229,
											"end": 8244,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8267,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8260,
											"end": 8261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8268,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8279,
											"end": 8496,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 8279,
											"end": 8496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8319,
											"end": 8320,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8335,
											"end": 8467,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 8335,
											"end": 8467,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8389,
											"end": 8399,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 8384,
											"end": 8387,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 8380,
											"end": 8400,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8401,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8424,
											"end": 8428,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 8421,
											"end": 8422,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8414,
											"end": 8429,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8452,
											"end": 8456,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8449,
											"end": 8450,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8442,
											"end": 8457,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8335,
											"end": 8467,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 8335,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8490,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 8481,
											"end": 8490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8279,
											"end": 8496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 9112,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 8862,
											"end": 9112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8947,
											"end": 8948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8957,
											"end": 9070,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 8957,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8971,
											"end": 8977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8968,
											"end": 8969,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8965,
											"end": 8978,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9070,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 8957,
											"end": 9070,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9058,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9047,
											"end": 9058,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9028,
											"end": 9039,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9028,
											"end": 9039,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9028,
											"end": 9039,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9021,
											"end": 9060,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8993,
											"end": 8995,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8986,
											"end": 8996,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 8957,
											"end": 9070,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 9070,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 8957,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9104,
											"end": 9105,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9086,
											"end": 9102,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9086,
											"end": 9102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9079,
											"end": 9106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8862,
											"end": 9112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9117,
											"end": 9404,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 9117,
											"end": 9404,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9246,
											"end": 9249,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9284,
											"end": 9290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9278,
											"end": 9291,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9300,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 9359,
											"end": 9365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9354,
											"end": 9357,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9347,
											"end": 9351,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9339,
											"end": 9345,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9335,
											"end": 9352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9300,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 9300,
											"end": 9366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9300,
											"end": 9366,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 9300,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9398,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9398,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9398,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9398,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9117,
											"end": 9404,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9117,
											"end": 9404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9409,
											"end": 9588,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9409,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9540,
											"end": 9562,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9529,
											"end": 9563,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9529,
											"end": 9563,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9564,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9519,
											"end": 9564,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 9509,
											"end": 9582,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9578,
											"end": 9579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9575,
											"end": 9576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9568,
											"end": 9580,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9509,
											"end": 9582,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 9509,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9409,
											"end": 9588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9409,
											"end": 9588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9409,
											"end": 9588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9409,
											"end": 9588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9696,
											"end": 9702,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9704,
											"end": 9710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9712,
											"end": 9718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9726,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9728,
											"end": 9734,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9781,
											"end": 9784,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 9769,
											"end": 9778,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9760,
											"end": 9767,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9779,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9752,
											"end": 9785,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 9749,
											"end": 9802,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 9749,
											"end": 9802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 9749,
											"end": 9802,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9798,
											"end": 9799,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9796,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9800,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9749,
											"end": 9802,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 9749,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9821,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 9850,
											"end": 9859,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9821,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 9821,
											"end": 9860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9821,
											"end": 9860,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 9821,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9900,
											"end": 9902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9904,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9966,
											"end": 9968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9951,
											"end": 9969,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 9951,
											"end": 9969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9945,
											"end": 9970,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10060,
											"end": 10062,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10039,
											"end": 10064,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9811,
											"end": 9860,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9811,
											"end": 9860,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9879,
											"end": 9904,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9879,
											"end": 9904,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9945,
											"end": 9970,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10039,
											"end": 10064,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10109,
											"end": 10158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 10153,
											"end": 10156,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 10138,
											"end": 10157,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 10138,
											"end": 10157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10109,
											"end": 10158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 10109,
											"end": 10158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10109,
											"end": 10158,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 10109,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10099,
											"end": 10158,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9593,
											"end": 10164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10169,
											"end": 10416,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 10169,
											"end": 10416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10290,
											"end": 10292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10278,
											"end": 10287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10269,
											"end": 10276,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10265,
											"end": 10288,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10261,
											"end": 10293,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10258,
											"end": 10310,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10258,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 10258,
											"end": 10310,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10306,
											"end": 10307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10303,
											"end": 10304,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10296,
											"end": 10308,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10258,
											"end": 10310,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 10258,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10338,
											"end": 10347,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10332,
											"end": 10348,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10357,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 10380,
											"end": 10385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10357,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 10357,
											"end": 10386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10421,
											"end": 10651,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 10421,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10491,
											"end": 10497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10544,
											"end": 10546,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10532,
											"end": 10541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10523,
											"end": 10530,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10519,
											"end": 10542,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10515,
											"end": 10547,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 10512,
											"end": 10564,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10512,
											"end": 10564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 10512,
											"end": 10564,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10560,
											"end": 10561,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10557,
											"end": 10558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10550,
											"end": 10562,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10512,
											"end": 10564,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 10512,
											"end": 10564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10421,
											"end": 10651,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10421,
											"end": 10651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12003,
											"end": 12399,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 12003,
											"end": 12399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12152,
											"end": 12154,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12141,
											"end": 12150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12134,
											"end": 12155,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12115,
											"end": 12119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12184,
											"end": 12190,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12178,
											"end": 12191,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12227,
											"end": 12233,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12222,
											"end": 12224,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12211,
											"end": 12220,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12207,
											"end": 12225,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12200,
											"end": 12234,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12243,
											"end": 12322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 12315,
											"end": 12321,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12310,
											"end": 12312,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12299,
											"end": 12308,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 12295,
											"end": 12313,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12290,
											"end": 12292,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12282,
											"end": 12288,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 12278,
											"end": 12293,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12243,
											"end": 12322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 12243,
											"end": 12322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12243,
											"end": 12322,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 12243,
											"end": 12322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12383,
											"end": 12385,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12362,
											"end": 12377,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12358,
											"end": 12387,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 12388,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 12388,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 12388,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12343,
											"end": 12388,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12390,
											"end": 12392,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 12339,
											"end": 12393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12393,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12003,
											"end": 12399,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12003,
											"end": 12399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12404,
											"end": 12550,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 12404,
											"end": 12550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12491,
											"end": 12504,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12491,
											"end": 12504,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12513,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 12491,
											"end": 12504,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12513,
											"end": 12544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 12513,
											"end": 12544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12555,
											"end": 12720,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 12555,
											"end": 12720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12646,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12633,
											"end": 12646,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12686,
											"end": 12694,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFF"
										},
										{
											"begin": 12675,
											"end": 12695,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12675,
											"end": 12695,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12696,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12665,
											"end": 12696,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12655,
											"end": 12714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 12655,
											"end": 12714,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12710,
											"end": 12711,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12707,
											"end": 12708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12700,
											"end": 12712,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12725,
											"end": 12889,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 12725,
											"end": 12889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12802,
											"end": 12815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12802,
											"end": 12815,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12855,
											"end": 12856,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 12844,
											"end": 12864,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12844,
											"end": 12864,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12844,
											"end": 12864,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 12834,
											"end": 12865,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12834,
											"end": 12865,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12824,
											"end": 12883,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 12824,
											"end": 12883,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12879,
											"end": 12880,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12876,
											"end": 12877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12869,
											"end": 12881,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 12894,
											"end": 13086,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 12894,
											"end": 13086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12973,
											"end": 12986,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 12973,
											"end": 12986,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13015,
											"end": 13061,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13015,
											"end": 13061,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13005,
											"end": 13062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13005,
											"end": 13062,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 12995,
											"end": 13080,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 12995,
											"end": 13080,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13076,
											"end": 13077,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13066,
											"end": 13078,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13278,
											"end": 13284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13286,
											"end": 13292,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13294,
											"end": 13300,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13302,
											"end": 13308,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13318,
											"end": 13324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13326,
											"end": 13332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13334,
											"end": 13340,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13342,
											"end": 13348,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13350,
											"end": 13356,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13358,
											"end": 13365,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13367,
											"end": 13374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13421,
											"end": 13424,
											"name": "PUSH",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 13409,
											"end": 13418,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 13400,
											"end": 13407,
											"name": "DUP16",
											"source": 8
										},
										{
											"begin": 13396,
											"end": 13419,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13392,
											"end": 13425,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 13389,
											"end": 13442,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13389,
											"end": 13442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 13389,
											"end": 13442,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13438,
											"end": 13439,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13435,
											"end": 13436,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 13440,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13389,
											"end": 13442,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 13389,
											"end": 13442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13470,
											"end": 13479,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 13464,
											"end": 13480,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13520,
											"end": 13546,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13513,
											"end": 13518,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13509,
											"end": 13547,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13502,
											"end": 13507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13499,
											"end": 13548,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13489,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 13489,
											"end": 13566,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13562,
											"end": 13563,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13552,
											"end": 13564,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13489,
											"end": 13566,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 13489,
											"end": 13566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13585,
											"end": 13590,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13609,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13662,
											"end": 13664,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 13647,
											"end": 13665,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13609,
											"end": 13666,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 13609,
											"end": 13666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13609,
											"end": 13666,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 13609,
											"end": 13666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13599,
											"end": 13666,
											"name": "SWAP11",
											"source": 8
										},
										{
											"begin": 13599,
											"end": 13666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13685,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 13738,
											"end": 13740,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13727,
											"end": 13736,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 13723,
											"end": 13741,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13685,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 13685,
											"end": 13742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13685,
											"end": 13742,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 13685,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13675,
											"end": 13742,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 13675,
											"end": 13742,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13761,
											"end": 13818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 13814,
											"end": 13816,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13803,
											"end": 13812,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 13799,
											"end": 13817,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13761,
											"end": 13818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 13761,
											"end": 13818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13761,
											"end": 13818,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 13761,
											"end": 13818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13751,
											"end": 13818,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 13751,
											"end": 13818,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 13886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 13881,
											"end": 13884,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 13870,
											"end": 13879,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 13866,
											"end": 13885,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 13886,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 13837,
											"end": 13886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13837,
											"end": 13886,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 13837,
											"end": 13886,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 13886,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 13827,
											"end": 13886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13905,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 13948,
											"end": 13951,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 13937,
											"end": 13946,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 13933,
											"end": 13952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13905,
											"end": 13953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 13905,
											"end": 13953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13905,
											"end": 13953,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 13905,
											"end": 13953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 13953,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 13953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 14015,
											"end": 14018,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 14004,
											"end": 14013,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14000,
											"end": 14019,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 13972,
											"end": 14020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 13972,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14020,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13962,
											"end": 14020,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14039,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 14084,
											"end": 14087,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 14073,
											"end": 14082,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14069,
											"end": 14088,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14039,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 14039,
											"end": 14089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14039,
											"end": 14089,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 14039,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14155,
											"end": 14158,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 14140,
											"end": 14159,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14140,
											"end": 14159,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14252,
											"end": 14255,
											"name": "PUSH",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 14237,
											"end": 14256,
											"name": "DUP16",
											"source": 8
										},
										{
											"begin": 14237,
											"end": 14256,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14231,
											"end": 14257,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14029,
											"end": 14089,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14029,
											"end": 14089,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14134,
											"end": 14160,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14231,
											"end": 14257,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14303,
											"end": 14353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 14348,
											"end": 14351,
											"name": "PUSH",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 14333,
											"end": 14352,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14333,
											"end": 14352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14303,
											"end": 14353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 14303,
											"end": 14353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14303,
											"end": 14353,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 14303,
											"end": 14353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14292,
											"end": 14353,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14292,
											"end": 14353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 14418,
											"end": 14421,
											"name": "PUSH",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 14407,
											"end": 14416,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 14403,
											"end": 14422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14423,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 14373,
											"end": 14423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14373,
											"end": 14423,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 14373,
											"end": 14423,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14423,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14362,
											"end": 14423,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 13091,
											"end": 14429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14790,
											"end": 14953,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 14790,
											"end": 14953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14868,
											"end": 14881,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14868,
											"end": 14881,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14921,
											"end": 14927,
											"name": "PUSH",
											"source": 8,
											"value": "FFFF"
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14910,
											"end": 14928,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14900,
											"end": 14929,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14900,
											"end": 14929,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 14890,
											"end": 14947,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 14890,
											"end": 14947,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14943,
											"end": 14944,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14940,
											"end": 14941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14933,
											"end": 14945,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15072,
											"end": 15078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15080,
											"end": 15086,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15088,
											"end": 15094,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15096,
											"end": 15102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15104,
											"end": 15110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15112,
											"end": 15118,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15120,
											"end": 15126,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15173,
											"end": 15176,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15152,
											"end": 15159,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 15148,
											"end": 15171,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15144,
											"end": 15177,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 15141,
											"end": 15194,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15141,
											"end": 15194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 15141,
											"end": 15194,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15190,
											"end": 15191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15187,
											"end": 15188,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15180,
											"end": 15192,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15141,
											"end": 15194,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 15141,
											"end": 15194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15222,
											"end": 15231,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 15216,
											"end": 15232,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15241,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 15266,
											"end": 15271,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15241,
											"end": 15272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 15241,
											"end": 15272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15241,
											"end": 15272,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 15241,
											"end": 15272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15291,
											"end": 15296,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15315,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15358,
											"end": 15360,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15343,
											"end": 15361,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15343,
											"end": 15361,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15315,
											"end": 15362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 15315,
											"end": 15362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15315,
											"end": 15362,
											"name": "tag",
											"source": 8,
											"value": "426"
										},
										{
											"begin": 15315,
											"end": 15362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15305,
											"end": 15362,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15305,
											"end": 15362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15381,
											"end": 15429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 15425,
											"end": 15427,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15414,
											"end": 15423,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15410,
											"end": 15428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15381,
											"end": 15429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 15381,
											"end": 15429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15381,
											"end": 15429,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 15381,
											"end": 15429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15371,
											"end": 15429,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 15371,
											"end": 15429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15448,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 15492,
											"end": 15494,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 15481,
											"end": 15490,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15477,
											"end": 15495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15448,
											"end": 15496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 15448,
											"end": 15496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15448,
											"end": 15496,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 15448,
											"end": 15496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15438,
											"end": 15496,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 15438,
											"end": 15496,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15515,
											"end": 15564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 15559,
											"end": 15562,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 15548,
											"end": 15557,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15544,
											"end": 15563,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15515,
											"end": 15564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 15515,
											"end": 15564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15515,
											"end": 15564,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 15515,
											"end": 15564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15505,
											"end": 15564,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15505,
											"end": 15564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15609,
											"end": 15612,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 15598,
											"end": 15607,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15594,
											"end": 15613,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15588,
											"end": 15614,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15623,
											"end": 15654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 15646,
											"end": 15653,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15623,
											"end": 15654,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 15623,
											"end": 15654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15623,
											"end": 15654,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 15623,
											"end": 15654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15725,
											"end": 15728,
											"name": "PUSH",
											"source": 8,
											"value": "C0"
										},
										{
											"begin": 15710,
											"end": 15729,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 15710,
											"end": 15729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15704,
											"end": 15730,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15673,
											"end": 15680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15673,
											"end": 15680,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15739,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 15704,
											"end": 15730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15739,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 15739,
											"end": 15769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15739,
											"end": 15769,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 15739,
											"end": 15769,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15788,
											"end": 15795,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15778,
											"end": 15795,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15778,
											"end": 15795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15778,
											"end": 15795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "SWAP9",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14958,
											"end": 15801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15806,
											"end": 15933,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 15806,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15867,
											"end": 15877,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 15862,
											"end": 15865,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 15858,
											"end": 15878,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 15855,
											"end": 15856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15848,
											"end": 15879,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15898,
											"end": 15902,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 15895,
											"end": 15896,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15888,
											"end": 15903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15922,
											"end": 15926,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 15919,
											"end": 15920,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15912,
											"end": 15927,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15938,
											"end": 16854,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 15938,
											"end": 16854,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16018,
											"end": 16024,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16071,
											"end": 16073,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16059,
											"end": 16068,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16050,
											"end": 16057,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16046,
											"end": 16069,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16042,
											"end": 16074,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16091,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16039,
											"end": 16091,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16087,
											"end": 16088,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16084,
											"end": 16085,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16077,
											"end": 16089,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16039,
											"end": 16091,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 16039,
											"end": 16091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16120,
											"end": 16129,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16114,
											"end": 16130,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16153,
											"end": 16171,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16145,
											"end": 16151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16142,
											"end": 16172,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16139,
											"end": 16189,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16139,
											"end": 16189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 16139,
											"end": 16189,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16185,
											"end": 16186,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16182,
											"end": 16183,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16175,
											"end": 16187,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16139,
											"end": 16189,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 16139,
											"end": 16189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16208,
											"end": 16230,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16208,
											"end": 16230,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16261,
											"end": 16265,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16253,
											"end": 16266,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16253,
											"end": 16266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16249,
											"end": 16276,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 16239,
											"end": 16294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 16239,
											"end": 16294,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16290,
											"end": 16291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16287,
											"end": 16288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16280,
											"end": 16292,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16239,
											"end": 16294,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 16239,
											"end": 16294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16323,
											"end": 16325,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16317,
											"end": 16326,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16349,
											"end": 16367,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16341,
											"end": 16347,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16338,
											"end": 16368,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16335,
											"end": 16391,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16335,
											"end": 16391,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 16335,
											"end": 16391,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16371,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 16371,
											"end": 16389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 16371,
											"end": 16389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16371,
											"end": 16389,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 16371,
											"end": 16389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16420,
											"end": 16422,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16414,
											"end": 16423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16512,
											"end": 16514,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 16474,
											"end": 16491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16474,
											"end": 16491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16470,
											"end": 16501,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16470,
											"end": 16501,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16470,
											"end": 16501,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16503,
											"end": 16505,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 16466,
											"end": 16506,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16462,
											"end": 16516,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16450,
											"end": 16517,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16450,
											"end": 16517,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16547,
											"end": 16565,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16532,
											"end": 16566,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16532,
											"end": 16566,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16568,
											"end": 16590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16568,
											"end": 16590,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16568,
											"end": 16590,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16529,
											"end": 16591,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 16526,
											"end": 16614,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16526,
											"end": 16614,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 16526,
											"end": 16614,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16594,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 16594,
											"end": 16612,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 16594,
											"end": 16612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16594,
											"end": 16612,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 16594,
											"end": 16612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16630,
											"end": 16632,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16623,
											"end": 16645,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16654,
											"end": 16676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16654,
											"end": 16676,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16654,
											"end": 16676,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16695,
											"end": 16710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16695,
											"end": 16710,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16695,
											"end": 16710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16712,
											"end": 16714,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16691,
											"end": 16715,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16688,
											"end": 16725,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 16685,
											"end": 16742,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16685,
											"end": 16742,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 16685,
											"end": 16742,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16738,
											"end": 16739,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16735,
											"end": 16736,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16728,
											"end": 16740,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16685,
											"end": 16742,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 16685,
											"end": 16742,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16751,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 16816,
											"end": 16822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16811,
											"end": 16813,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16803,
											"end": 16809,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16799,
											"end": 16814,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16794,
											"end": 16796,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16790,
											"end": 16792,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 16786,
											"end": 16797,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16751,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 16751,
											"end": 16823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16751,
											"end": 16823,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 16751,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16842,
											"end": 16848,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 15938,
											"end": 16854,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15938,
											"end": 16854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17205,
											"end": 17389,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 17205,
											"end": 17389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17239,
											"end": 17242,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17286,
											"end": 17291,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17283,
											"end": 17284,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 17272,
											"end": 17292,
											"name": "SIGNEXTEND",
											"source": 8
										},
										{
											"begin": 17320,
											"end": 17327,
											"name": "PUSH",
											"source": 8,
											"value": "7FFFFF"
										},
										{
											"begin": 17316,
											"end": 17328,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17307,
											"end": 17314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17304,
											"end": 17329,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17301,
											"end": 17352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 17301,
											"end": 17352,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17332,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 17332,
											"end": 17350,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 17332,
											"end": 17350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17332,
											"end": 17350,
											"name": "tag",
											"source": 8,
											"value": "446"
										},
										{
											"begin": 17332,
											"end": 17350,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17372,
											"end": 17373,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17368,
											"end": 17383,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 17368,
											"end": 17383,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 17205,
											"end": 17389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17205,
											"end": 17389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17394,
											"end": 17562,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 17394,
											"end": 17562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17467,
											"end": 17476,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 17467,
											"end": 17476,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17467,
											"end": 17476,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 17498,
											"end": 17507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 17498,
											"end": 17507,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17530,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17515,
											"end": 17530,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 17509,
											"end": 17531,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 17509,
											"end": 17531,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 17495,
											"end": 17532,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 17485,
											"end": 17556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 17485,
											"end": 17556,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 17536,
											"end": 17554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 17536,
											"end": 17554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 17536,
											"end": 17554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18338,
											"end": 18713,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 18338,
											"end": 18713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18426,
											"end": 18427,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18444,
											"end": 18449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18458,
											"end": 18707,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 18458,
											"end": 18707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18479,
											"end": 18480,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18469,
											"end": 18477,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18466,
											"end": 18481,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18458,
											"end": 18707,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18458,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 18458,
											"end": 18707,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18529,
											"end": 18533,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18524,
											"end": 18527,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 18520,
											"end": 18534,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 18514,
											"end": 18518,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18511,
											"end": 18535,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 18508,
											"end": 18558,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18508,
											"end": 18558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 18508,
											"end": 18558,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18538,
											"end": 18556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 18538,
											"end": 18556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 18538,
											"end": 18556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18538,
											"end": 18556,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 18538,
											"end": 18556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18588,
											"end": 18589,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18578,
											"end": 18586,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 18574,
											"end": 18590,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 18571,
											"end": 18620,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 18571,
											"end": 18620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 18571,
											"end": 18620,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18602,
											"end": 18618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18602,
											"end": 18618,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18602,
											"end": 18618,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18602,
											"end": 18618,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18571,
											"end": 18620,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 18571,
											"end": 18620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18685,
											"end": 18686,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18681,
											"end": 18697,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 18681,
											"end": 18697,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 18681,
											"end": 18697,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 18681,
											"end": 18697,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 18681,
											"end": 18697,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 18641,
											"end": 18656,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 18641,
											"end": 18656,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 18458,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 18458,
											"end": 18707,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18458,
											"end": 18707,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 18458,
											"end": 18707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18338,
											"end": 18713,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 18338,
											"end": 18713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18338,
											"end": 18713,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 18338,
											"end": 18713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 18338,
											"end": 18713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18338,
											"end": 18713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18338,
											"end": 18713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18718,
											"end": 19620,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 18718,
											"end": 19620,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18767,
											"end": 18772,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18797,
											"end": 18805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18787,
											"end": 18867,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 18787,
											"end": 18867,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18838,
											"end": 18839,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18852,
											"end": 18857,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 18852,
											"end": 18857,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18787,
											"end": 18867,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 18787,
											"end": 18867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18886,
											"end": 18890,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18876,
											"end": 18952,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 18876,
											"end": 18952,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18923,
											"end": 18924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18937,
											"end": 18942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 18937,
											"end": 18942,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18876,
											"end": 18952,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 18876,
											"end": 18952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18968,
											"end": 18972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18986,
											"end": 18987,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 18981,
											"end": 19040,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 18981,
											"end": 19040,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 18981,
											"end": 19040,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 18981,
											"end": 19040,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19054,
											"end": 19055,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 19049,
											"end": 19223,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19049,
											"end": 19223,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 19049,
											"end": 19223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 19049,
											"end": 19223,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 18961,
											"end": 19223,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 18961,
											"end": 19223,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18981,
											"end": 19040,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 18981,
											"end": 19040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19011,
											"end": 19012,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19002,
											"end": 19012,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 19002,
											"end": 19012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19025,
											"end": 19030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19025,
											"end": 19030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 19025,
											"end": 19030,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19049,
											"end": 19223,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 19049,
											"end": 19223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19086,
											"end": 19089,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 19076,
											"end": 19084,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19073,
											"end": 19090,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19070,
											"end": 19113,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19070,
											"end": 19113,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 19070,
											"end": 19113,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19093,
											"end": 19111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 19093,
											"end": 19111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 19093,
											"end": 19111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19093,
											"end": 19111,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 19093,
											"end": 19111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19149,
											"end": 19150,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 19135,
											"end": 19151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19135,
											"end": 19151,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 19208,
											"end": 19213,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 19208,
											"end": 19213,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18961,
											"end": 19223,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 18961,
											"end": 19223,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18961,
											"end": 19223,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19307,
											"end": 19309,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19297,
											"end": 19305,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19294,
											"end": 19310,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19288,
											"end": 19291,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 19282,
											"end": 19286,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19279,
											"end": 19292,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19275,
											"end": 19311,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19269,
											"end": 19271,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 19259,
											"end": 19267,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19256,
											"end": 19272,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19251,
											"end": 19253,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 19245,
											"end": 19249,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19242,
											"end": 19254,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 19238,
											"end": 19273,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19235,
											"end": 19312,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 19232,
											"end": 19435,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19232,
											"end": 19435,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 19232,
											"end": 19435,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19344,
											"end": 19363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19344,
											"end": 19363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 19344,
											"end": 19363,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 19420,
											"end": 19425,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 19420,
											"end": 19425,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19232,
											"end": 19435,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 19232,
											"end": 19435,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19467,
											"end": 19509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19492,
											"end": 19500,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19486,
											"end": 19490,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19467,
											"end": 19509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 19467,
											"end": 19509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19467,
											"end": 19509,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 19467,
											"end": 19509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19545,
											"end": 19551,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 19541,
											"end": 19542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19537,
											"end": 19543,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 19533,
											"end": 19552,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 19524,
											"end": 19531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19521,
											"end": 19553,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 19518,
											"end": 19576,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 19518,
											"end": 19576,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 19518,
											"end": 19576,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 19556,
											"end": 19574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 19556,
											"end": 19574,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 19556,
											"end": 19574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19556,
											"end": 19574,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 19556,
											"end": 19574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19594,
											"end": 19614,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 19594,
											"end": 19614,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 18718,
											"end": 19620,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18718,
											"end": 19620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 19625,
											"end": 19765,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 19625,
											"end": 19765,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19683,
											"end": 19688,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19712,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 19753,
											"end": 19757,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 19743,
											"end": 19751,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 19739,
											"end": 19758,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 19733,
											"end": 19737,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 19712,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 19712,
											"end": 19759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									],
									".data": {
										"3E1E6533146503DDCD57727C5002D69321677D0539DF318AD90F03963B3C334F": "4f7261636c654d616e616765723a2063616c6c20726576657274656420772f6f206d7367"
									}
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getPrice(address)": "41976e09",
							"oracleConfigs(address)": "067a4b06",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setOracleConfig(address,address,address,bool,uint8,bool)": "f2ac1ec5",
							"setVaultUnderlyingFeeds(address,address,address,uint8,uint8)": "9b05fc75",
							"transferOwnership(address)": "f2fde38b",
							"vaultFeeds(address)": "7f4a3102"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"primaryAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fallbackAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useFallbackIfError\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimalsOverride\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isVaultToken\",\"type\":\"bool\"}],\"name\":\"OracleConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vaultToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token0Aggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token1Aggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"token0Decimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"token1Decimals\",\"type\":\"uint8\"}],\"name\":\"VaultUnderlyingFeedsUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracleConfigs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"primaryAggregator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fallbackAggregator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useFallbackIfError\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"decimalsOverride\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isVaultToken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"primaryAggregator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fallbackAggregator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useFallbackIfErr\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"decimalsOvr\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isVaultToken\",\"type\":\"bool\"}],\"name\":\"setOracleConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vaultToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0Agg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1Agg\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"token0Dec\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"token1Dec\",\"type\":\"uint8\"}],\"name\":\"setVaultUnderlyingFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vaultFeeds\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token0Aggregator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1Aggregator\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"token0Decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"token1Decimals\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/OracleManager.sol\":\"OracleManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"Contracts/OracleManager.sol\":{\"keccak256\":\"0x48e00f69322cf60115f1edb855b6e73b368d66e8ccf39586ec71da6b7bcc1af0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15a1f2657985f342035eeefa95d6aabe4e65a94a0e96edfbbfe1b3757807fa03\",\"dweb:/ipfs/QmYTyotgvyB2cfPvixL9Y2LPQKfFy8ap3o2h4KExfs7Y4x\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1640,
								"contract": "Contracts/OracleManager.sol:OracleManager",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 689,
								"contract": "Contracts/OracleManager.sol:OracleManager",
								"label": "oracleConfigs",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(OracleData)673_storage)"
							},
							{
								"astId": 694,
								"contract": "Contracts/OracleManager.sol:OracleManager",
								"label": "vaultFeeds",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(VaultUnderlyingFeeds)684_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(OracleData)673_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct OracleManager.OracleData)",
								"numberOfBytes": "32",
								"value": "t_struct(OracleData)673_storage"
							},
							"t_mapping(t_address,t_struct(VaultUnderlyingFeeds)684_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct OracleManager.VaultUnderlyingFeeds)",
								"numberOfBytes": "32",
								"value": "t_struct(VaultUnderlyingFeeds)684_storage"
							},
							"t_struct(OracleData)673_storage": {
								"encoding": "inplace",
								"label": "struct OracleManager.OracleData",
								"members": [
									{
										"astId": 664,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "primaryAggregator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 666,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "fallbackAggregator",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 668,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "useFallbackIfError",
										"offset": 20,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 670,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "decimalsOverride",
										"offset": 21,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 672,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "isVaultToken",
										"offset": 22,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(VaultUnderlyingFeeds)684_storage": {
								"encoding": "inplace",
								"label": "struct OracleManager.VaultUnderlyingFeeds",
								"members": [
									{
										"astId": 675,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "token0Aggregator",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 677,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "token1Aggregator",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 679,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "token0Decimals",
										"offset": 20,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 681,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "token1Decimals",
										"offset": 21,
										"slot": "1",
										"type": "t_uint8"
									},
									{
										"astId": 683,
										"contract": "Contracts/OracleManager.sol:OracleManager",
										"label": "exists",
										"offset": 22,
										"slot": "1",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TickMathLocal": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/OracleManager.sol\":1423:4075  library TickMathLocal {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/OracleManager.sol\":1423:4075  library TickMathLocal {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212205c755433d8cb32ceca1daaf9015e3484252a8bc417fa4bc0dfd486638a0c2d1764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205c755433d8cb32ceca1daaf9015e3484252a8bc417fa4bc0dfd486638a0c2d1764736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TLOAD PUSH22 0x5433D8CB32CECA1DAAF9015E3484252A8BC417FA4BC0 0xDF 0xD4 DUP7 PUSH4 0x8A0C2D17 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1423:2652:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1423:2652:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205c755433d8cb32ceca1daaf9015e3484252a8bc417fa4bc0dfd486638a0c2d1764736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TLOAD PUSH22 0x5433D8CB32CECA1DAAF9015E3484252A8BC417FA4BC0 0xDF 0xD4 DUP7 PUSH4 0x8A0C2D17 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "1423:2652:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1423,
									"end": 4075,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205c755433d8cb32ceca1daaf9015e3484252a8bc417fa4bc0dfd486638a0c2d1764736f6c634300081c0033",
									".code": [
										{
											"begin": 1423,
											"end": 4075,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 4075,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 4075,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1423,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1423,
											"end": 4075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 4075,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/OracleManager.sol\":\"TickMathLocal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"Contracts/OracleManager.sol\":{\"keccak256\":\"0x48e00f69322cf60115f1edb855b6e73b368d66e8ccf39586ec71da6b7bcc1af0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15a1f2657985f342035eeefa95d6aabe4e65a94a0e96edfbbfe1b3757807fa03\",\"dweb:/ipfs/QmYTyotgvyB2cfPvixL9Y2LPQKfFy8ap3o2h4KExfs7Y4x\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]},\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1640,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220392bbc96ec2cff7e8af056e5eb9dfe9da02221e8f36691ac7904f516113bad8f64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220392bbc96ec2cff7e8af056e5eb9dfe9da02221e8f36691ac7904f516113bad8f64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x2B 0xBC SWAP7 0xEC 0x2C SELFDESTRUCT PUSH31 0x8AF056E5EB9DFE9DA02221E8F36691AC7904F516113BAD8F64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220392bbc96ec2cff7e8af056e5eb9dfe9da02221e8f36691ac7904f516113bad8f64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0x2B 0xBC SWAP7 0xEC 0x2C SELFDESTRUCT PUSH31 0x8AF056E5EB9DFE9DA02221E8F36691AC7904F516113BAD8F64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "194:8964:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220392bbc96ec2cff7e8af056e5eb9dfe9da02221e8f36691ac7904f516113bad8f64736f6c634300081c0033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol": {
				"LiquidityAmounts": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Liquidity amount functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":327:6974  library LiquidityAmounts {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":327:6974  library LiquidityAmounts {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212201cc1b3aba02dc8adbfbca5932dde5149f5d57e19ea6637634ad7fc788946caf964736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201cc1b3aba02dc8adbfbca5932dde5149f5d57e19ea6637634ad7fc788946caf964736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC1 0xB3 0xAB LOG0 0x2D 0xC8 0xAD 0xBF 0xBC 0xA5 SWAP4 0x2D 0xDE MLOAD BLOBHASH CREATE2 0xD5 PUSH31 0x19EA6637634AD7FC788946CAF964736F6C634300081C003300000000000000 ",
							"sourceMap": "327:6647:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;327:6647:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212201cc1b3aba02dc8adbfbca5932dde5149f5d57e19ea6637634ad7fc788946caf964736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC1 0xB3 0xAB LOG0 0x2D 0xC8 0xAD 0xBF 0xBC 0xA5 SWAP4 0x2D 0xDE MLOAD BLOBHASH CREATE2 0xD5 PUSH31 0x19EA6637634AD7FC788946CAF964736F6C634300081C003300000000000000 ",
							"sourceMap": "327:6647:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAmount0ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmount1ForLiquidity(uint160,uint160,uint128)": "infinite",
								"getAmountsForLiquidity(uint160,uint160,uint160,uint128)": "infinite",
								"getLiquidityForAmount0(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmount1(uint160,uint160,uint256)": "infinite",
								"getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256)": "infinite",
								"toUint128(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 327,
									"end": 6974,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201cc1b3aba02dc8adbfbca5932dde5149f5d57e19ea6637634ad7fc788946caf964736f6c634300081c0033",
									".code": [
										{
											"begin": 327,
											"end": 6974,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 6974,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
								"@uniswap/v3-core/contracts/libraries/FullMath.sol",
								"Contracts/OracleManager.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
								"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
								"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Liquidity amount functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions for computing liquidity amounts from token amounts and prices\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":\"LiquidityAmounts\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x0ba8a9b95a956a4050749c0158e928398c447c91469682ca8a7cc7e77a7fe032\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://186d3b528866065a5856f96d2aeec698efa99f8da913e9adf34f8cc296cc993d\",\"dweb:/ipfs/QmUAiMvtAQp8c9dy57bqJYzG7hkb1uChiPaQmt264skoqP\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xeb966aa0ba2cca10735d95172c76393bb9237a70464d2331170e6a45bb5e1903\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://000b6066ee725f656b9047e6eebd1b0df749f4fec628dc267a2d97cc70151c54\",\"dweb:/ipfs/Qmf9z3jyMJTtD7GAcCLxWFxMJs3LizjoNoDzKWHBP3h3d6\"]},\"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol\":{\"keccak256\":\"0x42b9bc79b44cfe16049616866862b7eb8bd7b342df1e3da5c7497506f007ecdb\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7f1ae92116f8908978e3937e40a0eb14479bbcd1e6b91da176c0b25b93f7718d\",\"dweb:/ipfs/Qmcud1yY7KgQgq2Ykx3e2VecPabMCXfXnrRVSDFL3g5kVC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides functions for computing liquidity amounts from token amounts and prices",
						"version": 1
					}
				}
			},
			"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> Contracts/OracleManager.sol:280:32:\n    |\n280 |         (uint160 sqrtPriceX96, int24 tick) = _getPoolSqrtAndTick(IVaultToken(vaultToken).v3Pool());\n    |                                ^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10609,
					"file": "Contracts/OracleManager.sol",
					"start": 10599
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v3-core/contracts/libraries/FixedPoint96.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							9
						]
					},
					"id": 10,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FixedPoint96",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "71:174:0",
								"text": "@title FixedPoint96\n @notice A library for handling binary fixed point numbers, see https://en.wikipedia.org/wiki/Q_(number_format)\n @dev Used in SqrtPriceMath.sol"
							},
							"fullyImplemented": true,
							"id": 9,
							"linearizedBaseContracts": [
								9
							],
							"name": "FixedPoint96",
							"nameLocation": "253:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "RESOLUTION",
									"nameLocation": "296:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 9,
									"src": "272:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "272:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3936",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "309:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96_by_1",
											"typeString": "int_const 96"
										},
										"value": "96"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "Q96",
									"nameLocation": "343:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 9,
									"src": "317:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "307831303030303030303030303030303030303030303030303030",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "349:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_79228162514264337593543950336_by_1",
											"typeString": "int_const 79228162514264337593543950336"
										},
										"value": "0x1000000000000000000000000"
									},
									"visibility": "internal"
								}
							],
							"scope": 10,
							"src": "245:134:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:335:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							186
						]
					},
					"id": 187,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 11,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FullMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 12,
								"nodeType": "StructuredDocumentation",
								"src": "57:297:1",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 186,
							"linearizedBaseContracts": [
								186
							],
							"name": "FullMath",
							"nameLocation": "362:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "869:3999:1",
										"statements": [
											{
												"id": 139,
												"nodeType": "UncheckedBlock",
												"src": "879:3983:1",
												"statements": [
													{
														"assignments": [
															25
														],
														"declarations": [
															{
																"constant": false,
																"id": 25,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "1234:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "1226:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 24,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1226:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 26,
														"nodeType": "VariableDeclarationStatement",
														"src": "1226:13:1"
													},
													{
														"assignments": [
															28
														],
														"declarations": [
															{
																"constant": false,
																"id": 28,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "1306:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "1298:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 27,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1298:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 29,
														"nodeType": "VariableDeclarationStatement",
														"src": "1298:13:1"
													},
													{
														"AST": {
															"nativeSrc": "1378:157:1",
															"nodeType": "YulBlock",
															"src": "1378:157:1",
															"statements": [
																{
																	"nativeSrc": "1396:30:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1396:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "1413:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1413:1:1"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "1416:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1416:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1423:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1423:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1419:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1419:3:1"
																				},
																				"nativeSrc": "1419:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1419:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "1406:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1406:6:1"
																		},
																		"nativeSrc": "1406:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1406:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "1400:2:1",
																			"nodeType": "YulTypedName",
																			"src": "1400:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1443:18:1",
																	"nodeType": "YulAssignment",
																	"src": "1443:18:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "1456:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1456:1:1"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "1459:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1459:1:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "1452:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1452:3:1"
																		},
																		"nativeSrc": "1452:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:9:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "1443:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1443:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "1478:43:1",
																	"nodeType": "YulAssignment",
																	"src": "1478:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "1495:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1495:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "1499:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1499:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1491:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1491:3:1"
																				},
																				"nativeSrc": "1491:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1491:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "1510:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "1510:2:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "1514:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1514:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "1507:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "1507:2:1"
																				},
																				"nativeSrc": "1507:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1507:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "1478:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1478:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 15,
																"isOffset": false,
																"isSlot": false,
																"src": "1413:1:1",
																"valueSize": 1
															},
															{
																"declaration": 15,
																"isOffset": false,
																"isSlot": false,
																"src": "1456:1:1",
																"valueSize": 1
															},
															{
																"declaration": 17,
																"isOffset": false,
																"isSlot": false,
																"src": "1416:1:1",
																"valueSize": 1
															},
															{
																"declaration": 17,
																"isOffset": false,
																"isSlot": false,
																"src": "1459:1:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "1443:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "1499:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "1514:5:1",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "1478:5:1",
																"valueSize": 1
															}
														],
														"id": 30,
														"nodeType": "InlineAssembly",
														"src": "1369:166:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 31,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "1615:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1624:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1615:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 44,
														"nodeType": "IfStatement",
														"src": "1611:203:1",
														"trueBody": {
															"id": 43,
															"nodeType": "Block",
															"src": "1627:187:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 37,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 35,
																					"name": "denominator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 19,
																					"src": "1653:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 36,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1667:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "1653:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 34,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "1645:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 38,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1645:24:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 39,
																	"nodeType": "ExpressionStatement",
																	"src": "1645:24:1"
																},
																{
																	"AST": {
																		"nativeSrc": "1696:73:1",
																		"nodeType": "YulBlock",
																		"src": "1696:73:1",
																		"statements": [
																			{
																				"nativeSrc": "1718:33:1",
																				"nodeType": "YulAssignment",
																				"src": "1718:33:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "prod0",
																							"nativeSrc": "1732:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "1732:5:1"
																						},
																						{
																							"name": "denominator",
																							"nativeSrc": "1739:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "1739:11:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "1728:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1728:3:1"
																					},
																					"nativeSrc": "1728:23:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1728:23:1"
																				},
																				"variableNames": [
																					{
																						"name": "result",
																						"nativeSrc": "1718:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1718:6:1"
																					}
																				]
																			}
																		]
																	},
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 19,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1739:11:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 25,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1732:5:1",
																			"valueSize": 1
																		},
																		{
																			"declaration": 22,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1718:6:1",
																			"valueSize": 1
																		}
																	],
																	"id": 40,
																	"nodeType": "InlineAssembly",
																	"src": "1687:82:1"
																},
																{
																	"expression": {
																		"id": 41,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1793:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 23,
																	"id": 42,
																	"nodeType": "Return",
																	"src": "1786:13:1"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 46,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "1939:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 47,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 28,
																		"src": "1953:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1939:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 45,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "1931:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1931:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 50,
														"nodeType": "ExpressionStatement",
														"src": "1931:28:1"
													},
													{
														"assignments": [
															52
														],
														"declarations": [
															{
																"constant": false,
																"id": 52,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2268:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "2260:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 51,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2260:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 53,
														"nodeType": "VariableDeclarationStatement",
														"src": "2260:17:1"
													},
													{
														"AST": {
															"nativeSrc": "2300:70:1",
															"nodeType": "YulBlock",
															"src": "2300:70:1",
															"statements": [
																{
																	"nativeSrc": "2318:38:1",
																	"nodeType": "YulAssignment",
																	"src": "2318:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "2338:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "2338:1:1"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "2341:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "2341:1:1"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "2344:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "2344:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2331:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2331:6:1"
																		},
																		"nativeSrc": "2331:25:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "2318:9:1",
																			"nodeType": "YulIdentifier",
																			"src": "2318:9:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 15,
																"isOffset": false,
																"isSlot": false,
																"src": "2338:1:1",
																"valueSize": 1
															},
															{
																"declaration": 17,
																"isOffset": false,
																"isSlot": false,
																"src": "2341:1:1",
																"valueSize": 1
															},
															{
																"declaration": 19,
																"isOffset": false,
																"isSlot": false,
																"src": "2344:11:1",
																"valueSize": 1
															},
															{
																"declaration": 52,
																"isOffset": false,
																"isSlot": false,
																"src": "2318:9:1",
																"valueSize": 1
															}
														],
														"id": 54,
														"nodeType": "InlineAssembly",
														"src": "2291:79:1"
													},
													{
														"AST": {
															"nativeSrc": "2451:120:1",
															"nodeType": "YulBlock",
															"src": "2451:120:1",
															"statements": [
																{
																	"nativeSrc": "2469:41:1",
																	"nodeType": "YulAssignment",
																	"src": "2469:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "2482:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2482:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "2492:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2492:9:1"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2503:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2503:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "2489:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "2489:2:1"
																				},
																				"nativeSrc": "2489:20:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2489:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2478:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:1"
																		},
																		"nativeSrc": "2478:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2469:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "2469:5:1"
																		}
																	]
																},
																{
																	"nativeSrc": "2527:30:1",
																	"nodeType": "YulAssignment",
																	"src": "2527:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "2540:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2540:5:1"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "2547:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2547:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2536:3:1"
																		},
																		"nativeSrc": "2536:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2527:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "2527:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "2503:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "2527:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "2540:5:1",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "2469:5:1",
																"valueSize": 1
															},
															{
																"declaration": 28,
																"isOffset": false,
																"isSlot": false,
																"src": "2482:5:1",
																"valueSize": 1
															},
															{
																"declaration": 52,
																"isOffset": false,
																"isSlot": false,
																"src": "2492:9:1",
																"valueSize": 1
															},
															{
																"declaration": 52,
																"isOffset": false,
																"isSlot": false,
																"src": "2547:9:1",
																"valueSize": 1
															}
														],
														"id": 55,
														"nodeType": "InlineAssembly",
														"src": "2442:129:1"
													},
													{
														"assignments": [
															57
														],
														"declarations": [
															{
																"constant": false,
																"id": 57,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "2744:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "2736:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 56,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2736:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 64,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 58,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2752:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 59,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "2756:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2752:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 61,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2751:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 62,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2771:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2751:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2736:46:1"
													},
													{
														"AST": {
															"nativeSrc": "2855:69:1",
															"nodeType": "YulBlock",
															"src": "2855:69:1",
															"statements": [
																{
																	"nativeSrc": "2873:37:1",
																	"nodeType": "YulAssignment",
																	"src": "2873:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "2892:11:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:11:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "2905:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2905:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "2888:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2888:3:1"
																		},
																		"nativeSrc": "2888:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2888:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "2873:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "2873:11:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 19,
																"isOffset": false,
																"isSlot": false,
																"src": "2873:11:1",
																"valueSize": 1
															},
															{
																"declaration": 19,
																"isOffset": false,
																"isSlot": false,
																"src": "2892:11:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "2905:4:1",
																"valueSize": 1
															}
														],
														"id": 65,
														"nodeType": "InlineAssembly",
														"src": "2846:78:1"
													},
													{
														"AST": {
															"nativeSrc": "3005:57:1",
															"nodeType": "YulBlock",
															"src": "3005:57:1",
															"statements": [
																{
																	"nativeSrc": "3023:25:1",
																	"nodeType": "YulAssignment",
																	"src": "3023:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3036:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3036:5:1"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "3043:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3043:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3032:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:1"
																		},
																		"nativeSrc": "3032:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3023:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3023:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "3023:5:1",
																"valueSize": 1
															},
															{
																"declaration": 25,
																"isOffset": false,
																"isSlot": false,
																"src": "3036:5:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "3043:4:1",
																"valueSize": 1
															}
														],
														"id": 66,
														"nodeType": "InlineAssembly",
														"src": "2996:66:1"
													},
													{
														"AST": {
															"nativeSrc": "3266:71:1",
															"nodeType": "YulBlock",
															"src": "3266:71:1",
															"statements": [
																{
																	"nativeSrc": "3284:39:1",
																	"nodeType": "YulAssignment",
																	"src": "3284:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3304:1:1",
																								"nodeType": "YulLiteral",
																								"src": "3304:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "3307:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "3307:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "3300:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "3300:3:1"
																						},
																						"nativeSrc": "3300:12:1",
																						"nodeType": "YulFunctionCall",
																						"src": "3300:12:1"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "3314:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3314:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "3296:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3296:3:1"
																				},
																				"nativeSrc": "3296:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3296:23:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3321:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3321:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3292:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3292:3:1"
																		},
																		"nativeSrc": "3292:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3292:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "3284:4:1",
																			"nodeType": "YulIdentifier",
																			"src": "3284:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "3284:4:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "3307:4:1",
																"valueSize": 1
															},
															{
																"declaration": 57,
																"isOffset": false,
																"isSlot": false,
																"src": "3314:4:1",
																"valueSize": 1
															}
														],
														"id": 67,
														"nodeType": "InlineAssembly",
														"src": "3257:80:1"
													},
													{
														"expression": {
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 68,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "3350:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 69,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "3359:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 70,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 57,
																	"src": "3367:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3359:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3350:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 73,
														"nodeType": "ExpressionStatement",
														"src": "3350:21:1"
													},
													{
														"assignments": [
															75
														],
														"declarations": [
															{
																"constant": false,
																"id": 75,
																"mutability": "mutable",
																"name": "inv",
																"nameLocation": "3737:3:1",
																"nodeType": "VariableDeclaration",
																"scope": 139,
																"src": "3729:11:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 74,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3729:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 82,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 76,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3744:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 77,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "3748:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3744:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 79,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3743:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3743:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3729:35:1"
													},
													{
														"expression": {
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 83,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "3995:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 84,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4002:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 85,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4006:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 86,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4020:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4006:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4002:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3995:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 90,
														"nodeType": "ExpressionStatement",
														"src": "3995:28:1"
													},
													{
														"expression": {
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 91,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4057:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4064:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 93,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4068:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 94,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4082:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4068:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4064:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4057:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 98,
														"nodeType": "ExpressionStatement",
														"src": "4057:28:1"
													},
													{
														"expression": {
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 99,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4120:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4127:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 101,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4131:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 102,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4145:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4131:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4127:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4120:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 106,
														"nodeType": "ExpressionStatement",
														"src": "4120:28:1"
													},
													{
														"expression": {
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 107,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4183:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4190:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 109,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4194:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 110,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4208:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4194:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4190:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4183:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 114,
														"nodeType": "ExpressionStatement",
														"src": "4183:28:1"
													},
													{
														"expression": {
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 115,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4246:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4253:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 117,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4257:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 118,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4271:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4257:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4253:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4246:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 122,
														"nodeType": "ExpressionStatement",
														"src": "4246:28:1"
													},
													{
														"expression": {
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 123,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "4310:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4317:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 125,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 19,
																		"src": "4321:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 126,
																		"name": "inv",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 75,
																		"src": "4335:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4321:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4317:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4310:28:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 130,
														"nodeType": "ExpressionStatement",
														"src": "4310:28:1"
													},
													{
														"expression": {
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 131,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "4804:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 132,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "4813:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 133,
																	"name": "inv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 75,
																	"src": "4821:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4813:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4804:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 136,
														"nodeType": "ExpressionStatement",
														"src": "4804:20:1"
													},
													{
														"expression": {
															"id": 137,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "4845:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 23,
														"id": 138,
														"nodeType": "Return",
														"src": "4838:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "377:359:1",
										"text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "750:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "774:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "766:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "793:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "785:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "812:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "804:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:73:1"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "861:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "853:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:16:1"
									},
									"scope": 186,
									"src": "741:4127:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 184,
										"nodeType": "Block",
										"src": "5288:227:1",
										"statements": [
											{
												"id": 183,
												"nodeType": "UncheckedBlock",
												"src": "5298:211:1",
												"statements": [
													{
														"expression": {
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 153,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "5322:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 155,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "5338:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 156,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5341:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 157,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 148,
																		"src": "5344:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 154,
																	"name": "mulDiv",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "5331:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5331:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5322:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 160,
														"nodeType": "ExpressionStatement",
														"src": "5322:34:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 162,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "5381:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 163,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "5384:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 164,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 148,
																		"src": "5387:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 161,
																	"name": "mulmod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967280,
																	"src": "5374:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5374:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5402:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5374:29:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 182,
														"nodeType": "IfStatement",
														"src": "5370:129:1",
														"trueBody": {
															"id": 181,
															"nodeType": "Block",
															"src": "5405:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 169,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 151,
																					"src": "5431:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"expression": {
																						"arguments": [
																							{
																								"id": 172,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "5445:7:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								},
																								"typeName": {
																									"id": 171,
																									"name": "uint256",
																									"nodeType": "ElementaryTypeName",
																									"src": "5445:7:1",
																									"typeDescriptions": {}
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_type$_t_uint256_$",
																									"typeString": "type(uint256)"
																								}
																							],
																							"id": 170,
																							"name": "type",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967269,
																							"src": "5440:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																								"typeString": "function () pure"
																							}
																						},
																						"id": 173,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5440:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_meta_type_t_uint256",
																							"typeString": "type(uint256)"
																						}
																					},
																					"id": 174,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "5454:3:1",
																					"memberName": "max",
																					"nodeType": "MemberAccess",
																					"src": "5440:17:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5431:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 168,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "5423:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																				"typeString": "function (bool) pure"
																			}
																		},
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5423:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 177,
																	"nodeType": "ExpressionStatement",
																	"src": "5423:35:1"
																},
																{
																	"expression": {
																		"id": 179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "5476:8:1",
																		"subExpression": {
																			"id": 178,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "5476:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 180,
																	"nodeType": "ExpressionStatement",
																	"src": "5476:8:1"
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4874:271:1",
										"text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nameLocation": "5159:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5193:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5185:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5212:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5204:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5231:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5223:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5175:73:1"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "5280:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "5272:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5272:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:16:1"
									},
									"scope": 186,
									"src": "5150:365:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 187,
							"src": "354:5163:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:5485:1"
				},
				"id": 1
			},
			"Contracts/OracleManager.sol": {
				"ast": {
					"absolutePath": "Contracts/OracleManager.sol",
					"exportedSymbols": {
						"Address": [
							2075
						],
						"AggregatorV3Interface": [
							2487
						],
						"Context": [
							2097
						],
						"FixedPoint96": [
							9
						],
						"FullMath": [
							186
						],
						"INonfungiblePositionManager": [
							642
						],
						"IUniswapV3Pool": [
							660
						],
						"IVaultToken": [
							612
						],
						"LiquidityAmounts": [
							2441
						],
						"OracleManager": [
							1632
						],
						"Ownable": [
							1745
						],
						"TickMathLocal": [
							591
						]
					},
					"id": 1633,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 188,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 2488,
							"src": "424:123:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
							"id": 190,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 1746,
							"src": "724:105:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
							"id": 191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 2076,
							"src": "830:104:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
							"file": "https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
							"id": 192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1633,
							"sourceUnit": 2442,
							"src": "1139:99:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TickMathLocal",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 591,
							"linearizedBaseContracts": [
								591
							],
							"name": "TickMathLocal",
							"nameLocation": "1431:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 196,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nameLocation": "1475:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 591,
									"src": "1451:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 193,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "1451:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 195,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "1486:7:2",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 194,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1487:6:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 199,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nameLocation": "1523:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 591,
									"src": "1499:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 197,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "1499:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"hexValue": "383837323732",
										"id": 198,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1535:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_887272_by_1",
											"typeString": "int_const 887272"
										},
										"value": "887272"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "1633:2440:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 207,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "1651:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 208,
																	"name": "MIN_TICK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 196,
																	"src": "1659:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1651:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "1671:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 211,
																	"name": "MAX_TICK",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1679:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "1671:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1651:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5469636b206f7574206f662072616e6765",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1689:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aa7c621a39f9d1cc5f7410468746eb53df077a1592062de7c7ef03b504e8eea2",
																"typeString": "literal_string \"Tick out of range\""
															},
															"value": "Tick out of range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aa7c621a39f9d1cc5f7410468746eb53df077a1592062de7c7ef03b504e8eea2",
																"typeString": "literal_string \"Tick out of range\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1643:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "1643:66:2"
											},
											{
												"assignments": [
													218
												],
												"declarations": [
													{
														"constant": false,
														"id": 218,
														"mutability": "mutable",
														"name": "absTick",
														"nameLocation": "1728:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "1720:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 217,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1720:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"condition": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 219,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "1739:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1746:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1739:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 222,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1738:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 240,
																				"name": "tick",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 201,
																				"src": "1832:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			],
																			"id": 239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1825:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			},
																			"typeName": {
																				"id": 238,
																				"name": "uint24",
																				"nodeType": "ElementaryTypeName",
																				"src": "1825:6:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1825:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1818:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 236,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "1818:6:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1818:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1810:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 234,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1810:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1810:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1738:101:2",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "1786:5:2",
																				"subExpression": {
																					"id": 229,
																					"name": "tick",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 201,
																					"src": "1787:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			],
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1779:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint24_$",
																				"typeString": "type(uint24)"
																			},
																			"typeName": {
																				"id": 227,
																				"name": "uint24",
																				"nodeType": "ElementaryTypeName",
																				"src": "1779:6:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1779:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1772:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 225,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "1772:6:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1772:21:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1764:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 223,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1764:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1764:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1720:119:2"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "1858:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "1850:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1850:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1866:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
														"typeString": "int_const 3402...(31 digits omitted)...1456"
													},
													"value": "0x100000000000000000000000000000000"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1850:51:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 250,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "1928:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1938:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "1928:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1949:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1928:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 264,
												"nodeType": "IfStatement",
												"src": "1924:87:2",
												"trueBody": {
													"expression": {
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 255,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "1952:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 256,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "1961:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
																			"id": 257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1969:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...9313"
																			},
																			"value": "0xfffcb933bd6fad37aa2d162d1a594001"
																		},
																		"src": "1961:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 259,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1960:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2008:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1960:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1952:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 263,
													"nodeType": "ExpressionStatement",
													"src": "1952:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 265,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2035:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "2025:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2046:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2025:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "2021:87:2",
												"trueBody": {
													"expression": {
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 270,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2049:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 271,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2058:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2066:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "2058:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 274,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2057:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2057:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2049:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 278,
													"nodeType": "ExpressionStatement",
													"src": "2049:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 280,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2132:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "2122:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2143:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2122:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 294,
												"nodeType": "IfStatement",
												"src": "2118:87:2",
												"trueBody": {
													"expression": {
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 285,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2146:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 286,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2155:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2163:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "2155:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 289,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2154:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2202:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2154:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2146:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 293,
													"nodeType": "ExpressionStatement",
													"src": "2146:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 295,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2219:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2229:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "2219:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2240:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2219:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "IfStatement",
												"src": "2215:87:2",
												"trueBody": {
													"expression": {
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 300,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2243:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 301,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2252:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2260:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "2252:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 304,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2299:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2251:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2243:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 308,
													"nodeType": "ExpressionStatement",
													"src": "2243:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 310,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2316:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2326:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "2316:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2337:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2316:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "2312:87:2",
												"trueBody": {
													"expression": {
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 315,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2340:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 316,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2349:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2357:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2349:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 319,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2348:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2396:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2348:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2340:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 323,
													"nodeType": "ExpressionStatement",
													"src": "2340:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 325,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2413:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2423:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2413:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2434:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2413:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "2409:87:2",
												"trueBody": {
													"expression": {
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 330,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2437:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 331,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2446:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2454:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2446:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 334,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2493:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2445:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2437:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"nodeType": "ExpressionStatement",
													"src": "2437:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 340,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2510:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2520:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2510:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2531:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2510:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 354,
												"nodeType": "IfStatement",
												"src": "2506:87:2",
												"trueBody": {
													"expression": {
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 345,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2534:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 346,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2543:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2551:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2543:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 349,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2542:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2590:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2542:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2534:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 353,
													"nodeType": "ExpressionStatement",
													"src": "2534:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 355,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2607:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2617:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2607:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2628:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2607:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 369,
												"nodeType": "IfStatement",
												"src": "2603:87:2",
												"trueBody": {
													"expression": {
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 360,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2631:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 361,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2640:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2648:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2640:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2639:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2687:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2639:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2631:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 368,
													"nodeType": "ExpressionStatement",
													"src": "2631:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 370,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2714:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2704:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2725:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2704:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "IfStatement",
												"src": "2700:87:2",
												"trueBody": {
													"expression": {
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 375,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2728:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 376,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2737:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2745:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2737:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 379,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2736:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2784:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2736:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2728:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 383,
													"nodeType": "ExpressionStatement",
													"src": "2728:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 385,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2801:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2811:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2801:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2822:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2801:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 399,
												"nodeType": "IfStatement",
												"src": "2797:87:2",
												"trueBody": {
													"expression": {
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 390,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2825:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 391,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2834:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2842:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2834:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 394,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2833:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2881:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2833:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2825:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 398,
													"nodeType": "ExpressionStatement",
													"src": "2825:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 400,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2898:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2908:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2898:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2919:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2898:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "2894:87:2",
												"trueBody": {
													"expression": {
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 405,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "2922:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 406,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "2931:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2939:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2931:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 409,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2930:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2978:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2930:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2922:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ExpressionStatement",
													"src": "2922:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 415,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2995:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2995:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3016:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2995:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "2991:87:2",
												"trueBody": {
													"expression": {
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 420,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3019:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 421,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3028:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3036:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "3028:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 424,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3027:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3075:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3027:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3019:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 428,
													"nodeType": "ExpressionStatement",
													"src": "3019:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 430,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3092:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3102:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "3092:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3113:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3092:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "3088:87:2",
												"trueBody": {
													"expression": {
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 435,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 436,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3125:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3133:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "3125:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 439,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3124:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3172:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3124:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3116:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 443,
													"nodeType": "ExpressionStatement",
													"src": "3116:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 445,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3189:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3199:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "3189:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3189:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "3185:87:2",
												"trueBody": {
													"expression": {
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 450,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 451,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3222:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3230:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "3222:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 454,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3221:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3269:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3221:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3213:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 458,
													"nodeType": "ExpressionStatement",
													"src": "3213:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 460,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3286:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3296:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "3286:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3307:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3286:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 474,
												"nodeType": "IfStatement",
												"src": "3282:87:2",
												"trueBody": {
													"expression": {
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 465,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3310:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 466,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3319:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131663661376132653366616461636234633962",
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3327:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966998872678844980032916635_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...6635"
																			},
																			"value": "0x70d869a156d2a1f6a7a2e3fadacb4c9b"
																		},
																		"src": "3319:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 469,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3318:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3366:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3318:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3310:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 473,
													"nodeType": "ExpressionStatement",
													"src": "3310:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 475,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3383:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3393:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3383:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3404:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3383:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 489,
												"nodeType": "IfStatement",
												"src": "3379:87:2",
												"trueBody": {
													"expression": {
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 480,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3407:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 481,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3416:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3424:34:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3416:42:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 484,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3415:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3463:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3415:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3407:59:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 488,
													"nodeType": "ExpressionStatement",
													"src": "3407:59:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 490,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3480:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3490:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3480:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3501:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3480:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "3476:86:2",
												"trueBody": {
													"expression": {
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 495,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3504:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 496,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3513:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3521:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3513:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 499,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3512:43:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3559:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3512:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3504:58:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 503,
													"nodeType": "ExpressionStatement",
													"src": "3504:58:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 505,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3576:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3586:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3576:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3597:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3576:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 519,
												"nodeType": "IfStatement",
												"src": "3572:85:2",
												"trueBody": {
													"expression": {
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 510,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3600:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 511,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3609:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3617:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3609:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 514,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3608:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3654:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3608:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3600:57:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 518,
													"nodeType": "ExpressionStatement",
													"src": "3600:57:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 520,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3671:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3681:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3671:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3692:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3671:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 534,
												"nodeType": "IfStatement",
												"src": "3667:83:2",
												"trueBody": {
													"expression": {
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 525,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3695:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 526,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3704:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3712:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3704:38:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 529,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3703:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3747:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3703:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3695:55:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 533,
													"nodeType": "ExpressionStatement",
													"src": "3695:55:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 535,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3764:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3764:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3785:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3764:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "3760:78:2",
												"trueBody": {
													"expression": {
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 540,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "3788:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 247,
																			"src": "3797:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3805:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3797:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 544,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3796:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3835:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3796:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3788:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 548,
													"nodeType": "ExpressionStatement",
													"src": "3788:50:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "3853:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3860:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3853:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 564,
												"nodeType": "IfStatement",
												"src": "3849:72:2",
												"trueBody": {
													"id": 563,
													"nodeType": "Block",
													"src": "3863:58:2",
													"statements": [
														{
															"expression": {
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 553,
																	"name": "ratio",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "3877:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"arguments": [
																				{
																					"id": 556,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3890:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 555,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "3890:7:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					}
																				],
																				"id": 554,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "3885:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3885:13:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint256",
																				"typeString": "type(uint256)"
																			}
																		},
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3899:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "3885:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 559,
																		"name": "ratio",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 247,
																		"src": "3905:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3885:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3877:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 562,
															"nodeType": "ExpressionStatement",
															"src": "3877:33:2"
														}
													]
												}
											},
											{
												"assignments": [
													566
												],
												"declarations": [
													{
														"constant": false,
														"id": 566,
														"mutability": "mutable",
														"name": "shifted",
														"nameLocation": "3939:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "3931:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3931:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 567,
														"name": "ratio",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "3949:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">>",
													"rightExpression": {
														"hexValue": "3332",
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3958:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3949:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3931:29:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "shifted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "3978:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3994:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 574,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "3994:7:2",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			}
																		],
																		"id": 573,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3989:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3989:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint160",
																		"typeString": "type(uint160)"
																	}
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4003:3:2",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3989:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "3978:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206f766572666c6f77",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4008:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8578a1db42e71a0d8c58dc40be174439f4f08fc99d263720fae7f8a56294a565",
																"typeString": "literal_string \"Price overflow\""
															},
															"value": "Price overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8578a1db42e71a0d8c58dc40be174439f4f08fc99d263720fae7f8a56294a565",
																"typeString": "literal_string \"Price overflow\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3970:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3970:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "3970:55:2"
											},
											{
												"expression": {
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 582,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "4035:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 585,
																"name": "shifted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "4058:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4050:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 583,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "4050:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4050:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "4035:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 588,
												"nodeType": "ExpressionStatement",
												"src": "4035:31:2"
											}
										]
									},
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nameLocation": "1557:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1582:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1576:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 200,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1576:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1575:12:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1619:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "1611:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 203,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:22:2"
									},
									"scope": 591,
									"src": "1548:2525:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1633,
							"src": "1423:2652:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVaultToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 612,
							"linearizedBaseContracts": [
								612
							],
							"name": "IVaultToken",
							"nameLocation": "4282:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4309:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:2:2"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4346:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4345:9:2"
									},
									"scope": 612,
									"src": "4300:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f657a7fe",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "vaultTokenId",
									"nameLocation": "4369:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4381:2:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "4407:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4406:9:2"
									},
									"scope": 612,
									"src": "4360:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791b98bc",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positionManager",
									"nameLocation": "4430:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4445:2:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "4471:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:9:2"
									},
									"scope": 612,
									"src": "4421:59:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3a924d5b",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "v3Pool",
									"nameLocation": "4494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4500:2:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "4526:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:9:2"
									},
									"scope": 612,
									"src": "4485:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1633,
							"src": "4272:265:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "INonfungiblePositionManager",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 642,
							"linearizedBaseContracts": [
								642
							],
							"name": "INonfungiblePositionManager",
							"nameLocation": "4549:27:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "99fbab88",
									"id": 641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "4592:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4602:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4601:17:2"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "4686:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 616,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "4679:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4713:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4705:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4705:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "4743:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4735:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "4771:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4763:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4798:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4791:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 624,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "4791:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "4821:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4815:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 626,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4815:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "4850:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4844:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 628,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4844:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4881:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4873:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 630,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "4912:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4904:32:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4904:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "4958:24:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4950:32:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4950:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5004:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "4996:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 636,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4996:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5037:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "5029:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 638,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4665:393:2"
									},
									"scope": 642,
									"src": "4583:476:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1633,
							"src": "4539:522:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 660,
							"linearizedBaseContracts": [
								660
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "5073:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3850c7bd",
									"id": 659,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "5103:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5108:2:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "5179:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5171:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 644,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "5211:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5205:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 646,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "5205:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "5236:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5229:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 648,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5229:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "5273:22:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5266:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 650,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5266:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "5316:26:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5309:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 652,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5309:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "5362:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5356:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 654,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5356:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "5392:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "5387:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5387:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5157:253:2"
									},
									"scope": 660,
									"src": "5094:317:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1633,
							"src": "5063:350:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 661,
										"name": "Ownable",
										"nameLocations": [
											"5622:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1745,
										"src": "5622:7:2"
									},
									"id": 662,
									"nodeType": "InheritanceSpecifier",
									"src": "5622:7:2"
								}
							],
							"canonicalName": "OracleManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1632,
							"linearizedBaseContracts": [
								1632,
								1745,
								2097
							],
							"name": "OracleManager",
							"nameLocation": "5605:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OracleManager.OracleData",
									"id": 673,
									"members": [
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "primaryAggregator",
											"nameLocation": "5672:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 673,
											"src": "5664:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 663,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5664:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 666,
											"mutability": "mutable",
											"name": "fallbackAggregator",
											"nameLocation": "5707:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 673,
											"src": "5699:26:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 665,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5699:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "useFallbackIfError",
											"nameLocation": "5740:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 673,
											"src": "5735:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 667,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "5735:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 670,
											"mutability": "mutable",
											"name": "decimalsOverride",
											"nameLocation": "5774:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 673,
											"src": "5768:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 669,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5768:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 672,
											"mutability": "mutable",
											"name": "isVaultToken",
											"nameLocation": "5805:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 673,
											"src": "5800:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 671,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "5800:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OracleData",
									"nameLocation": "5643:10:2",
									"nodeType": "StructDefinition",
									"scope": 1632,
									"src": "5636:188:2",
									"visibility": "public"
								},
								{
									"canonicalName": "OracleManager.VaultUnderlyingFeeds",
									"id": 684,
									"members": [
										{
											"constant": false,
											"id": 675,
											"mutability": "mutable",
											"name": "token0Aggregator",
											"nameLocation": "5876:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 684,
											"src": "5868:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 674,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5868:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 677,
											"mutability": "mutable",
											"name": "token1Aggregator",
											"nameLocation": "5910:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 684,
											"src": "5902:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 676,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5902:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 679,
											"mutability": "mutable",
											"name": "token0Decimals",
											"nameLocation": "5942:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 684,
											"src": "5936:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 678,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5936:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 681,
											"mutability": "mutable",
											"name": "token1Decimals",
											"nameLocation": "5972:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 684,
											"src": "5966:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 680,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "5966:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 683,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "6001:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 684,
											"src": "5996:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 682,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "5996:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VaultUnderlyingFeeds",
									"nameLocation": "5837:20:2",
									"nodeType": "StructDefinition",
									"scope": 1632,
									"src": "5830:184:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "067a4b06",
									"id": 689,
									"mutability": "mutable",
									"name": "oracleConfigs",
									"nameLocation": "6058:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "6020:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleData_$673_storage_$",
										"typeString": "mapping(address => struct OracleManager.OracleData)"
									},
									"typeName": {
										"id": 688,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 685,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6028:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6020:30:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleData_$673_storage_$",
											"typeString": "mapping(address => struct OracleManager.OracleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 687,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 686,
												"name": "OracleData",
												"nameLocations": [
													"6039:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 673,
												"src": "6039:10:2"
											},
											"referencedDeclaration": 673,
											"src": "6039:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_OracleData_$673_storage_ptr",
												"typeString": "struct OracleManager.OracleData"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7f4a3102",
									"id": 694,
									"mutability": "mutable",
									"name": "vaultFeeds",
									"nameLocation": "6125:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1632,
									"src": "6077:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VaultUnderlyingFeeds_$684_storage_$",
										"typeString": "mapping(address => struct OracleManager.VaultUnderlyingFeeds)"
									},
									"typeName": {
										"id": 693,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 690,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6085:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6077:40:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VaultUnderlyingFeeds_$684_storage_$",
											"typeString": "mapping(address => struct OracleManager.VaultUnderlyingFeeds)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 692,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 691,
												"name": "VaultUnderlyingFeeds",
												"nameLocations": [
													"6096:20:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 684,
												"src": "6096:20:2"
											},
											"referencedDeclaration": 684,
											"src": "6096:20:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_storage_ptr",
												"typeString": "struct OracleManager.VaultUnderlyingFeeds"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5be58a9eef853f8ae7393174434d0be93daad7445510f6ce6e914b2f297885b8",
									"id": 708,
									"name": "OracleConfigUpdated",
									"nameLocation": "6148:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6193:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6177:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6177:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"indexed": false,
												"mutability": "mutable",
												"name": "primaryAggregator",
												"nameLocation": "6216:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6208:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6208:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": false,
												"mutability": "mutable",
												"name": "fallbackAggregator",
												"nameLocation": "6251:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6243:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"indexed": false,
												"mutability": "mutable",
												"name": "useFallbackIfError",
												"nameLocation": "6284:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6279:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 701,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6279:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"indexed": false,
												"mutability": "mutable",
												"name": "decimalsOverride",
												"nameLocation": "6318:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6312:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 703,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6312:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"indexed": false,
												"mutability": "mutable",
												"name": "isVaultToken",
												"nameLocation": "6349:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6344:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 705,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6344:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6167:200:2"
									},
									"src": "6142:226:2"
								},
								{
									"anonymous": false,
									"eventSelector": "2fb5936f285b062770ba9aa206ca7282ebb8f84ad2eda1c664b3059e9c62c1ba",
									"id": 720,
									"name": "VaultUnderlyingFeedsUpdated",
									"nameLocation": "6380:27:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"indexed": true,
												"mutability": "mutable",
												"name": "vaultToken",
												"nameLocation": "6433:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6417:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6417:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"indexed": false,
												"mutability": "mutable",
												"name": "token0Aggregator",
												"nameLocation": "6461:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6453:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": false,
												"mutability": "mutable",
												"name": "token1Aggregator",
												"nameLocation": "6495:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6487:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": false,
												"mutability": "mutable",
												"name": "token0Decimals",
												"nameLocation": "6527:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6521:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 715,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6521:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"indexed": false,
												"mutability": "mutable",
												"name": "token1Decimals",
												"nameLocation": "6557:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "6551:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 717,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6551:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6407:170:2"
									},
									"src": "6374:204:2"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "6618:126:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 726,
																"name": "initialOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "6636:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6660:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6652:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 727,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6652:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6652:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6636:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c6964206f776e6572",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6664:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb",
																"typeString": "literal_string \"OracleManager: invalid owner\""
															},
															"value": "OracleManager: invalid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f23288ffc567947db393047c76f12797fffe57bf99d00995a5fbc86d1d3e94cb",
																"typeString": "literal_string \"OracleManager: invalid owner\""
															}
														],
														"id": 725,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6628:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "6628:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "6724:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 735,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "6705:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6705:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "6705:32:2"
											}
										]
									},
									"id": 740,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "6604:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "6596:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6595:22:2"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6618:0:2"
									},
									"scope": 1632,
									"src": "6584:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "6979:721:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 758,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 742,
																"src": "6997:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7014:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7006:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 759,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7006:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7006:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6997:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c696420746f6b656e",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7018:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1",
																"typeString": "literal_string \"OracleManager: invalid token\""
															},
															"value": "OracleManager: invalid token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c8d2defeb9d229924f54eb70cbe9b228a2c824a0a520c0673f29cda2947c3a1",
																"typeString": "literal_string \"OracleManager: invalid token\""
															}
														],
														"id": 757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6989:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6989:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "6989:60:2"
											},
											{
												"condition": {
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7063:13:2",
													"subExpression": {
														"id": 767,
														"name": "isVaultToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "7064:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 780,
												"nodeType": "IfStatement",
												"src": "7059:136:2",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "7078:117:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 770,
																			"name": "primaryAggregator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 744,
																			"src": "7100:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7129:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 772,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7121:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 771,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7121:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7121:10:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "7100:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2061676772656761746f7220726571756972656420666f72206e6f6e2d7661756c74",
																		"id": 776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7133:50:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21",
																			"typeString": "literal_string \"OracleManager: aggregator required for non-vault\""
																		},
																		"value": "OracleManager: aggregator required for non-vault"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_59513828685b011e265c26899dd6b1c68c1287859cdfa1901763e3d967b36c21",
																			"typeString": "literal_string \"OracleManager: aggregator required for non-vault\""
																		}
																	],
																	"id": 769,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7092:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7092:92:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "7092:92:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 781,
															"name": "oracleConfigs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "7205:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleData_$673_storage_$",
																"typeString": "mapping(address => struct OracleManager.OracleData storage ref)"
															}
														},
														"id": 783,
														"indexExpression": {
															"id": 782,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7219:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7205:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OracleData_$673_storage",
															"typeString": "struct OracleManager.OracleData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 785,
																"name": "primaryAggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "7272:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 786,
																"name": "fallbackAggregator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "7323:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 787,
																"name": "useFallbackIfErr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "7375:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 788,
																"name": "decimalsOvr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "7423:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 789,
																"name": "isVaultToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 752,
																"src": "7462:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 784,
															"name": "OracleData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "7228:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_OracleData_$673_storage_ptr_$",
																"typeString": "type(struct OracleManager.OracleData storage pointer)"
															}
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"7253:17:2",
															"7303:18:2",
															"7355:18:2",
															"7405:16:2",
															"7448:12:2"
														],
														"names": [
															"primaryAggregator",
															"fallbackAggregator",
															"useFallbackIfError",
															"decimalsOverride",
															"isVaultToken"
														],
														"nodeType": "FunctionCall",
														"src": "7228:257:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
															"typeString": "struct OracleManager.OracleData memory"
														}
													},
													"src": "7205:280:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OracleData_$673_storage",
														"typeString": "struct OracleManager.OracleData storage ref"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "7205:280:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 794,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "7534:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "primaryAggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "7553:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "fallbackAggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "7584:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "useFallbackIfErr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "7616:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 798,
															"name": "decimalsOvr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "7646:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 799,
															"name": "isVaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "7671:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 793,
														"name": "OracleConfigUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "7501:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_bool_$_t_uint8_$_t_bool_$returns$__$",
															"typeString": "function (address,address,address,bool,uint8,bool)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7501:192:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "EmitStatement",
												"src": "7496:197:2"
											}
										]
									},
									"functionSelector": "f2ac1ec5",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 755,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 754,
												"name": "onlyOwner",
												"nameLocations": [
													"6969:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1664,
												"src": "6969:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "6969:9:2"
										}
									],
									"name": "setOracleConfig",
									"nameLocation": "6759:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6792:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "6784:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "primaryAggregator",
												"nameLocation": "6815:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "6807:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6807:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "fallbackAggregator",
												"nameLocation": "6850:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "6842:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "useFallbackIfErr",
												"nameLocation": "6883:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "6878:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6878:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "decimalsOvr",
												"nameLocation": "6915:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "6909:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 749,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6909:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "isVaultToken",
												"nameLocation": "6941:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "6936:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 751,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6936:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6774:185:2"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6979:0:2"
									},
									"scope": 1632,
									"src": "6750:950:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "7896:510:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 819,
																"name": "vaultToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "7914:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7936:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7928:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 820,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7928:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7928:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7914:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c6964207661756c74546f6b656e",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7940:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190",
																"typeString": "literal_string \"OracleManager: invalid vaultToken\""
															},
															"value": "OracleManager: invalid vaultToken"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4db1bb832a8d3b38335515f1478298dc4d226f6b61c0e0953b9dd79cb5ab3190",
																"typeString": "literal_string \"OracleManager: invalid vaultToken\""
															}
														],
														"id": 818,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7906:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7906:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "7906:70:2"
											},
											{
												"expression": {
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 828,
															"name": "vaultFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "7987:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VaultUnderlyingFeeds_$684_storage_$",
																"typeString": "mapping(address => struct OracleManager.VaultUnderlyingFeeds storage ref)"
															}
														},
														"id": 830,
														"indexExpression": {
															"id": 829,
															"name": "vaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "7998:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7987:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_storage",
															"typeString": "struct OracleManager.VaultUnderlyingFeeds storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 832,
																"name": "token0Agg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "8065:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 833,
																"name": "token1Agg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "8106:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 834,
																"name": "token0Dec",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "8145:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 835,
																"name": "token1Dec",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "8184:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"hexValue": "74727565",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8215:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 831,
															"name": "VaultUnderlyingFeeds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "8012:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_VaultUnderlyingFeeds_$684_storage_ptr_$",
																"typeString": "type(struct OracleManager.VaultUnderlyingFeeds storage pointer)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"8047:16:2",
															"8088:16:2",
															"8129:14:2",
															"8168:14:2",
															"8207:6:2"
														],
														"names": [
															"token0Aggregator",
															"token1Aggregator",
															"token0Decimals",
															"token1Decimals",
															"exists"
														],
														"nodeType": "FunctionCall",
														"src": "8012:218:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
															"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
														}
													},
													"src": "7987:243:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_storage",
														"typeString": "struct OracleManager.VaultUnderlyingFeeds storage ref"
													}
												},
												"id": 839,
												"nodeType": "ExpressionStatement",
												"src": "7987:243:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 841,
															"name": "vaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "8287:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "token0Agg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "8311:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 843,
															"name": "token1Agg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "8334:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "token0Dec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "8357:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 845,
															"name": "token1Dec",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "8380:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 840,
														"name": "VaultUnderlyingFeedsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 720,
														"src": "8246:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint8_$_t_uint8_$returns$__$",
															"typeString": "function (address,address,address,uint8,uint8)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8246:153:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "EmitStatement",
												"src": "8241:158:2"
											}
										]
									},
									"functionSelector": "9b05fc75",
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 816,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 815,
												"name": "onlyOwner",
												"nameLocations": [
													"7886:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1664,
												"src": "7886:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7886:9:2"
										}
									],
									"name": "setVaultUnderlyingFeeds",
									"nameLocation": "7715:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "vaultToken",
												"nameLocation": "7756:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "7748:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7748:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "token0Agg",
												"nameLocation": "7784:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "7776:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7776:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "token1Agg",
												"nameLocation": "7811:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "7803:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "token0Dec",
												"nameLocation": "7836:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "7830:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 810,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7830:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "token1Dec",
												"nameLocation": "7861:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "7855:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 812,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7855:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7738:138:2"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7896:0:2"
									},
									"scope": 1632,
									"src": "7706:700:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "8499:500:2",
										"statements": [
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "cfg",
														"nameLocation": "8527:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 915,
														"src": "8509:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
															"typeString": "struct OracleManager.OracleData"
														},
														"typeName": {
															"id": 859,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 858,
																"name": "OracleData",
																"nameLocations": [
																	"8509:10:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 673,
																"src": "8509:10:2"
															},
															"referencedDeclaration": 673,
															"src": "8509:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OracleData_$673_storage_ptr",
																"typeString": "struct OracleManager.OracleData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"baseExpression": {
														"id": 861,
														"name": "oracleConfigs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8533:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_OracleData_$673_storage_$",
															"typeString": "mapping(address => struct OracleManager.OracleData storage ref)"
														}
													},
													"id": 863,
													"indexExpression": {
														"id": 862,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "8547:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8533:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OracleData_$673_storage",
														"typeString": "struct OracleManager.OracleData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8509:44:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 866,
																		"name": "cfg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "8571:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																			"typeString": "struct OracleManager.OracleData memory"
																		}
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8575:17:2",
																	"memberName": "primaryAggregator",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 664,
																	"src": "8571:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8604:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8596:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 868,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8596:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8596:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8571:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"expression": {
																	"id": 873,
																	"name": "cfg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "8610:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																		"typeString": "struct OracleManager.OracleData memory"
																	}
																},
																"id": 874,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8614:12:2",
																"memberName": "isVaultToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 672,
																"src": "8610:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8571:55:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a206e6f2061676772656761746f722f7661756c74206c6f676963",
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95de5b676a898fea71d31b00d4044892258df276cb87d7002a9fc7e5e962e715",
																"typeString": "literal_string \"OracleManager: no aggregator/vault logic\""
															},
															"value": "OracleManager: no aggregator/vault logic"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95de5b676a898fea71d31b00d4044892258df276cb87d7002a9fc7e5e962e715",
																"typeString": "literal_string \"OracleManager: no aggregator/vault logic\""
															}
														],
														"id": 865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8563:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8563:108:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 878,
												"nodeType": "ExpressionStatement",
												"src": "8563:108:2"
											},
											{
												"condition": {
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8686:17:2",
													"subExpression": {
														"expression": {
															"id": 879,
															"name": "cfg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "8687:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																"typeString": "struct OracleManager.OracleData memory"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8691:12:2",
														"memberName": "isVaultToken",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "8687:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 913,
													"nodeType": "Block",
													"src": "8780:213:2",
													"statements": [
														{
															"assignments": [
																893
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 893,
																	"mutability": "mutable",
																	"name": "vf",
																	"nameLocation": "8822:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 913,
																	"src": "8794:30:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
																		"typeString": "struct OracleManager.VaultUnderlyingFeeds"
																	},
																	"typeName": {
																		"id": 892,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 891,
																			"name": "VaultUnderlyingFeeds",
																			"nameLocations": [
																				"8794:20:2"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 684,
																			"src": "8794:20:2"
																		},
																		"referencedDeclaration": 684,
																		"src": "8794:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_storage_ptr",
																			"typeString": "struct OracleManager.VaultUnderlyingFeeds"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 897,
															"initialValue": {
																"baseExpression": {
																	"id": 894,
																	"name": "vaultFeeds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "8827:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_VaultUnderlyingFeeds_$684_storage_$",
																		"typeString": "mapping(address => struct OracleManager.VaultUnderlyingFeeds storage ref)"
																	}
																},
																"id": 896,
																"indexExpression": {
																	"id": 895,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "8838:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8827:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_storage",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8794:50:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 899,
																			"name": "vf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "8866:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
																				"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8869:6:2",
																		"memberName": "exists",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 683,
																		"src": "8866:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a207661756c74206665656473206e6f7420736574",
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8877:36:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0",
																			"typeString": "literal_string \"OracleManager: vault feeds not set\""
																		},
																		"value": "OracleManager: vault feeds not set"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b3c724151bda60312226d4ddf9b52f334912b7b3d7fb9ef7c561e9c71bee07c0",
																			"typeString": "literal_string \"OracleManager: vault feeds not set\""
																		}
																	],
																	"id": 898,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8858:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8858:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 903,
															"nodeType": "ExpressionStatement",
															"src": "8858:56:2"
														},
														{
															"expression": {
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 904,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "8929:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 905,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "8936:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 906,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "8928:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 908,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "8972:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 909,
																			"name": "vf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "8979:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
																				"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
																				"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																			}
																		],
																		"id": 907,
																		"name": "_computeVaultTokenPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "8948:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_VaultUnderlyingFeeds_$684_memory_ptr_$returns$_t_uint256_$_t_uint8_$",
																			"typeString": "function (address,struct OracleManager.VaultUnderlyingFeeds memory) view returns (uint256,uint8)"
																		}
																	},
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8948:34:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"src": "8928:54:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 912,
															"nodeType": "ExpressionStatement",
															"src": "8928:54:2"
														}
													]
												},
												"id": 914,
												"nodeType": "IfStatement",
												"src": "8682:311:2",
												"trueBody": {
													"id": 890,
													"nodeType": "Block",
													"src": "8705:69:2",
													"statements": [
														{
															"expression": {
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 882,
																			"name": "price",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 854,
																			"src": "8720:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 883,
																			"name": "decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "8727:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "8719:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 886,
																			"name": "cfg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "8759:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																				"typeString": "struct OracleManager.OracleData memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																				"typeString": "struct OracleManager.OracleData memory"
																			}
																		],
																		"id": 885,
																		"name": "_getPriceFromConfig",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "8739:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_OracleData_$673_memory_ptr_$returns$_t_uint256_$_t_uint8_$",
																			"typeString": "function (struct OracleManager.OracleData memory) view returns (uint256,uint8)"
																		}
																	},
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8739:24:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																		"typeString": "tuple(uint256,uint8)"
																	}
																},
																"src": "8719:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 889,
															"nodeType": "ExpressionStatement",
															"src": "8719:44:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "41976e09",
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nameLocation": "8421:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8438:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "8430:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8430:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8429:15:2"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "8476:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "8468:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8468:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "8489:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "8483:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 855,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "8483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8467:31:2"
									},
									"scope": 1632,
									"src": "8412:587:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 985,
										"nodeType": "Block",
										"src": "9310:589:2",
										"statements": [
											{
												"assignments": [
													927,
													929,
													931
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "okPrimary",
														"nameLocation": "9326:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "9321:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 926,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9321:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "9345:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "9337:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 928,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9337:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "d",
														"nameLocation": "9354:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 985,
														"src": "9348:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 930,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "9348:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 933,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "9381:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																	"typeString": "struct OracleManager.OracleData memory"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9385:17:2",
															"memberName": "primaryAggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 664,
															"src": "9381:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 935,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "9404:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																	"typeString": "struct OracleManager.OracleData memory"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9408:16:2",
															"memberName": "decimalsOverride",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 670,
															"src": "9404:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 932,
														"name": "_tryGetChainlinkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "9359:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$_t_uint256_$_t_uint8_$",
															"typeString": "function (address,uint8) view returns (bool,uint256,uint8)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9359:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint8_$",
														"typeString": "tuple(bool,uint256,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9320:105:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9439:10:2",
															"subExpression": {
																"id": 939,
																"name": "okPrimary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "9440:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"expression": {
																"id": 941,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "9453:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																	"typeString": "struct OracleManager.OracleData memory"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9457:18:2",
															"memberName": "useFallbackIfError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 668,
															"src": "9453:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9439:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 944,
																"name": "cfg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 919,
																"src": "9479:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																	"typeString": "struct OracleManager.OracleData memory"
																}
															},
															"id": 945,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9483:18:2",
															"memberName": "fallbackAggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 666,
															"src": "9479:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9513:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9505:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 946,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9505:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9505:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "9479:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9439:76:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 975,
												"nodeType": "IfStatement",
												"src": "9435:365:2",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "9517:283:2",
													"statements": [
														{
															"assignments": [
																953,
																955,
																957
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 953,
																	"mutability": "mutable",
																	"name": "okFallback",
																	"nameLocation": "9537:10:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 974,
																	"src": "9532:15:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 952,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "9532:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 955,
																	"mutability": "mutable",
																	"name": "pFallback",
																	"nameLocation": "9557:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 974,
																	"src": "9549:17:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 954,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9549:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 957,
																	"mutability": "mutable",
																	"name": "dFallback",
																	"nameLocation": "9574:9:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 974,
																	"src": "9568:15:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 956,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "9568:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 964,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 959,
																			"name": "cfg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "9625:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																				"typeString": "struct OracleManager.OracleData memory"
																			}
																		},
																		"id": 960,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9629:18:2",
																		"memberName": "fallbackAggregator",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 666,
																		"src": "9625:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 961,
																			"name": "cfg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 919,
																			"src": "9649:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
																				"typeString": "struct OracleManager.OracleData memory"
																			}
																		},
																		"id": 962,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9653:16:2",
																		"memberName": "decimalsOverride",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 670,
																		"src": "9649:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 958,
																	"name": "_tryGetChainlinkPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "9603:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$_t_uint256_$_t_uint8_$",
																		"typeString": "function (address,uint8) view returns (bool,uint256,uint8)"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9603:67:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint8_$",
																	"typeString": "tuple(bool,uint256,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9531:139:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 966,
																		"name": "okFallback",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "9692:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f7261636c654d616e616765723a2066616c6c6261636b2061676772656761746f72206661696c",
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9704:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536",
																			"typeString": "literal_string \"OracleManager: fallback aggregator fail\""
																		},
																		"value": "OracleManager: fallback aggregator fail"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_133ef05ad447c5bcba1198a11e2a55d76c81e84455a31560caf5747e94657536",
																			"typeString": "literal_string \"OracleManager: fallback aggregator fail\""
																		}
																	],
																	"id": 965,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9684:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9684:62:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 969,
															"nodeType": "ExpressionStatement",
															"src": "9684:62:2"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 970,
																		"name": "pFallback",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "9768:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 971,
																		"name": "dFallback",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "9779:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 972,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9767:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
																	"typeString": "tuple(uint256,uint8)"
																}
															},
															"functionReturnParameters": 925,
															"id": 973,
															"nodeType": "Return",
															"src": "9760:29:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 977,
															"name": "okPrimary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "9817:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a207072696d6172792061676772656761746f72206661696c",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9828:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d",
																"typeString": "literal_string \"OracleManager: primary aggregator fail\""
															},
															"value": "OracleManager: primary aggregator fail"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6907773fa59032ebf7b25d45b07a571f1e527552eaa0217d0a3d4b5e2cf1889d",
																"typeString": "literal_string \"OracleManager: primary aggregator fail\""
															}
														],
														"id": 976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9809:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "9809:60:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 981,
															"name": "p",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "9887:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 982,
															"name": "d",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "9890:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 983,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9886:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
														"typeString": "tuple(uint256,uint8)"
													}
												},
												"functionReturnParameters": 925,
												"id": 984,
												"nodeType": "Return",
												"src": "9879:13:2"
											}
										]
									},
									"id": 986,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPriceFromConfig",
									"nameLocation": "9185:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "cfg",
												"nameLocation": "9223:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9205:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OracleData_$673_memory_ptr",
													"typeString": "struct OracleManager.OracleData"
												},
												"typeName": {
													"id": 918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 917,
														"name": "OracleData",
														"nameLocations": [
															"9205:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 673,
														"src": "9205:10:2"
													},
													"referencedDeclaration": 673,
													"src": "9205:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OracleData_$673_storage_ptr",
														"typeString": "struct OracleManager.OracleData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9204:23:2"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "9283:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9275:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9275:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "9296:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "9290:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 923,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9290:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9274:31:2"
									},
									"scope": 1632,
									"src": "9176:723:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "OracleManager.AggregatorPair",
									"id": 995,
									"members": [
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "agg0",
											"nameLocation": "9945:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 995,
											"src": "9937:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 987,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9937:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "agg1",
											"nameLocation": "9967:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 995,
											"src": "9959:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 989,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "9959:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "dec0",
											"nameLocation": "9987:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 995,
											"src": "9981:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 991,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "9981:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "dec1",
											"nameLocation": "10007:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 995,
											"src": "10001:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 993,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "10001:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AggregatorPair",
									"nameLocation": "9912:14:2",
									"nodeType": "StructDefinition",
									"scope": 1632,
									"src": "9905:113:2",
									"visibility": "public"
								},
								{
									"canonicalName": "OracleManager.PositionResult",
									"id": 1010,
									"members": [
										{
											"constant": false,
											"id": 997,
											"mutability": "mutable",
											"name": "token0",
											"nameLocation": "10064:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1010,
											"src": "10056:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 996,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10056:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 999,
											"mutability": "mutable",
											"name": "token1",
											"nameLocation": "10088:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 1010,
											"src": "10080:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 998,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "10080:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1001,
											"mutability": "mutable",
											"name": "tickLower",
											"nameLocation": "10110:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 1010,
											"src": "10104:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1000,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "10104:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1003,
											"mutability": "mutable",
											"name": "tickUpper",
											"nameLocation": "10135:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 1010,
											"src": "10129:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1002,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "10129:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1005,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "10162:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 1010,
											"src": "10154:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1004,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "10154:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1007,
											"mutability": "mutable",
											"name": "owed0",
											"nameLocation": "10189:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1010,
											"src": "10181:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1006,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "10181:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1009,
											"mutability": "mutable",
											"name": "owed1",
											"nameLocation": "10212:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 1010,
											"src": "10204:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1008,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "10204:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PositionResult",
									"nameLocation": "10031:14:2",
									"nodeType": "StructDefinition",
									"scope": 1632,
									"src": "10024:200:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "10397:945:2",
										"statements": [
											{
												"assignments": [
													1023,
													1025,
													1027
												],
												"declarations": [
													{
														"constant": false,
														"id": 1023,
														"mutability": "mutable",
														"name": "totalShares",
														"nameLocation": "10416:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10408:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1022,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10408:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1025,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "10437:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10429:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1024,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10429:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1027,
														"mutability": "mutable",
														"name": "posMgr",
														"nameLocation": "10454:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10446:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1026,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10446:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"arguments": [
														{
															"id": 1029,
															"name": "vaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "10480:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1028,
														"name": "_fetchVaultInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "10464:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_address_$",
															"typeString": "function (address) view returns (uint256,uint256,address)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10464:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10407:84:2"
											},
											{
												"assignments": [
													1034
												],
												"declarations": [
													{
														"constant": false,
														"id": 1034,
														"mutability": "mutable",
														"name": "pos",
														"nameLocation": "10524:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10502:25:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
															"typeString": "struct OracleManager.PositionResult"
														},
														"typeName": {
															"id": 1033,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1032,
																"name": "PositionResult",
																"nameLocations": [
																	"10502:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1010,
																"src": "10502:14:2"
															},
															"referencedDeclaration": 1010,
															"src": "10502:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionResult_$1010_storage_ptr",
																"typeString": "struct OracleManager.PositionResult"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1039,
												"initialValue": {
													"arguments": [
														{
															"id": 1036,
															"name": "posMgr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "10549:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1025,
															"src": "10557:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1035,
														"name": "_fetchPositionData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "10530:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_struct$_PositionResult_$1010_memory_ptr_$",
															"typeString": "function (address,uint256) view returns (struct OracleManager.PositionResult memory)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10530:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
														"typeString": "struct OracleManager.PositionResult memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10502:63:2"
											},
											{
												"assignments": [
													1041,
													1043
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "10585:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10577:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1040,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "10577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1043,
														"mutability": "mutable",
														"name": "tick",
														"nameLocation": "10605:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10599:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1042,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "10599:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 1046,
																			"name": "vaultToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1012,
																			"src": "10645:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1045,
																		"name": "IVaultToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "10633:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IVaultToken_$612_$",
																			"typeString": "type(contract IVaultToken)"
																		}
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10633:23:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVaultToken_$612",
																		"typeString": "contract IVaultToken"
																	}
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10657:6:2",
																"memberName": "v3Pool",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 611,
																"src": "10633:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																	"typeString": "function () view external returns (address)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10633:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1044,
														"name": "_getPoolSqrtAndTick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "10613:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint160_$_t_int24_$",
															"typeString": "function (address) view returns (uint160,int24)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10613:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$",
														"typeString": "tuple(uint160,int24)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10576:90:2"
											},
											{
												"assignments": [
													1053,
													1055
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "amtActive0",
														"nameLocation": "10685:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10677:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10677:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "amtActive1",
														"nameLocation": "10705:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10697:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1054,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10697:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"arguments": [
														{
															"id": 1057,
															"name": "sqrtPriceX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "10757:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 1058,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "10783:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																	"typeString": "struct OracleManager.PositionResult memory"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10787:9:2",
															"memberName": "tickLower",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1001,
															"src": "10783:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"expression": {
																"id": 1060,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "10810:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																	"typeString": "struct OracleManager.PositionResult memory"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10814:9:2",
															"memberName": "tickUpper",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1003,
															"src": "10810:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														{
															"expression": {
																"id": 1062,
																"name": "pos",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "10837:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																	"typeString": "struct OracleManager.PositionResult memory"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10841:9:2",
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1005,
															"src": "10837:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 1056,
														"name": "_computeLiquidityAmounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "10719:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_int24_$_t_int24_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint160,int24,int24,uint128) pure returns (uint256,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10719:141:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10676:184:2"
											},
											{
												"assignments": [
													1067
												],
												"declarations": [
													{
														"constant": false,
														"id": 1067,
														"mutability": "mutable",
														"name": "amt0",
														"nameLocation": "10879:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10871:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10871:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1072,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1068,
														"name": "amtActive0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "10886:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1069,
															"name": "pos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "10899:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																"typeString": "struct OracleManager.PositionResult memory"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10903:5:2",
														"memberName": "owed0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1007,
														"src": "10899:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "10886:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10871:37:2"
											},
											{
												"assignments": [
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "amt1",
														"nameLocation": "10926:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10918:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10918:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1075,
														"name": "amtActive1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1055,
														"src": "10933:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1076,
															"name": "pos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "10946:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																"typeString": "struct OracleManager.PositionResult memory"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10950:5:2",
														"memberName": "owed1",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1009,
														"src": "10946:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "10933:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10918:37:2"
											},
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "ap",
														"nameLocation": "10988:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10966:24:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AggregatorPair_$995_memory_ptr",
															"typeString": "struct OracleManager.AggregatorPair"
														},
														"typeName": {
															"id": 1081,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1080,
																"name": "AggregatorPair",
																"nameLocations": [
																	"10966:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 995,
																"src": "10966:14:2"
															},
															"referencedDeclaration": 995,
															"src": "10966:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AggregatorPair_$995_storage_ptr",
																"typeString": "struct OracleManager.AggregatorPair"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1084,
																"name": "vf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "11028:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11031:16:2",
															"memberName": "token0Aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 675,
															"src": "11028:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1086,
																"name": "vf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "11067:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11070:16:2",
															"memberName": "token1Aggregator",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 677,
															"src": "11067:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1088,
																"name": "vf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "11106:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																}
															},
															"id": 1089,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11109:14:2",
															"memberName": "token0Decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 679,
															"src": "11106:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"expression": {
																"id": 1090,
																"name": "vf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "11143:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
																	"typeString": "struct OracleManager.VaultUnderlyingFeeds memory"
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11146:14:2",
															"memberName": "token1Decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 681,
															"src": "11143:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1083,
														"name": "AggregatorPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "10993:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_AggregatorPair_$995_storage_ptr_$",
															"typeString": "type(struct OracleManager.AggregatorPair storage pointer)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"11022:4:2",
														"11061:4:2",
														"11100:4:2",
														"11137:4:2"
													],
													"names": [
														"agg0",
														"agg1",
														"dec0",
														"dec1"
													],
													"nodeType": "FunctionCall",
													"src": "10993:178:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AggregatorPair_$995_memory_ptr",
														"typeString": "struct OracleManager.AggregatorPair memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10966:205:2"
											},
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "totalValue",
														"nameLocation": "11190:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "11182:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11182:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1101,
												"initialValue": {
													"arguments": [
														{
															"id": 1097,
															"name": "amt0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "11230:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1098,
															"name": "amt1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "11236:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1099,
															"name": "ap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "11242:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AggregatorPair_$995_memory_ptr",
																"typeString": "struct OracleManager.AggregatorPair memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_AggregatorPair_$995_memory_ptr",
																"typeString": "struct OracleManager.AggregatorPair memory"
															}
														],
														"id": 1096,
														"name": "_convertVaultTokensToValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "11203:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_struct$_AggregatorPair_$995_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,struct OracleManager.AggregatorPair memory) view returns (uint256)"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11203:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11182:63:2"
											},
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1102,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "11256:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1103,
															"name": "totalValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "11264:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1104,
																			"name": "totalShares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "11278:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11293:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11278:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1108,
																		"name": "totalShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1023,
																		"src": "11301:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "11278:34:2",
																	"trueExpression": {
																		"hexValue": "31",
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11297:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1110,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11277:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11264:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11256:57:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "11256:57:2"
											},
											{
												"expression": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1114,
														"name": "decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "11323:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "38",
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11334:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_8_by_1",
															"typeString": "int_const 8"
														},
														"value": "8"
													},
													"src": "11323:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "11323:12:2"
											}
										]
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeVaultTokenPrice",
									"nameLocation": "10239:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "vaultToken",
												"nameLocation": "10271:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10263:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "vf",
												"nameLocation": "10311:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10283:30:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_memory_ptr",
													"typeString": "struct OracleManager.VaultUnderlyingFeeds"
												},
												"typeName": {
													"id": 1014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1013,
														"name": "VaultUnderlyingFeeds",
														"nameLocations": [
															"10283:20:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 684,
														"src": "10283:20:2"
													},
													"referencedDeclaration": 684,
													"src": "10283:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_VaultUnderlyingFeeds_$684_storage_ptr",
														"typeString": "struct OracleManager.VaultUnderlyingFeeds"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10262:52:2"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "10370:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10362:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10362:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "10383:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10377:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1019,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10377:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10361:31:2"
									},
									"scope": 1632,
									"src": "10230:1112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "11498:383:2",
										"statements": [
											{
												"assignments": [
													1132
												],
												"declarations": [
													{
														"constant": false,
														"id": 1132,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "11520:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1179,
														"src": "11508:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IVaultToken_$612",
															"typeString": "contract IVaultToken"
														},
														"typeName": {
															"id": 1131,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1130,
																"name": "IVaultToken",
																"nameLocations": [
																	"11508:11:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 612,
																"src": "11508:11:2"
															},
															"referencedDeclaration": 612,
															"src": "11508:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVaultToken_$612",
																"typeString": "contract IVaultToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1136,
												"initialValue": {
													"arguments": [
														{
															"id": 1134,
															"name": "vaultToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "11536:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1133,
														"name": "IVaultToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "11524:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IVaultToken_$612_$",
															"typeString": "type(contract IVaultToken)"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11524:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IVaultToken_$612",
														"typeString": "contract IVaultToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11508:39:2"
											},
											{
												"expression": {
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1137,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1124,
														"src": "11557:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1138,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "11571:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVaultToken_$612",
																	"typeString": "contract IVaultToken"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11573:11:2",
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 596,
															"src": "11571:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11571:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11557:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "11557:29:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "11604:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11618:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11604:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a207661756c7420746f74616c537570706c793d30",
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11621:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3",
																"typeString": "literal_string \"OracleManager: vault totalSupply=0\""
															},
															"value": "OracleManager: vault totalSupply=0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5460b6abcc026de7245dd37e2bfcc5743293bc3c199ad410004485f3f7f61ca3",
																"typeString": "literal_string \"OracleManager: vault totalSupply=0\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11596:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11596:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "11596:62:2"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1150,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "11668:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1151,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "11678:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVaultToken_$612",
																	"typeString": "contract IVaultToken"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11680:12:2",
															"memberName": "vaultTokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 601,
															"src": "11678:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11678:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11668:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "11668:26:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1157,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1126,
																"src": "11712:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11723:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11712:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a206e6f204e465420696e207661756c74",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11726:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f",
																"typeString": "literal_string \"OracleManager: no NFT in vault\""
															},
															"value": "OracleManager: no NFT in vault"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66f2d4ef716508abe8faa1295b43a36031c18a870cdaa54ddb046a3796a3d05f",
																"typeString": "literal_string \"OracleManager: no NFT in vault\""
															}
														],
														"id": 1156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11704:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11704:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "ExpressionStatement",
												"src": "11704:55:2"
											},
											{
												"expression": {
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1163,
														"name": "posMgr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "11769:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1164,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "11778:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVaultToken_$612",
																	"typeString": "contract IVaultToken"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11780:15:2",
															"memberName": "positionManager",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 606,
															"src": "11778:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 1166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11778:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11769:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "11769:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1170,
																"name": "posMgr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "11815:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11833:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11825:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1171,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11825:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11825:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11815:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c696420706f736974696f6e4d6772",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11837:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3",
																"typeString": "literal_string \"OracleManager: invalid positionMgr\""
															},
															"value": "OracleManager: invalid positionMgr"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01e974ef86e47824d7a62fa5f3876574e6b57a68ff1cdd4c33f52b99c752c5b3",
																"typeString": "literal_string \"OracleManager: invalid positionMgr\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11807:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11807:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "11807:67:2"
											}
										]
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fetchVaultInfo",
									"nameLocation": "11357:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "vaultToken",
												"nameLocation": "11381:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "11373:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11372:20:2"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "11448:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "11440:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11440:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11469:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "11461:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11461:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "posMgr",
												"nameLocation": "11486:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "11478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11478:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11439:54:2"
									},
									"scope": 1632,
									"src": "11348:533:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "12026:643:2",
										"statements": [
											{
												"assignments": [
													1191,
													1193
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12042:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "12037:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1190,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12037:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1193,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "12064:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1259,
														"src": "12051:17:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1192,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12051:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1204,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1198,
																			"name": "INonfungiblePositionManager",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 642,
																			"src": "12126:27:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$642_$",
																				"typeString": "type(contract INonfungiblePositionManager)"
																			}
																		},
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "12154:9:2",
																		"memberName": "positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 641,
																		"src": "12126:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_view$_t_uint256_$returns$_t_uint96_$_t_address_$_t_address_$_t_address_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
																			"typeString": "function INonfungiblePositionManager.positions(uint256) view returns (uint96,address,address,address,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
																		}
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "12164:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "12126:46:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1201,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1184,
																	"src": "12174:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1196,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "12103:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "12107:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "12103:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12103:79:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1194,
															"name": "posMgr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1182,
															"src": "12072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12079:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "12072:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12072:120:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12036:156:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "12210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 1208,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "12233:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1207,
																"name": "_getRevertMsg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "12219:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (bytes memory) pure returns (string memory)"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12219:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12202:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12202:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "12202:37:2"
											},
											{
												"expression": {
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															null,
															{
																"expression": {
																	"id": 1212,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "12292:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12296:6:2",
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 997,
																"src": "12292:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 1215,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "12316:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 1216,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12320:6:2",
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 999,
																"src": "12316:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															null,
															{
																"expression": {
																	"id": 1217,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "12354:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12358:9:2",
																"memberName": "tickLower",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1001,
																"src": "12354:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"expression": {
																	"id": 1219,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "12381:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12385:9:2",
																"memberName": "tickUpper",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1003,
																"src": "12381:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"expression": {
																	"id": 1221,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "12408:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12412:9:2",
																"memberName": "liquidity",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1005,
																"src": "12408:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															null,
															null,
															{
																"expression": {
																	"id": 1223,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "12463:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12467:5:2",
																"memberName": "owed0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1007,
																"src": "12463:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															{
																"expression": {
																	"id": 1225,
																	"name": "pos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "12486:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
																		"typeString": "struct OracleManager.PositionResult memory"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "12490:5:2",
																"memberName": "owed1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1009,
																"src": "12486:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"id": 1227,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "12250:255:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$__$_t_address_$_t_address_$__$_t_int24_$_t_int24_$_t_uint128_$__$__$_t_uint128_$_t_uint128_$",
															"typeString": "tuple(,,address,address,,int24,int24,uint128,,,uint128,uint128)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1230,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1193,
																"src": "12532:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"components": [
																	{
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12551:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint96_$",
																			"typeString": "type(uint96)"
																		},
																		"typeName": {
																			"id": 1231,
																			"name": "uint96",
																			"nodeType": "ElementaryTypeName",
																			"src": "12551:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12559:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1233,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12559:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12568:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1235,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12568:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12577:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1237,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12577:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12586:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint24_$",
																			"typeString": "type(uint24)"
																		},
																		"typeName": {
																			"id": 1239,
																			"name": "uint24",
																			"nodeType": "ElementaryTypeName",
																			"src": "12586:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12594:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int24_$",
																			"typeString": "type(int24)"
																		},
																		"typeName": {
																			"id": 1241,
																			"name": "int24",
																			"nodeType": "ElementaryTypeName",
																			"src": "12594:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12601:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int24_$",
																			"typeString": "type(int24)"
																		},
																		"typeName": {
																			"id": 1243,
																			"name": "int24",
																			"nodeType": "ElementaryTypeName",
																			"src": "12601:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1245,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "12608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12617:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1247,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12617:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12626:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1249,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12626:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12635:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1251,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "12635:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12644:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1253,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "12644:7:2",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 1255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12550:102:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_type$_t_uint96_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint24_$_$_t_type$_t_int24_$_$_t_type$_t_int24_$_$_t_type$_t_uint128_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint128_$_$_t_type$_t_uint128_$_$",
																	"typeString": "tuple(type(uint96),type(address),type(address),type(address),type(uint24),type(int24),type(int24),type(uint128),type(uint256),type(uint256),type(uint128),type(uint128))"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_tuple$_t_type$_t_uint96_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint24_$_$_t_type$_t_int24_$_$_t_type$_t_int24_$_$_t_type$_t_uint128_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint128_$_$_t_type$_t_uint128_$_$",
																	"typeString": "tuple(type(uint96),type(address),type(address),type(address),type(uint24),type(int24),type(int24),type(uint128),type(uint256),type(uint256),type(uint128),type(uint128))"
																}
															],
															"expression": {
																"id": 1228,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "12508:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "12512:6:2",
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "12508:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12508:154:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint96_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_uint24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$_t_uint128_$_t_uint128_$",
															"typeString": "tuple(uint96,address payable,address payable,address payable,uint24,int24,int24,uint128,uint256,uint256,uint128,uint128)"
														}
													},
													"src": "12250:412:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "12250:412:2"
											}
										]
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fetchPositionData",
									"nameLocation": "11896:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "posMgr",
												"nameLocation": "11923:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "11915:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11915:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "11931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11931:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11914:33:2"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "12017:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "11995:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PositionResult_$1010_memory_ptr",
													"typeString": "struct OracleManager.PositionResult"
												},
												"typeName": {
													"id": 1187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1186,
														"name": "PositionResult",
														"nameLocations": [
															"11995:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1010,
														"src": "11995:14:2"
													},
													"referencedDeclaration": 1010,
													"src": "11995:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PositionResult_$1010_storage_ptr",
														"typeString": "struct OracleManager.PositionResult"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11994:27:2"
									},
									"scope": 1632,
									"src": "11887:782:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "12779:382:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1270,
																"name": "poolAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1262,
																"src": "12797:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12817:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12809:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1271,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12809:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12809:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12797:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a20696e76616c696420706f6f6c",
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12821:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458",
																"typeString": "literal_string \"OracleManager: invalid pool\""
															},
															"value": "OracleManager: invalid pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc11c634eea6458db5cd77e25a3769aa12026a9f92560c7bc691c9704e52a458",
																"typeString": "literal_string \"OracleManager: invalid pool\""
															}
														],
														"id": 1269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12789:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12789:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "12789:62:2"
											},
											{
												"assignments": [
													1280,
													1282
												],
												"declarations": [
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12867:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "12862:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1279,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12862:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1282,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "12889:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "12876:17:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1281,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12876:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1287,
																			"name": "IUniswapV3Pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 660,
																			"src": "12953:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$660_$",
																				"typeString": "type(contract IUniswapV3Pool)"
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "12968:5:2",
																		"memberName": "slot0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 659,
																		"src": "12953:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																			"typeString": "function IUniswapV3Pool.slot0() view returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
																		}
																	},
																	"id": 1289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "12974:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "12953:29:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"id": 1285,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "12930:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "12934:18:2",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "12930:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12930:53:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1283,
															"name": "poolAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "12897:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12906:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "12897:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12897:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12861:132:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1294,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "13011:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 1296,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "13034:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1295,
																"name": "_getRevertMsg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1631,
																"src": "13020:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (bytes memory) pure returns (string memory)"
																}
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13020:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13003:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "13003:37:2"
											},
											{
												"expression": {
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1300,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "13051:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1301,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1267,
																"src": "13065:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															null,
															null,
															null,
															null,
															null
														],
														"id": 1302,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "13050:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$__$__$__$__$__$",
															"typeString": "tuple(uint160,int24,,,,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1305,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "13094:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"components": [
																	{
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1306,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "13101:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int24_$",
																			"typeString": "type(int24)"
																		},
																		"typeName": {
																			"id": 1308,
																			"name": "int24",
																			"nodeType": "ElementaryTypeName",
																			"src": "13110:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13117:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1310,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "13117:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13125:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1312,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "13125:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13133:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1314,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "13133:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13141:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 1316,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "13141:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	{
																		"id": 1319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13148:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		},
																		"typeName": {
																			"id": 1318,
																			"name": "bool",
																			"nodeType": "ElementaryTypeName",
																			"src": "13148:4:2",
																			"typeDescriptions": {}
																		}
																	}
																],
																"id": 1320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13100:53:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$_t_type$_t_uint16_$_$_t_type$_t_uint16_$_$_t_type$_t_uint16_$_$_t_type$_t_uint8_$_$_t_type$_t_bool_$_$",
																	"typeString": "tuple(type(uint160),type(int24),type(uint16),type(uint16),type(uint16),type(uint8),type(bool))"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_tuple$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$_t_type$_t_uint16_$_$_t_type$_t_uint16_$_$_t_type$_t_uint16_$_$_t_type$_t_uint8_$_$_t_type$_t_bool_$_$",
																	"typeString": "tuple(type(uint160),type(int24),type(uint16),type(uint16),type(uint16),type(uint8),type(bool))"
																}
															],
															"expression": {
																"id": 1303,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "13083:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "13087:6:2",
															"memberName": "decode",
															"nodeType": "MemberAccess",
															"src": "13083:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13083:71:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"src": "13050:104:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "13050:104:2"
											}
										]
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPoolSqrtAndTick",
									"nameLocation": "12684:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "poolAddr",
												"nameLocation": "12712:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "12704:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12704:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12703:18:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "12753:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "12745:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1264,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "12745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "12773:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "12767:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1266,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "12767:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12744:34:2"
									},
									"scope": 1632,
									"src": "12675:486:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "13365:390:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1340,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "13379:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13392:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13379:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1348,
												"nodeType": "IfStatement",
												"src": "13375:58:2",
												"trueBody": {
													"id": 1347,
													"nodeType": "Block",
													"src": "13395:38:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "30",
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13417:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13420:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1345,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13416:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1339,
															"id": 1346,
															"nodeType": "Return",
															"src": "13409:13:2"
														}
													]
												}
											},
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "sqrtLower",
														"nameLocation": "13450:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "13442:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1349,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "13442:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1355,
												"initialValue": {
													"arguments": [
														{
															"id": 1353,
															"name": "tickLower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "13495:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 1351,
															"name": "TickMathLocal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "13462:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMathLocal_$591_$",
																"typeString": "type(library TickMathLocal)"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13476:18:2",
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "13462:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13462:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13442:63:2"
											},
											{
												"assignments": [
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "sqrtUpper",
														"nameLocation": "13523:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "13515:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1356,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "13515:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"arguments": [
														{
															"id": 1360,
															"name": "tickUpper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "13568:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 1358,
															"name": "TickMathLocal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "13535:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMathLocal_$591_$",
																"typeString": "type(library TickMathLocal)"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13549:18:2",
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "13535:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13515:63:2"
											},
											{
												"expression": {
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 1363,
																"name": "amt0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "13590:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1364,
																"name": "amt1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "13596:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1365,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "13589:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1368,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "13657:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1369,
																"name": "sqrtLower",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "13683:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1370,
																"name": "sqrtUpper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "13706:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 1371,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "13729:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																{
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															],
															"expression": {
																"id": 1366,
																"name": "LiquidityAmounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "13604:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_LiquidityAmounts_$2441_$",
																	"typeString": "type(library LiquidityAmounts)"
																}
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13621:22:2",
															"memberName": "getAmountsForLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2440,
															"src": "13604:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint160,uint160,uint160,uint128) pure returns (uint256,uint256)"
															}
														},
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13604:144:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "13589:159:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "13589:159:2"
											}
										]
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_computeLiquidityAmounts",
									"nameLocation": "13176:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "13218:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "13210:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1326,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "13210:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "13246:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "13240:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1328,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "13240:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "13271:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "13265:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1330,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "13265:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "13298:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "13290:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1332,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "13290:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13200:113:2"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "amt0",
												"nameLocation": "13345:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "13337:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13337:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "amt1",
												"nameLocation": "13359:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "13351:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13351:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13336:28:2"
									},
									"scope": 1632,
									"src": "13167:588:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "13913:183:2",
										"statements": [
											{
												"assignments": [
													1389
												],
												"declarations": [
													{
														"constant": false,
														"id": 1389,
														"mutability": "mutable",
														"name": "val0",
														"nameLocation": "13931:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "13923:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1388,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13923:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"arguments": [
														{
															"id": 1391,
															"name": "amt0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "13964:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1392,
																"name": "ap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "13970:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AggregatorPair_$995_memory_ptr",
																	"typeString": "struct OracleManager.AggregatorPair memory"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13973:4:2",
															"memberName": "agg0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 988,
															"src": "13970:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1394,
																"name": "ap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "13979:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AggregatorPair_$995_memory_ptr",
																	"typeString": "struct OracleManager.AggregatorPair memory"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13982:4:2",
															"memberName": "dec0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 992,
															"src": "13979:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1390,
														"name": "_convertToAggregatorValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "13938:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,uint8) view returns (uint256)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13938:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13923:64:2"
											},
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "val1",
														"nameLocation": "14005:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1412,
														"src": "13997:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13997:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1407,
												"initialValue": {
													"arguments": [
														{
															"id": 1401,
															"name": "amt1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "14038:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1402,
																"name": "ap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "14044:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AggregatorPair_$995_memory_ptr",
																	"typeString": "struct OracleManager.AggregatorPair memory"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14047:4:2",
															"memberName": "agg1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 990,
															"src": "14044:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1404,
																"name": "ap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1383,
																"src": "14053:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AggregatorPair_$995_memory_ptr",
																	"typeString": "struct OracleManager.AggregatorPair memory"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14056:4:2",
															"memberName": "dec1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 994,
															"src": "14053:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1400,
														"name": "_convertToAggregatorValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1465,
														"src": "14012:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,address,uint8) view returns (uint256)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14012:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13997:64:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1408,
														"name": "val0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "14078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1409,
														"name": "val1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "14085:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14078:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1387,
												"id": 1411,
												"nodeType": "Return",
												"src": "14071:18:2"
											}
										]
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_convertVaultTokensToValue",
									"nameLocation": "13770:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "amt0",
												"nameLocation": "13814:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "13806:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13806:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "amt1",
												"nameLocation": "13836:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "13828:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "ap",
												"nameLocation": "13872:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "13850:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AggregatorPair_$995_memory_ptr",
													"typeString": "struct OracleManager.AggregatorPair"
												},
												"typeName": {
													"id": 1382,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1381,
														"name": "AggregatorPair",
														"nameLocations": [
															"13850:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 995,
														"src": "13850:14:2"
													},
													"referencedDeclaration": 995,
													"src": "13850:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AggregatorPair_$995_storage_ptr",
														"typeString": "struct OracleManager.AggregatorPair"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13796:84:2"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "13904:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13904:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13903:9:2"
									},
									"scope": 1632,
									"src": "13761:335:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "14255:309:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1424,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "14269:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14276:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14269:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1427,
															"name": "aggregatorAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "14281:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14307:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14299:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1428,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14299:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14299:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14281:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14269:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1437,
												"nodeType": "IfStatement",
												"src": "14265:79:2",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "14311:33:2",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14332:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1423,
															"id": 1435,
															"nodeType": "Return",
															"src": "14325:8:2"
														}
													]
												}
											},
											{
												"assignments": [
													1439,
													1441,
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "ok",
														"nameLocation": "14359:2:2",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "14354:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1438,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14354:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1441,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "14371:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "14363:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14363:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "d",
														"nameLocation": "14380:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1464,
														"src": "14374:7:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1442,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "14374:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1448,
												"initialValue": {
													"arguments": [
														{
															"id": 1445,
															"name": "aggregatorAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "14407:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1446,
															"name": "decimalsOvr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "14423:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1444,
														"name": "_tryGetChainlinkPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "14385:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$_t_uint256_$_t_uint8_$",
															"typeString": "function (address,uint8) view returns (bool,uint256,uint8)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14385:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint8_$",
														"typeString": "tuple(bool,uint256,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14353:82:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1450,
															"name": "ok",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "14453:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f7261636c654d616e616765723a2061676772656761746f72206661696c20696e205f636f6e76657274546f41676772656761746f7256616c7565",
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14457:61:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391",
																"typeString": "literal_string \"OracleManager: aggregator fail in _convertToAggregatorValue\""
															},
															"value": "OracleManager: aggregator fail in _convertToAggregatorValue"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f333998db6980bfe3d93128db574eaff5de94348fa977556a1d71ab8ee16f391",
																"typeString": "literal_string \"OracleManager: aggregator fail in _convertToAggregatorValue\""
															}
														],
														"id": 1449,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14445:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14445:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "14445:74:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1454,
																	"name": "amt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "14537:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1455,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "14543:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14537:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1457,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14536:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14549:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1459,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "14555:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "14549:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1461,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14548:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14536:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1423,
												"id": 1463,
												"nodeType": "Return",
												"src": "14529:28:2"
											}
										]
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_convertToAggregatorValue",
									"nameLocation": "14111:25:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "amt",
												"nameLocation": "14154:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "14146:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "aggregatorAddr",
												"nameLocation": "14175:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "14167:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14167:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "decimalsOvr",
												"nameLocation": "14205:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "14199:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1418,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14199:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14136:86:2"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "14246:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14246:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14245:9:2"
									},
									"scope": 1632,
									"src": "14102:462:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "14736:1024:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1478,
														"name": "aggregator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "14750:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14772:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14764:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1479,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14764:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14764:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14750:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1490,
												"nodeType": "IfStatement",
												"src": "14746:75:2",
												"trueBody": {
													"id": 1489,
													"nodeType": "Block",
													"src": "14776:45:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14798:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14805:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1487,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14797:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1477,
															"id": 1488,
															"nodeType": "Return",
															"src": "14790:20:2"
														}
													]
												}
											},
											{
												"assignments": [
													1492
												],
												"declarations": [
													{
														"constant": false,
														"id": 1492,
														"mutability": "mutable",
														"name": "payload",
														"nameLocation": "14843:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "14830:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1491,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14830:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 1495,
																	"name": "AggregatorV3Interface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2487,
																	"src": "14876:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2487_$",
																		"typeString": "type(contract AggregatorV3Interface)"
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "14898:15:2",
																"memberName": "latestRoundData",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2486,
																"src": "14876:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_declaration_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
																	"typeString": "function AggregatorV3Interface.latestRoundData() view returns (uint80,int256,uint256,uint256,uint80)"
																}
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "14914:8:2",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "14876:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 1493,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "14853:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14857:18:2",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "14853:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14853:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14830:93:2"
											},
											{
												"assignments": [
													1501,
													1503
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "callSuccess",
														"nameLocation": "14939:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "14934:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1500,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14934:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1503,
														"mutability": "mutable",
														"name": "returnData",
														"nameLocation": "14965:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "14952:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1502,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14952:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1508,
												"initialValue": {
													"arguments": [
														{
															"id": 1506,
															"name": "payload",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "15001:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1504,
															"name": "aggregator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "14979:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14990:10:2",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "14979:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14979:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14933:76:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "15023:12:2",
														"subExpression": {
															"id": 1509,
															"name": "callSuccess",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "15024:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1511,
																"name": "returnData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "15039:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15050:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "15039:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "313630",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15059:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_160_by_1",
																"typeString": "int_const 160"
															},
															"value": "160"
														},
														"src": "15039:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15023:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1522,
												"nodeType": "IfStatement",
												"src": "15019:90:2",
												"trueBody": {
													"id": 1521,
													"nodeType": "Block",
													"src": "15064:45:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15086:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15093:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15096:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1519,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15085:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1477,
															"id": 1520,
															"nodeType": "Return",
															"src": "15078:20:2"
														}
													]
												}
											},
											{
												"assignments": [
													null,
													1524,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1524,
														"mutability": "mutable",
														"name": "answer",
														"nameLocation": "15129:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "15122:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1523,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "15122:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1540,
												"initialValue": {
													"arguments": [
														{
															"id": 1527,
															"name": "returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "15156:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15169:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 1528,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "15169:6:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15177:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15177:6:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15185:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1532,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15185:7:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15194:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1534,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "15194:7:2",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15203:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 1536,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "15203:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1538,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "15168:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint80_$_$_t_type$_t_int256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint80_$_$",
																"typeString": "tuple(type(uint80),type(int256),type(uint256),type(uint256),type(uint80))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint80_$_$_t_type$_t_int256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint256_$_$_t_type$_t_uint80_$_$",
																"typeString": "tuple(type(uint80),type(int256),type(uint256),type(uint256),type(uint80))"
															}
														],
														"expression": {
															"id": 1525,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "15145:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15149:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "15145:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15145:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15118:93:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1541,
														"name": "answer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "15225:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15235:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15225:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1550,
												"nodeType": "IfStatement",
												"src": "15221:62:2",
												"trueBody": {
													"id": 1549,
													"nodeType": "Block",
													"src": "15238:45:2",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15260:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15267:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15270:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1547,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15259:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1477,
															"id": 1548,
															"nodeType": "Return",
															"src": "15252:20:2"
														}
													]
												}
											},
											{
												"assignments": [
													1552
												],
												"declarations": [
													{
														"constant": false,
														"id": 1552,
														"mutability": "mutable",
														"name": "aggDecimals",
														"nameLocation": "15299:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "15293:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1551,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "15293:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1554,
												"initialValue": {
													"id": 1553,
													"name": "decimalsOvr",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1469,
													"src": "15313:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15293:31:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1555,
														"name": "aggDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "15338:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15353:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15338:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1597,
												"nodeType": "IfStatement",
												"src": "15334:367:2",
												"trueBody": {
													"id": 1596,
													"nodeType": "Block",
													"src": "15356:345:2",
													"statements": [
														{
															"assignments": [
																1559,
																1561
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1559,
																	"mutability": "mutable",
																	"name": "decSuccess",
																	"nameLocation": "15376:10:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1596,
																	"src": "15371:15:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1558,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "15371:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1561,
																	"mutability": "mutable",
																	"name": "decData",
																	"nameLocation": "15401:7:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1596,
																	"src": "15388:20:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1560,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "15388:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1571,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 1566,
																						"name": "AggregatorV3Interface",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2487,
																						"src": "15474:21:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$2487_$",
																							"typeString": "type(contract AggregatorV3Interface)"
																						}
																					},
																					"id": 1567,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "15496:8:2",
																					"memberName": "decimals",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2448,
																					"src": "15474:30:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_declaration_view$__$returns$_t_uint8_$",
																						"typeString": "function AggregatorV3Interface.decimals() view returns (uint8)"
																					}
																				},
																				"id": 1568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "15505:8:2",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "15474:39:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"expression": {
																				"id": 1564,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "15451:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1565,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "15455:18:2",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "15451:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15451:63:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1562,
																		"name": "aggregator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "15412:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15423:10:2",
																	"memberName": "staticcall",
																	"nodeType": "MemberAccess",
																	"src": "15412:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) view returns (bool,bytes memory)"
																	}
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15412:116:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "15370:158:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15546:11:2",
																	"subExpression": {
																		"id": 1572,
																		"name": "decSuccess",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1559,
																		"src": "15547:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1574,
																			"name": "decData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "15561:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15569:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "15561:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "3332",
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15578:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	"src": "15561:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15546:34:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1585,
															"nodeType": "IfStatement",
															"src": "15542:93:2",
															"trueBody": {
																"id": 1584,
																"nodeType": "Block",
																"src": "15582:53:2",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "66616c7365",
																					"id": 1579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15608:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "false"
																				},
																				{
																					"hexValue": "30",
																					"id": 1580,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15615:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				{
																					"hexValue": "30",
																					"id": 1581,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15618:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"id": 1582,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "15607:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																				"typeString": "tuple(bool,int_const 0,int_const 0)"
																			}
																		},
																		"functionReturnParameters": 1477,
																		"id": 1583,
																		"nodeType": "Return",
																		"src": "15600:20:2"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1586,
																	"name": "aggDecimals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "15648:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1589,
																			"name": "decData",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "15673:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		{
																			"components": [
																				{
																					"id": 1591,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "15683:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 1590,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "15683:5:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"id": 1592,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "15682:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			},
																			{
																				"typeIdentifier": "t_type$_t_uint8_$",
																				"typeString": "type(uint8)"
																			}
																		],
																		"expression": {
																			"id": 1587,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "15662:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "15666:6:2",
																		"memberName": "decode",
																		"nodeType": "MemberAccess",
																		"src": "15662:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15662:28:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "15648:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1595,
															"nodeType": "ExpressionStatement",
															"src": "15648:42:2"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15718:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"arguments": [
																{
																	"id": 1601,
																	"name": "answer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1524,
																	"src": "15732:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15724:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1599,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15724:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15724:15:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1603,
															"name": "aggDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "15741:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"id": 1604,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "15717:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint8_$",
														"typeString": "tuple(bool,uint256,uint8)"
													}
												},
												"functionReturnParameters": 1477,
												"id": 1605,
												"nodeType": "Return",
												"src": "15710:43:2"
											}
										]
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tryGetChainlinkPrice",
									"nameLocation": "14579:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "aggregator",
												"nameLocation": "14609:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "14601:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14601:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "decimalsOvr",
												"nameLocation": "14627:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "14621:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1468,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14621:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14600:39:2"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14692:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "14687:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14687:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "14709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "14701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "14722:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "14716:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1475,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "14716:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14686:45:2"
									},
									"scope": 1632,
									"src": "14570:1190:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "15852:220:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1614,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "15866:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15878:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15866:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3638",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15887:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_68_by_1",
															"typeString": "int_const 68"
														},
														"value": "68"
													},
													"src": "15866:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1620,
												"nodeType": "IfStatement",
												"src": "15862:74:2",
												"trueBody": {
													"expression": {
														"hexValue": "4f7261636c654d616e616765723a2063616c6c20726576657274656420772f6f206d7367",
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15898:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_3e1e6533146503ddcd57727c5002d69321677d0539df318ad90f03963b3c334f",
															"typeString": "literal_string \"OracleManager: call reverted w/o msg\""
														},
														"value": "OracleManager: call reverted w/o msg"
													},
													"functionReturnParameters": 1613,
													"id": 1619,
													"nodeType": "Return",
													"src": "15891:45:2"
												}
											},
											{
												"AST": {
													"nativeSrc": "15955:61:2",
													"nodeType": "YulBlock",
													"src": "15955:61:2",
													"statements": [
														{
															"nativeSrc": "15969:37:2",
															"nodeType": "YulAssignment",
															"src": "15969:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "_returnData",
																		"nativeSrc": "15988:11:2",
																		"nodeType": "YulIdentifier",
																		"src": "15988:11:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16001:4:2",
																		"nodeType": "YulLiteral",
																		"src": "16001:4:2",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15984:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "15984:3:2"
																},
																"nativeSrc": "15984:22:2",
																"nodeType": "YulFunctionCall",
																"src": "15984:22:2"
															},
															"variableNames": [
																{
																	"name": "_returnData",
																	"nativeSrc": "15969:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "15969:11:2"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1609,
														"isOffset": false,
														"isSlot": false,
														"src": "15969:11:2",
														"valueSize": 1
													},
													{
														"declaration": 1609,
														"isOffset": false,
														"isSlot": false,
														"src": "15988:11:2",
														"valueSize": 1
													}
												],
												"id": 1621,
												"nodeType": "InlineAssembly",
												"src": "15946:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1624,
															"name": "_returnData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "16043:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16057:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1625,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "16057:6:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1627,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "16056:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															}
														],
														"expression": {
															"id": 1622,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "16032:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16036:6:2",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "16032:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16032:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1613,
												"id": 1629,
												"nodeType": "Return",
												"src": "16025:40:2"
											}
										]
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRevertMsg",
									"nameLocation": "15775:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "_returnData",
												"nameLocation": "15802:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "15789:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1608,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15789:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15788:26:2"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "15837:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1611,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15837:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15836:15:2"
									},
									"scope": 1632,
									"src": "15766:306:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1633,
							"src": "5596:10478:2",
							"usedErrors": [],
							"usedEvents": [
								708,
								720,
								1646
							]
						}
					],
					"src": "32:16043:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2097
						],
						"Ownable": [
							1745
						]
					},
					"id": 1746,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1634,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1635,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1746,
							"sourceUnit": 2098,
							"src": "127:30:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1637,
										"name": "Context",
										"nameLocations": [
											"683:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2097,
										"src": "683:7:3"
									},
									"id": 1638,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1636,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1745,
							"linearizedBaseContracts": [
								1745,
								2097
							],
							"name": "Ownable",
							"nameLocation": "672:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1640,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "697:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1639,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1646,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "753:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "784:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:3"
									},
									"src": "726:84:3"
								},
								{
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "926:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1651,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "955:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1650,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "936:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "936:32:3"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1656,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:3"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:3"
									},
									"scope": 1745,
									"src": "912:63:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "1084:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1659,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "1094:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:3"
											},
											{
												"id": 1662,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:3"
											}
										]
									},
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1664,
									"name": "onlyOwner",
									"nameLocation": "1072:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:3"
									},
									"src": "1063:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1672,
										"nodeType": "Block",
										"src": "1256:30:3",
										"statements": [
											{
												"expression": {
													"id": 1670,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1640,
													"src": "1273:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1669,
												"id": 1671,
												"nodeType": "Return",
												"src": "1266:13:3"
											}
										]
									},
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:3"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1673,
												"src": "1247:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:3"
									},
									"scope": 1745,
									"src": "1201:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "1404:85:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1678,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "1422:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1680,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "1433:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1677,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:3"
											}
										]
									},
									"documentation": {
										"id": 1674,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:3"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:3"
									},
									"scope": 1745,
									"src": "1359:130:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1700,
										"nodeType": "Block",
										"src": "1885:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1694,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1693,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "1895:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:3"
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1701,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1691,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1690,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1664,
												"src": "1875:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:3"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:3"
									},
									"scope": 1745,
									"src": "1831:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1723,
										"nodeType": "Block",
										"src": "2151:128:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1710,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "2169:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1711,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1718,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1720,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "2263:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1719,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1744,
														"src": "2244:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:3"
											}
										]
									},
									"documentation": {
										"id": 1702,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1724,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1706,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1664,
												"src": "2141:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1724,
												"src": "2108:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:3"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:3"
									},
									"scope": 1745,
									"src": "2081:198:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "2496:124:3",
										"statements": [
											{
												"assignments": [
													1731
												],
												"declarations": [
													{
														"constant": false,
														"id": 1731,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 1743,
														"src": "2506:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1730,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1733,
												"initialValue": {
													"id": 1732,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1640,
													"src": "2525:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:3"
											},
											{
												"expression": {
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1734,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "2541:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1735,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "2550:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1739,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "2594:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1740,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1727,
															"src": "2604:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1738,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "2573:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "EmitStatement",
												"src": "2568:45:3"
											}
										]
									},
									"documentation": {
										"id": 1725,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "2461:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:3"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:3"
									},
									"scope": 1745,
									"src": "2433:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1746,
							"src": "654:1968:3",
							"usedErrors": [],
							"usedEvents": [
								1646
							]
						}
					],
					"src": "102:2521:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2075
						]
					},
					"id": 2076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1747,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1748,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2075,
							"linearizedBaseContracts": [
								2075
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "1241:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1756,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "1465:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1761,
												"nodeType": "Return",
												"src": "1458:30:4"
											}
										]
									},
									"documentation": {
										"id": 1749,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "1195:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:4"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "1235:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:4"
									},
									"scope": 2075,
									"src": "1175:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "2483:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1774,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2075",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2075",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1772,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1777,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "2526:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:4"
											},
											{
												"assignments": [
													1783,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1783,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1796,
														"src": "2578:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1782,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1790,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1784,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "2596:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1786,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "2618:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1792,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "2647:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1795,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:4"
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2431:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2458:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:4"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:4"
									},
									"scope": 2075,
									"src": "2412:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "3555:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1808,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "3594:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1809,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "3602:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1807,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1855,
															1899
														],
														"referencedDeclaration": 1899,
														"src": "3572:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1806,
												"id": 1813,
												"nodeType": "Return",
												"src": "3565:79:4"
											}
										]
									},
									"documentation": {
										"id": 1798,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3488:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3504:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1801,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:4"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "3541:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:4"
									},
									"scope": 2075,
									"src": "3466:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "4020:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1828,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "4059:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1829,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1820,
															"src": "4067:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1831,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "4076:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1827,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1855,
															1899
														],
														"referencedDeclaration": 1899,
														"src": "4037:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1826,
												"id": 1833,
												"nodeType": "Return",
												"src": "4030:59:4"
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "3904:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "3928:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "3955:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:4"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "4006:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:4"
									},
									"scope": 2075,
									"src": "3873:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "4601:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1848,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "4640:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1849,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "4648:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1850,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "4654:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1847,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1855,
															1899
														],
														"referencedDeclaration": 1899,
														"src": "4618:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1846,
												"id": 1853,
												"nodeType": "Return",
												"src": "4611:94:4"
											}
										]
									},
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "4498:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "4522:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "4549:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:4"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "4587:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1844,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:4"
									},
									"scope": 2075,
									"src": "4458:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "5139:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1872,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2075",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2075",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1870,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1875,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "5182:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:4"
											},
											{
												"assignments": [
													1881,
													1883
												],
												"declarations": [
													{
														"constant": false,
														"id": 1881,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1898,
														"src": "5241:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1880,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1883,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1898,
														"src": "5255:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1882,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1890,
												"initialValue": {
													"arguments": [
														{
															"id": 1888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "5308:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1884,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1858,
																"src": "5282:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1886,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "5301:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1892,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "5357:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1893,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "5365:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1894,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "5374:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1895,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "5386:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1891,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2030,
														"src": "5330:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1897,
												"nodeType": "Return",
												"src": "5323:76:4"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5024:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1859,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5074:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1863,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:4"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5125:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:4"
									},
									"scope": 2075,
									"src": "4960:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1915,
										"nodeType": "Block",
										"src": "5683:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1910,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "5719:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1911,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1904,
															"src": "5727:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1909,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1916,
															1945
														],
														"referencedDeclaration": 1945,
														"src": "5700:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1908,
												"id": 1914,
												"nodeType": "Return",
												"src": "5693:80:4"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "5611:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "5627:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:4"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "5669:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:4"
									},
									"scope": 2075,
									"src": "5583:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1944,
										"nodeType": "Block",
										"src": "6122:168:4",
										"statements": [
											{
												"assignments": [
													1929,
													1931
												],
												"declarations": [
													{
														"constant": false,
														"id": 1929,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1944,
														"src": "6133:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1928,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1931,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1944,
														"src": "6147:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1930,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1936,
												"initialValue": {
													"arguments": [
														{
															"id": 1934,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "6192:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1932,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "6174:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1938,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "6241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1939,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "6249:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1940,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "6258:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1941,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "6270:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1937,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2030,
														"src": "6214:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1927,
												"id": 1943,
												"nodeType": "Return",
												"src": "6207:76:4"
											}
										]
									},
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "6001:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "6025:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1920,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "6052:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:4"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "6108:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:4"
									},
									"scope": 2075,
									"src": "5964:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1961,
										"nodeType": "Block",
										"src": "6566:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1956,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "6604:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1957,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "6612:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1955,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1962,
															1991
														],
														"referencedDeclaration": 1991,
														"src": "6583:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1954,
												"id": 1960,
												"nodeType": "Return",
												"src": "6576:84:4"
											}
										]
									},
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "6499:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "6515:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:4"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "6552:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1952,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:4"
									},
									"scope": 2075,
									"src": "6469:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1990,
										"nodeType": "Block",
										"src": "7008:170:4",
										"statements": [
											{
												"assignments": [
													1975,
													1977
												],
												"declarations": [
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1990,
														"src": "7019:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1974,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1977,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1990,
														"src": "7033:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1976,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"arguments": [
														{
															"id": 1980,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "7080:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1978,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "7060:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1984,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "7129:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1985,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "7137:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1986,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "7146:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1987,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "7158:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1983,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2030,
														"src": "7102:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1973,
												"id": 1989,
												"nodeType": "Return",
												"src": "7095:76:4"
											}
										]
									},
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "6892:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "6916:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "6943:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1968,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:4"
									},
									"returnParameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "6994:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1971,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:4"
									},
									"scope": 2075,
									"src": "6853:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "7660:434:4",
										"statements": [
											{
												"condition": {
													"id": 2005,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1996,
													"src": "7674:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2027,
													"nodeType": "Block",
													"src": "8030:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2023,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1998,
																		"src": "8052:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2024,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2000,
																		"src": "8064:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2022,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "8044:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2026,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:4"
														}
													]
												},
												"id": 2028,
												"nodeType": "IfStatement",
												"src": "7670:418:4",
												"trueBody": {
													"id": 2021,
													"nodeType": "Block",
													"src": "7683:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2006,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1998,
																		"src": "7701:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2018,
															"nodeType": "IfStatement",
															"src": "7697:286:4",
															"trueBody": {
																"id": 2017,
																"nodeType": "Block",
																"src": "7725:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2012,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1994,
																							"src": "7927:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2011,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1763,
																						"src": "7916:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2013,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2014,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2010,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2016,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2019,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1998,
																"src": "8003:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2004,
															"id": 2020,
															"nodeType": "Return",
															"src": "7996:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "7511:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "7535:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "7557:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1997,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "7590:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1999,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:4"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "7646:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2002,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:4"
									},
									"scope": 2075,
									"src": "7466:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "8475:135:4",
										"statements": [
											{
												"condition": {
													"id": 2042,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2033,
													"src": "8489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2051,
													"nodeType": "Block",
													"src": "8546:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2047,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2035,
																		"src": "8568:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2048,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2037,
																		"src": "8580:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2046,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "8560:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2050,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:4"
														}
													]
												},
												"id": 2052,
												"nodeType": "IfStatement",
												"src": "8485:119:4",
												"trueBody": {
													"id": 2045,
													"nodeType": "Block",
													"src": "8498:42:4",
													"statements": [
														{
															"expression": {
																"id": 2043,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "8519:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2041,
															"id": 2044,
															"nodeType": "Return",
															"src": "8512:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "8350:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "8372:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2037,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "8405:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2036,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:4"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "8461:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:4"
									},
									"scope": 2075,
									"src": "8315:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "8699:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2061,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2056,
															"src": "8775:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2063,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2071,
													"nodeType": "Block",
													"src": "9105:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2068,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2058,
																		"src": "9126:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2067,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2070,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:4"
														}
													]
												},
												"id": 2072,
												"nodeType": "IfStatement",
												"src": "8771:379:4",
												"trueBody": {
													"id": 2066,
													"nodeType": "Block",
													"src": "8798:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "8956:133:4",
																"nodeType": "YulBlock",
																"src": "8956:133:4",
																"statements": [
																	{
																		"nativeSrc": "8974:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9003:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8997:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:4"
																			},
																			"nativeSrc": "8997:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "8978:15:4",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9042:2:4",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9046:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9038:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:4"
																					},
																					"nativeSrc": "9038:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9059:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9031:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:4"
																			},
																			"nativeSrc": "9031:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:4"
																		},
																		"nativeSrc": "9031:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2056,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 2056,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:4",
																	"valueSize": 1
																}
															],
															"id": 2065,
															"nodeType": "InlineAssembly",
															"src": "8947:142:4"
														}
													]
												}
											}
										]
									},
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "8633:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2055,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "8658:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:4"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:4"
									},
									"scope": 2075,
									"src": "8616:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2076,
							"src": "194:8964:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9058:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.8.3/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2097
						]
					},
					"id": 2098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2078,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2097,
							"linearizedBaseContracts": [
								2097
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2086,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2083,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2082,
												"id": 2085,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 2087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 2097,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2092,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2091,
												"id": 2094,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 2096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2089,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 2097,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2098,
							"src": "608:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol": {
				"ast": {
					"absolutePath": "https://github.com/Uniswap/v3-periphery/blob/0.8/contracts/libraries/LiquidityAmounts.sol",
					"exportedSymbols": {
						"FixedPoint96": [
							9
						],
						"FullMath": [
							186
						],
						"LiquidityAmounts": [
							2441
						]
					},
					"id": 2442,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2099,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
							"id": 2100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2442,
							"sourceUnit": 187,
							"src": "71:59:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
							"file": "@uniswap/v3-core/contracts/libraries/FixedPoint96.sol",
							"id": 2101,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2442,
							"sourceUnit": 10,
							"src": "131:63:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LiquidityAmounts",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2102,
								"nodeType": "StructuredDocumentation",
								"src": "196:131:6",
								"text": "@title Liquidity amount functions\n @notice Provides functions for computing liquidity amounts from token amounts and prices"
							},
							"fullyImplemented": true,
							"id": 2441,
							"linearizedBaseContracts": [
								2441
							],
							"name": "LiquidityAmounts",
							"nameLocation": "335:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2122,
										"nodeType": "Block",
										"src": "570:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2111,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2108,
																			"src": "589:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2114,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2105,
																					"src": "601:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "593:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint128_$",
																					"typeString": "type(uint128)"
																				},
																				"typeName": {
																					"id": 2112,
																					"name": "uint128",
																					"nodeType": "ElementaryTypeName",
																					"src": "593:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "593:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"src": "589:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"id": 2117,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "588:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2118,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "608:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "588:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "580:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "580:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2121,
												"nodeType": "ExpressionStatement",
												"src": "580:30:6"
											}
										]
									},
									"documentation": {
										"id": 2103,
										"nodeType": "StructuredDocumentation",
										"src": "358:144:6",
										"text": "@notice Downcasts uint256 to uint128\n @param x The uint258 to be downcasted\n @return y The passed value, downcasted to uint128"
									},
									"id": 2123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "516:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "534:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "526:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "526:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:11:6"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "567:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2123,
												"src": "559:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2107,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "559:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:11:6"
									},
									"scope": 2441,
									"src": "507:110:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2169,
										"nodeType": "Block",
										"src": "1252:342:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2135,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "1266:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2136,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "1282:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "1266:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2146,
												"nodeType": "IfStatement",
												"src": "1262:98:6",
												"trueBody": {
													"expression": {
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2138,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "1298:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2139,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "1313:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2140,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "1297:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2141,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "1331:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2142,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2126,
																	"src": "1346:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2143,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1330:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "1297:63:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2145,
													"nodeType": "ExpressionStatement",
													"src": "1297:63:6"
												}
											},
											{
												"assignments": [
													2148
												],
												"declarations": [
													{
														"constant": false,
														"id": 2148,
														"mutability": "mutable",
														"name": "intermediate",
														"nameLocation": "1378:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 2169,
														"src": "1370:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2147,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1370:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2156,
												"initialValue": {
													"arguments": [
														{
															"id": 2151,
															"name": "sqrtRatioAX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "1409:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 2152,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "1424:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"expression": {
																"id": 2153,
																"name": "FixedPoint96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "1439:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																	"typeString": "type(library FixedPoint96)"
																}
															},
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1452:3:6",
															"memberName": "Q96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 8,
															"src": "1439:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2149,
															"name": "FullMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1393:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																"typeString": "type(library FullMath)"
															}
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1402:6:6",
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 141,
														"src": "1393:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1370:86:6"
											},
											{
												"id": 2168,
												"nodeType": "UncheckedBlock",
												"src": "1466:122:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2160,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2130,
																			"src": "1523:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2161,
																			"name": "intermediate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2148,
																			"src": "1532:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2162,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2128,
																				"src": "1546:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2163,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2126,
																				"src": "1562:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "1546:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"expression": {
																			"id": 2158,
																			"name": "FullMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "1507:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																				"typeString": "type(library FullMath)"
																			}
																		},
																		"id": 2159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1516:6:6",
																		"memberName": "mulDiv",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 141,
																		"src": "1507:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1507:69:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2157,
																"name": "toUint128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "1497:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
																	"typeString": "function (uint256) pure returns (uint128)"
																}
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1497:80:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"functionReturnParameters": 2134,
														"id": 2167,
														"nodeType": "Return",
														"src": "1490:87:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2124,
										"nodeType": "StructuredDocumentation",
										"src": "623:457:6",
										"text": "@notice Computes the amount of liquidity received for a given amount of token0 and price range\n @dev Calculates amount0 * (sqrt(upper) * sqrt(lower)) / (sqrt(upper) - sqrt(lower))\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount0 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 2170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount0",
									"nameLocation": "1094:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "1134:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1126:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2125,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1126:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "1165:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1157:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2127,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1196:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1188:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1116:93:6"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1241:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2170,
												"src": "1233:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2132,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:19:6"
									},
									"scope": 2441,
									"src": "1085:509:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "2200:250:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2182,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2173,
														"src": "2214:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2183,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2175,
														"src": "2230:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2214:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2193,
												"nodeType": "IfStatement",
												"src": "2210:98:6",
												"trueBody": {
													"expression": {
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2185,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "2246:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2186,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "2261:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2187,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "2245:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2188,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "2279:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2189,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2173,
																	"src": "2294:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2190,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2278:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "2245:63:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2192,
													"nodeType": "ExpressionStatement",
													"src": "2245:63:6"
												}
											},
											{
												"id": 2206,
												"nodeType": "UncheckedBlock",
												"src": "2318:126:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2197,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2177,
																			"src": "2375:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 2198,
																				"name": "FixedPoint96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "2384:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																					"typeString": "type(library FixedPoint96)"
																				}
																			},
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "2397:3:6",
																			"memberName": "Q96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 8,
																			"src": "2384:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2200,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2175,
																				"src": "2402:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2201,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2173,
																				"src": "2418:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"src": "2402:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"expression": {
																			"id": 2195,
																			"name": "FullMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "2359:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																				"typeString": "type(library FullMath)"
																			}
																		},
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2368:6:6",
																		"memberName": "mulDiv",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 141,
																		"src": "2359:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2359:73:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2194,
																"name": "toUint128",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2123,
																"src": "2349:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$",
																	"typeString": "function (uint256) pure returns (uint128)"
																}
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2349:84:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"functionReturnParameters": 2181,
														"id": 2205,
														"nodeType": "Return",
														"src": "2342:91:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2171,
										"nodeType": "StructuredDocumentation",
										"src": "1600:428:6",
										"text": "@notice Computes the amount of liquidity received for a given amount of token1 and price range\n @dev Calculates amount1 / (sqrt(upper) - sqrt(lower)).\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount1 The amount1 being sent in\n @return liquidity The amount of returned liquidity"
									},
									"id": 2208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmount1",
									"nameLocation": "2042:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "2082:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "2074:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2172,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "2113:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "2105:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2174,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2144:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "2136:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:93:6"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2189:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "2181:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2179,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2181:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2180:19:6"
									},
									"scope": 2441,
									"src": "2033:417:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2288,
										"nodeType": "Block",
										"src": "3272:679:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2224,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3286:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2225,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "3302:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3286:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2235,
												"nodeType": "IfStatement",
												"src": "3282:98:6",
												"trueBody": {
													"expression": {
														"id": 2233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2227,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "3318:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2228,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2215,
																	"src": "3333:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2229,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "3317:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2230,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2215,
																	"src": "3351:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2231,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "3366:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2232,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3350:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "3317:63:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2234,
													"nodeType": "ExpressionStatement",
													"src": "3317:63:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2236,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "3395:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2237,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "3411:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3395:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2248,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2211,
															"src": "3534:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2249,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2215,
															"src": "3549:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "3534:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2285,
														"nodeType": "Block",
														"src": "3847:98:6",
														"statements": [
															{
																"expression": {
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2277,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2222,
																		"src": "3861:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2279,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2213,
																				"src": "3896:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2280,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2215,
																				"src": "3911:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2281,
																				"name": "amount1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2219,
																				"src": "3926:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2278,
																			"name": "getLiquidityForAmount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2208,
																			"src": "3873:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																				"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																			}
																		},
																		"id": 2282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3873:61:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3861:73:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 2284,
																"nodeType": "ExpressionStatement",
																"src": "3861:73:6"
															}
														]
													},
													"id": 2286,
													"nodeType": "IfStatement",
													"src": "3530:415:6",
													"trueBody": {
														"id": 2276,
														"nodeType": "Block",
														"src": "3564:277:6",
														"statements": [
															{
																"assignments": [
																	2252
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2252,
																		"mutability": "mutable",
																		"name": "liquidity0",
																		"nameLocation": "3586:10:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 2276,
																		"src": "3578:18:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 2251,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3578:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2258,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2254,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2211,
																			"src": "3622:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2255,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "3636:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2256,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2217,
																			"src": "3651:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2253,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2170,
																		"src": "3599:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3599:60:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3578:81:6"
															},
															{
																"assignments": [
																	2260
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2260,
																		"mutability": "mutable",
																		"name": "liquidity1",
																		"nameLocation": "3681:10:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 2276,
																		"src": "3673:18:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		"typeName": {
																			"id": 2259,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "3673:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2266,
																"initialValue": {
																	"arguments": [
																		{
																			"id": 2262,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "3717:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2263,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2211,
																			"src": "3732:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2264,
																			"name": "amount1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2219,
																			"src": "3746:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2261,
																		"name": "getLiquidityForAmount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2208,
																		"src": "3694:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3694:60:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "3673:81:6"
															},
															{
																"expression": {
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2267,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2222,
																		"src": "3769:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			},
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2268,
																				"name": "liquidity0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2252,
																				"src": "3781:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2269,
																				"name": "liquidity1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2260,
																				"src": "3794:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			"src": "3781:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"id": 2272,
																			"name": "liquidity1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2260,
																			"src": "3820:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"id": 2273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3781:49:6",
																		"trueExpression": {
																			"id": 2271,
																			"name": "liquidity0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2252,
																			"src": "3807:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	"src": "3769:61:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"id": 2275,
																"nodeType": "ExpressionStatement",
																"src": "3769:61:6"
															}
														]
													}
												},
												"id": 2287,
												"nodeType": "IfStatement",
												"src": "3391:554:6",
												"trueBody": {
													"id": 2247,
													"nodeType": "Block",
													"src": "3426:98:6",
													"statements": [
														{
															"expression": {
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2239,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2222,
																	"src": "3440:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2241,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2213,
																			"src": "3475:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2242,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2215,
																			"src": "3490:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2243,
																			"name": "amount0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2217,
																			"src": "3505:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2240,
																		"name": "getLiquidityForAmount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2170,
																		"src": "3452:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint256_$returns$_t_uint128_$",
																			"typeString": "function (uint160,uint160,uint256) pure returns (uint128)"
																		}
																	},
																	"id": 2244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3452:61:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "3440:73:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"id": 2246,
															"nodeType": "ExpressionStatement",
															"src": "3440:73:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "2456:589:6",
										"text": "@notice Computes the maximum amount of liquidity received for a given amount of token0, token1, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param amount0 The amount of token0 being sent in\n @param amount1 The amount of token1 being sent in\n @return liquidity The maximum amount of liquidity received"
									},
									"id": 2289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLiquidityForAmounts",
									"nameLocation": "3059:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nameLocation": "3099:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "3091:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2210,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "3129:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "3121:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2212,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "3160:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "3152:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2214,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3191:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "3183:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3216:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "3208:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3081:148:6"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3261:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2289,
												"src": "3253:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2221,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3253:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3252:19:6"
									},
									"scope": 2441,
									"src": "3050:901:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "4476:389:6",
										"statements": [
											{
												"id": 2330,
												"nodeType": "UncheckedBlock",
												"src": "4486:373:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2301,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "4514:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2302,
																"name": "sqrtRatioBX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2294,
																"src": "4530:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "4514:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2312,
														"nodeType": "IfStatement",
														"src": "4510:98:6",
														"trueBody": {
															"expression": {
																"id": 2310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"components": [
																		{
																			"id": 2304,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2292,
																			"src": "4546:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2305,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "4561:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 2306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "TupleExpression",
																	"src": "4545:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																		"typeString": "tuple(uint160,uint160)"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 2307,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "4579:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2308,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2292,
																			"src": "4594:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"id": 2309,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4578:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																		"typeString": "tuple(uint160,uint160)"
																	}
																},
																"src": "4545:63:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2311,
															"nodeType": "ExpressionStatement",
															"src": "4545:63:6"
														}
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2317,
																					"name": "liquidity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2296,
																					"src": "4691:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint128",
																						"typeString": "uint128"
																					}
																				],
																				"id": 2316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4683:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2315,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4683:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4683:18:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"expression": {
																				"id": 2319,
																				"name": "FixedPoint96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "4705:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																					"typeString": "type(library FixedPoint96)"
																				}
																			},
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4718:10:6",
																			"memberName": "RESOLUTION",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 5,
																			"src": "4705:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "4683:45:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2322,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2294,
																			"src": "4750:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2323,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2292,
																			"src": "4766:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "4750:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 2325,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2294,
																		"src": "4801:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"expression": {
																		"id": 2313,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 186,
																		"src": "4646:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4655:6:6",
																	"memberName": "mulDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 141,
																	"src": "4646:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4646:186:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2327,
																"name": "sqrtRatioAX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "4835:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "4646:202:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2300,
														"id": 2329,
														"nodeType": "Return",
														"src": "4623:225:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2290,
										"nodeType": "StructuredDocumentation",
										"src": "3957:347:6",
										"text": "@notice Computes the amount of token0 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0"
									},
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount0ForLiquidity",
									"nameLocation": "4318:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "4358:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "4350:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2291,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4350:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "4389:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "4381:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2293,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4381:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4420:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "4412:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2295,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:95:6"
									},
									"returnParameters": {
										"id": 2300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "4459:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:17:6"
									},
									"scope": 2441,
									"src": "4309:556:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "5390:242:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2344,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2335,
														"src": "5404:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2345,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "5420:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "5404:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2355,
												"nodeType": "IfStatement",
												"src": "5400:98:6",
												"trueBody": {
													"expression": {
														"id": 2353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2347,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "5436:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2348,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2337,
																	"src": "5451:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2349,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "5435:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2350,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2337,
																	"src": "5469:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2351,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "5484:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2352,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5468:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "5435:63:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2354,
													"nodeType": "ExpressionStatement",
													"src": "5435:63:6"
												}
											},
											{
												"id": 2366,
												"nodeType": "UncheckedBlock",
												"src": "5509:117:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 2358,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2339,
																	"src": "5556:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"id": 2361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2359,
																		"name": "sqrtRatioBX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2337,
																		"src": "5567:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2360,
																		"name": "sqrtRatioAX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2335,
																		"src": "5583:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"src": "5567:29:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"expression": {
																		"id": 2362,
																		"name": "FixedPoint96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "5598:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FixedPoint96_$9_$",
																			"typeString": "type(library FixedPoint96)"
																		}
																	},
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5611:3:6",
																	"memberName": "Q96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 8,
																	"src": "5598:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	},
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2356,
																	"name": "FullMath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 186,
																	"src": "5540:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_FullMath_$186_$",
																		"typeString": "type(library FullMath)"
																	}
																},
																"id": 2357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5549:6:6",
																"memberName": "mulDiv",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 141,
																"src": "5540:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5540:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2343,
														"id": 2365,
														"nodeType": "Return",
														"src": "5533:82:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "4871:347:6",
										"text": "@notice Computes the amount of token1 for a given amount of liquidity and a price range\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount1 The amount of token1"
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount1ForLiquidity",
									"nameLocation": "5232:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "5272:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "5264:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2334,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5264:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "5303:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "5295:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2336,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "5334:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "5326:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2338,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5254:95:6"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5381:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "5373:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5373:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5372:17:6"
									},
									"scope": 2441,
									"src": "5223:409:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "6387:585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2384,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "6401:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2385,
														"name": "sqrtRatioBX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "6417:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6401:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2395,
												"nodeType": "IfStatement",
												"src": "6397:98:6",
												"trueBody": {
													"expression": {
														"id": 2393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 2387,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "6433:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2388,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2375,
																	"src": "6448:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2389,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "6432:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 2390,
																	"name": "sqrtRatioBX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2375,
																	"src": "6466:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																{
																	"id": 2391,
																	"name": "sqrtRatioAX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "6481:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"id": 2392,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6465:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_uint160_$",
																"typeString": "tuple(uint160,uint160)"
															}
														},
														"src": "6432:63:6",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2394,
													"nodeType": "ExpressionStatement",
													"src": "6432:63:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2396,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2371,
														"src": "6510:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2397,
														"name": "sqrtRatioAX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "6526:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "6510:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"id": 2410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2408,
															"name": "sqrtRatioX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "6649:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2409,
															"name": "sqrtRatioBX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "6664:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"src": "6649:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2436,
														"nodeType": "Block",
														"src": "6868:98:6",
														"statements": [
															{
																"expression": {
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2428,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2382,
																		"src": "6882:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2430,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2373,
																				"src": "6915:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2431,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2375,
																				"src": "6930:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2432,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2377,
																				"src": "6945:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2429,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "6892:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6892:63:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6882:73:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2435,
																"nodeType": "ExpressionStatement",
																"src": "6882:73:6"
															}
														]
													},
													"id": 2437,
													"nodeType": "IfStatement",
													"src": "6645:321:6",
													"trueBody": {
														"id": 2427,
														"nodeType": "Block",
														"src": "6679:183:6",
														"statements": [
															{
																"expression": {
																	"id": 2417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2411,
																		"name": "amount0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2380,
																		"src": "6693:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2413,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2371,
																				"src": "6726:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2414,
																				"name": "sqrtRatioBX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2375,
																				"src": "6740:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2415,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2377,
																				"src": "6755:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2412,
																			"name": "getAmount0ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "6703:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6703:62:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6693:72:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2418,
																"nodeType": "ExpressionStatement",
																"src": "6693:72:6"
															},
															{
																"expression": {
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2419,
																		"name": "amount1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2382,
																		"src": "6779:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"id": 2421,
																				"name": "sqrtRatioAX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2373,
																				"src": "6812:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2422,
																				"name": "sqrtRatioX96",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2371,
																				"src": "6827:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			{
																				"id": 2423,
																				"name": "liquidity",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2377,
																				"src": "6841:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			],
																			"id": 2420,
																			"name": "getAmount1ForLiquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "6789:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																				"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																			}
																		},
																		"id": 2424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6789:62:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6779:72:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2426,
																"nodeType": "ExpressionStatement",
																"src": "6779:72:6"
															}
														]
													}
												},
												"id": 2438,
												"nodeType": "IfStatement",
												"src": "6506:460:6",
												"trueBody": {
													"id": 2407,
													"nodeType": "Block",
													"src": "6541:98:6",
													"statements": [
														{
															"expression": {
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2399,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2380,
																	"src": "6555:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2401,
																			"name": "sqrtRatioAX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2373,
																			"src": "6588:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2402,
																			"name": "sqrtRatioBX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2375,
																			"src": "6603:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		{
																			"id": 2403,
																			"name": "liquidity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "6618:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			{
																				"typeIdentifier": "t_uint128",
																				"typeString": "uint128"
																			}
																		],
																		"id": 2400,
																		"name": "getAmount0ForLiquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2332,
																		"src": "6565:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint160_$_t_uint160_$_t_uint128_$returns$_t_uint256_$",
																			"typeString": "function (uint160,uint160,uint128) pure returns (uint256)"
																		}
																	},
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6565:63:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6555:73:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2406,
															"nodeType": "ExpressionStatement",
															"src": "6555:73:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "5638:530:6",
										"text": "@notice Computes the token0 and token1 value for a given amount of liquidity, the current\n pool prices and the prices at the tick boundaries\n @param sqrtRatioX96 A sqrt price representing the current pool prices\n @param sqrtRatioAX96 A sqrt price representing the first tick boundary\n @param sqrtRatioBX96 A sqrt price representing the second tick boundary\n @param liquidity The liquidity being valued\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsForLiquidity",
									"nameLocation": "6182:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "sqrtRatioX96",
												"nameLocation": "6222:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "6214:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2370,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6214:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "sqrtRatioAX96",
												"nameLocation": "6252:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "6244:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2372,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6244:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "sqrtRatioBX96",
												"nameLocation": "6283:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "6275:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2374,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6275:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "6314:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "6306:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2376,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6204:125:6"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "6361:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "6353:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6353:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "6378:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "6370:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6352:34:6"
									},
									"scope": 2441,
									"src": "6173:799:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2442,
							"src": "327:6647:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6930:6"
				},
				"id": 6
			},
			"https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "https://github.com/smartcontractkit/chainlink/blob/v1.6.0/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							2487
						]
					},
					"id": 2488,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2443,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2487,
							"linearizedBaseContracts": [
								2487
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 2448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:7"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "136:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2445,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:7"
									},
									"scope": 2487,
									"src": "93:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 2453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:7"
									},
									"returnParameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2453,
												"src": "193:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2450,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:7"
									},
									"scope": 2487,
									"src": "147:61:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 2458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:7"
									},
									"returnParameters": {
										"id": 2457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2458,
												"src": "254:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:7"
									},
									"scope": 2487,
									"src": "212:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 2473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "487:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2460,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "507:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "500:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2459,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "500:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:17:7"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "566:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "559:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2462,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "588:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "581:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2464,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "581:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "610:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "602:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "635:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "627:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "659:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "652:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2470,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "652:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:129:7"
									},
									"scope": 2487,
									"src": "478:203:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 2486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "694:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:2:7"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "761:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "754:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2475,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "754:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "783:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "776:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2477,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "776:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "805:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "797:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "830:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "822:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "854:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "847:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2483,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "847:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:129:7"
									},
									"scope": 2487,
									"src": "685:191:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2488,
							"src": "57:821:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:847:7"
				},
				"id": 7
			}
		}
	}
}